{"version":3,"sources":["components/MainMenu.tsx","WebGL.ts","../../three.quarks-core/dist/three.quarks.esm.js","example/ToonProjectile.ts","example/BulletMuzzle.ts","example/BulletProjectile.ts","example/ToonExplosion.ts","example/Explosion.ts","example/LevelUp.ts","example/PickUp.ts","example/ShipSmoke.ts","example/ElectricBall.ts","example/ShipTrail.ts","components/ApplicationContext.tsx","components/ThreejsViewport.tsx","components/editors/NumberInput.tsx","components/editors/Vector3Editor.tsx","components/editors/StringInput.tsx","components/ObjectProperties.tsx","components/editors/ColorEditor.tsx","components/editors/bezier/TransformComponent.tsx","components/editors/bezier/CurveComponent.tsx","components/editors/bezier/HandleComponent.tsx","components/editors/bezier/BezierCurvesEditor.tsx","components/editors/GeneratorEditor.tsx","components/ParticleSystemProperties.tsx","components/editors/FileInput.tsx","components/TexturePicker.tsx","components/ParticleRendererProperties.tsx","components/editors/ScriptEditor.tsx","components/ScriptProperties.tsx","components/EmitterShapeProperties.tsx","components/ParticleSystemController.tsx","components/BehaviorsProperties.tsx","components/PropertiesEditor.tsx","util/CodeExporter.ts","components/ScrollDialog.tsx","components/SceneGraphViewMaterial.tsx","components/Application.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styles","createStyles","theme","root","flexGrow","menuIcon","marginRight","spacing","menuButton","title","MainMenu","props","fileRef","openFileDialog","e","current","click","importFile","target","files","onImport","openDemo","demoIndex","onOpenDemo","handleMenuClick","event","console","log","currentTarget","setState","anchorEl","handleMenuClose","undefined","state","React","classes","this","className","AppBar","position","Toolbar","variant","IconButton","edge","color","aria-label","Typography","Button","aria-controls","aria-haspopup","onClick","id","Menu","keepMounted","open","Boolean","onClose","MenuItem","onSaveAs","ref","type","multiple","accept","style","display","onChange","withStyles","withTheme","WEBGL","isWebGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","isWebGL2Available","WebGL2RenderingContext","getWebGLErrorMessage","getErrorMessage","getWebGL2ErrorMessage","version","contexts","1","2","message","element","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","replace","innerHTML","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","RenderMode","particle_frag","particle_vert","local_particle_vert","stretched_bb_particle_vert","_Mesh","ParticleEmitter","system","parameters","_this","call","geometry","renderMode","BillBoard","speedFactor","worldSpace","instancingGeometry","Float32Array","uniforms","defines","interleavedBuffer","setIndex","setAttribute","offsetBuffer","maxParticle","setUsage","colorBuffer","rotationBuffer","sizeBuffer","tiling","texture","copy","matrix","uTileCount","vTileCount","tileCount","uvTileBuffer","LocalSpaceBillBoard","vertexShader","side","material","fragmentShader","transparent","depthWrite","blending","StretchedBillBoard","Error","velocityBuffer","frustumCulled","clone","emitter","particles","particleNum","instanceCount","i","particle","setXYZ","x","y","z","setXYZW","w","setX","rotation","size","velocity","uvTile","updateRange","count","needsUpdate","dispose","cache","values","data","metadata","push","meta","isRootObject","output","geometries","materials","textures","images","shapes","generator","object","uuid","name","castShadow","receiveShadow","visible","renderOrder","JSON","stringify","userData","layers","mask","toArray","matrixAutoUpdate","ps","toJSON","children","length","extractFromCache","Particle","ConstantValue","json","IntervalValue","a","b","lerp","Math","random","PiecewiseFunction","functions","Array","t","mid","left","right","getStartX","getEndX","index","func","get","Bezier","p1","p2","p3","p4","p","t2","t3","mt","mt2","mt3","points","dpoints","c","list","j","dpt","derivativeCoefficients","d0","d1","pt","_p","q","idx","l","hull","span","p0","_PiecewiseFunction","PiecewiseBezier","_this2","curves","arguments","findFunction","error","genValue","segments","result","join","map","_ref","_ref2","bezier","start","function","_ref3","_ref4","piecewiseFunction","fromJSON","ValueGeneratorFromJSON","ColorToJSON","r","g","RandomColor","rand","ColorRange","ConstantColor","ColorGeneratorFromJSON","ColorOverLife","delta","genColor","age","life","startColor","RotationOverLife","angularVelocityFunc","angularVelocity","SizeOverLife","startSize","FrameOverLife","floor","OrbitOverLife","atan2","len","sqrt","cos","sin","ConeEmitter","radius","arc","PI","thickness","angle","u","theta","sinTheta","cosTheta","set","addScaledVector","multiplyScalar","startSpeed","SphereEmitter","v","phi","acos","cbrt","sinPhi","cosPhi","setScalar","PointEmitter","DonutEmitter","ParticleSystem","autoDestroy","duration","looping","startLife","startRotation","emissionOverTime","emissionOverDistance","emissionBursts","emitterShape","shape","behaviors","startTileIndex","burstIndex","burstWaveIndex","time","paused","waitEmiting","emitEnded","markForDestroy","initialize","applyMatrix4","matrixWorld","applyMatrix3","normalMatrix","parent","remove","endEmit","getNormalMatrix","totalSpawn","spawn","probability","_i","_particle","update","oldWorldMatrix","image","url","from","array","behavior","newEmissionBursts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","emissionBurst","newEmissionBurst","assign","err","return","newBehaviors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","BehaviorFromJSON","TEXTURE_MAPPING","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","TEXTURE_WRAPPING","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","TEXTURE_FILTER","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","QuarksLoader","manager","resourcePath","path","crossOrigin","onLoad","onProgress","onError","scope","extractUrlBase","loader","setPath","load","text","parse","toLowerCase","itemStart","itemEnd","itemError","setCrossOrigin","il","isArray","jl","currentUrl","test","loadImage","parseConstant","warn","mapping","offset","fromArray","repeat","center","wrap","wrapS","wrapT","format","encoding","minFilter","magFilter","anisotropy","flipY","premultiplyAlpha","unpackAlignment","decompose","quaternion","scale","add","parseObject","parseImages","parseTextures","_PiecewiseFunction2","Gradient","_this3","getFunction","_ref5","_ref6","range","_ref7","_ref8","SpeedOverLife","normalize","ToonProjectile","smoke","glowBeam","mainBeam","TextureLoader","Vector4","AdditiveBlending","addBehavior","NormalBlending","rotateY","script","Function","Group","BulletMuzzle","beam","muzzle1","muzzle2","flash","cycle","interval","muzzle","BulletProjectile","hProjectile","vProjectile","projectileParam","ToonExplosion","circle","Explosion","gatherParticles","mainColor","yellowColor","secColor","yellowColor2","LevelUp","glow","glow2","yellow","glowParam","glow2Param","particleParam","PickUp","upflow","darkOrangeColor","redColor","ShipSmoke","grey","ElectricBall","beamWorld","electricity","electricBall","texture2","ShipTrail","ApplicationContext","ApplicationContextConsumer","Consumer","ApplicationContextProvider","removeObject3d","object3D","duplicateObject3d","addObject3d","scene","Mesh","BoxBufferGeometry","MeshStandardMaterial","actions","select","animate","updateProperties","texture1","createScene","selection","img","file","Blob","href","URL","createObjectURL","download","nFiles","nFileId","jsonURL","selectAddition","indexOf","updateParticleSystem","addTexture","textureImage","demoObject","THREE","Color","axisHelper","AxesHelper","light","PointLight","ambientLight","AmbientLight","Provider","ThreejsViewport","container","stats","camera","renderer","clock","controls","appContext","onResize","domElement","parentElement","clientWidth","clientHeight","height","newWidth","newHeight","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","renderScene","init","prevProps","prevState","snapshot","body","appendChild","WebGLRenderer","Clock","PerspectiveCamera","OrbitControls","enableKeys","enableDamping","dampingFactor","rotateSpeed","setPixelRatio","devicePixelRatio","Stats","dom","getDelta","traverse","render","context","NumberInput","inputValue","setInputValue","focus","setFocus","onBlur","parseFloat","onFocus","onKeyDown","Vector3Editor","unitConversion","StringInput","ObjectProperties","onChangeName","object3d","onChangePosition","onChangeScale","onChangeRotation","ConvertToColor","ColorEditor","setOpen","backgroundColor","colorResult","min","rgb","interp","TransformComponent","xFrom","xTo","yFrom","yTo","nextProps","Component","CurveComponent","curveColor","curveWidth","curve","fill","stroke","strokeWidth","d","HandleComponent","xstart","ystart","handleRadius","handleColor","hover","down","handleStroke","xval","yval","onMouseEnter","onMouseLeave","onMouseDown","sx","sy","cx","cy","cxs","cys","x1","y1","x2","y2","BezierCurvesEditor","rootRef","createRef","positionForEvent","rect","getBoundingClientRect","clientX","clientY","top","inversex","inversey","onDownLeave","onDownMove","preventDefault","curveIndex","old","setStartX","pCurve","setFunction","setEndX","numOfFunctions","nCurve","onDownUp","h","defaultP","slope0","getSlope","slope1","onDownHandle","onEnterHandle","onLeaveHandle","onMouseMove","onMouseUp","ValueToEditor","GeneratorEditor","changeEditor","updateGenerator","changeValue","changeColor","changeValueA","changeValueB","changeColorRangeA","colorRange","changeColorRangeB","changeRandomColorA","randomColor","changeRandomColorB","changeCurve","allowedType","editorTypes","valueType","editorType","editor","currentEditor","getEditorType","ParticleSystemProperties","onChangeStartSpeed","particleSystem","onChangeStartLife","onChangeStartSize","onChangeStartColor","OnChangeStartRotation","OnChangeEmissionOverTime","valueFunctionTypes","colorValueFunctionTypes","FileInput","handleChange","htmlFor","component","useStyles","makeStyles","flexWrap","justifyContent","overflow","palette","paper","gridList","DialogTitle","closeButton","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","TexturePicker","useState","selected","setSelected","Dialog","handleClose","aria-labelledby","dividers","GridList","cellHeight","cols","GridListTile","src","alt","GridListTileBar","subtitle","handleUpload","handleSelect","ParticleRendererProperties","onChangeStartTile","onChangeUTileCount","onChangeVTileCount","onChangeBlending","getValueOfBlending","onUploadTexture","Texture","onload","reader","FileReader","readAsDataURL","onChangeTexture","closeTexturePicker","texturePickerOpen","openTexturePicker","ScriptEditor","onValueChange","highlight","code","languages","javascript","ScriptProperties","onChangeScript","EmitterShapeProperties","getValueOfShape","onChangeShape","onChangeKeyValue","k","properties","renderShapeProperties","PureComponent","ParticleSystemController","getSystems","systems","checkPause","forEach","togglePause","play","pause","onRestart","restart","onStop","ToggleButtonGroup","ButtonGroup","disabled","listRoot","BehaviorsProperties","checked","setChecked","selectedIndex","setSelectedIndex","setAnchorEl","onAddNewBehavior","onChangeBehaviorFunc","splice","List","dense","valueTypes","labelId","ListItem","handleListItemClick","ListItemIcon","Checkbox","currentIndex","newChecked","inputProps","ListItemText","primary","secondary","Accordion","border","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","marginBottom","minHeight","content","expandIcon","MuiAccordionSummary","heading","typography","pxToRem","fontWeightRegular","PropertiesEditor","setExpanded","panel","isExpanded","AccordionDetails","CodeExporter","str","word","toUpperCase","indent","exportColor","exportBezier","camelize","exportFunction","camelizeClass","exportParticleEmitter","ScrollDialog","useRef","scroll","aria-describedby","SceneGraphViewMaterial","setCode","nodeIds","countIndex","res","newIndex","parseInt","handleToggle","tagName","getObjectName","TreeView","onNodeToggle","onNodeSelect","defaultCollapseIcon","defaultExpandIcon","renderObject","items","originIndex","TreeItem","nodeId","label","Fragment","contextProps","exportCode","Application","createMuiTheme","main","blue","red","App","ThemeProvider","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.167d1d56.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {createStyles, Theme, Typography, Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface MainMenuProps {\n    onSaveAs: () => void;\n    onImport: (files: FileList) => void;\n    onOpenDemo: (demoIndex: number) => void;\n    classes: any\n}\n\ninterface MainMenuState {\n    anchorEl?: Element\n}\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuIcon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        marginRight: theme.spacing(1),\n        //flexGrow: 1,\n    },\n}));\n\nclass MainMenu extends React.PureComponent<MainMenuProps, MainMenuState> {\n    private fileRef: React.RefObject<HTMLInputElement>;\n\n    constructor(props: Readonly<MainMenuProps>) {\n        super(props);\n        this.state = {\n            anchorEl: undefined\n        }\n\n        this.fileRef = React.createRef();\n    }\n\n    openFileDialog = (e: React.MouseEvent<Element, MouseEvent>) => {\n        if (this.fileRef.current)\n            this.fileRef.current.click();\n    };\n\n    importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onImport(e.target.files);\n    };\n\n    openDemo = (demoIndex: number) => {\n        this.props.onOpenDemo(demoIndex);\n    };\n\n    handleMenuClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n        console.log(event.currentTarget);\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: undefined});\n    };\n\n    render() {\n        //<Image size='mini' src='/logo.png' style={{ marginRight: '1.5em' }} />\n        //<MenuIcon />\n        //<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n        //</IconButton>\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\">\n                        <IconButton edge=\"start\" className={classes.menuIcon} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Three.Quarks\n                        </Typography>\n                        <Button color=\"inherit\" className={classes.menuButton} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"file-button\">\n                            File\n                        </Button>\n                        <Menu\n                            id=\"file-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"file-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem>New</MenuItem>\n                            <MenuItem onClick={this.openFileDialog}>Open</MenuItem>\n                            <MenuItem onClick={this.props.onSaveAs}>Download</MenuItem>\n                            <input ref={this.fileRef} type=\"file\" id=\"fileElem\" multiple accept=\"application/json\"\n                                   style={{display: \"none\"}}\n                                   onChange={this.importFile}/>\n                        </Menu>\n                        <Button color=\"inherit\" className={classes.menuButton} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"demo-button\">\n                            Demo\n                        </Button>\n                        <Menu\n                            id=\"demo-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"demo-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem onClick={() => this.openDemo(0)}>PlasmaProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(1)}>BulletMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(2)}>BulletProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(3)}>ShipSmoke</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(4)}>HitImpact</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(5)}>Explosion</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(6)}>Levelup</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(7)}>Pickup</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(8)}>ElectricBall</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(9)}>ShipTrail</MenuItem>\n                        </Menu>\n                    </Toolbar>\n                </AppBar>\n            </div>);\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(MainMenu);","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport const WEBGL = {\n    isWebGLAvailable: function () {\n\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n        } catch ( e ) {\n            return false;\n        }\n\n    },\n\n    isWebGL2Available: function () {\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n        } catch ( e ) {\n            return false;\n        }\n    },\n\n    getWebGLErrorMessage: function () {\n        return this.getErrorMessage( 1 );\n    },\n\n    getWebGL2ErrorMessage: function () {\n        return this.getErrorMessage( 2 );\n    },\n\n    getErrorMessage: function ( version: number ) {\n        const names :{[version:number]: string} = {\n            1: 'WebGL',\n            2: 'WebGL 2'\n        };\n\n        const contexts :{[version:number]: string} = {\n            // @ts-ignore\n            1: window.WebGLRenderingContext,\n            // @ts-ignore\n            2: window.WebGL2RenderingContext\n        };\n\n        let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n        const element = document.createElement( 'div' );\n        element.id = 'webglmessage';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if ( contexts[ version ] ) {\n            message = message.replace( '$0', 'graphics card' );\n        } else {\n            message = message.replace( '$0', 'browser' );\n        }\n        message = message.replace( '$1', names[ version ] );\n        element.innerHTML = message;\n\n        return element;\n    }\n\n};\n","import _slicedToArray from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * three.quarks v0.2.6 build Mon Jan 11 2021\n * https://github.com/Alchemist0823/three.quarks#readme\n * Copyright 2021 undefined, MIT\n */\nimport { Mesh, InstancedBufferGeometry, InterleavedBuffer, InterleavedBufferAttribute, InstancedBufferAttribute, DynamicDrawUsage, Uniform, Matrix3, Vector2, ShaderMaterial, AdditiveBlending, DoubleSide, FrontSide, Vector4, Vector3, MathUtils, Matrix4, DefaultLoadingManager, LoaderUtils, FileLoader, LoadingManager, ImageLoader, CubeTexture, Texture, Object3D, Group, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter } from 'three';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar particle_frag =\n/* glsl */\n\"\\n\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\nvarying vec4 vColor;\\n\\nvoid main() {\\n\\n    #include <clipping_planes_fragment>\\n    \\n    vec3 outgoingLight = vec3( 0.0 );\\n    vec4 diffuseColor = vColor;\\n    \\n    #include <logdepthbuf_fragment>\\n    \\n    #ifdef USE_MAP\\n    vec4 texelColor = texture2D( map, vUv);\\n    diffuseColor *= texelColor;\\n    #endif\\n\\n    outgoingLight = diffuseColor.rgb;\\n\\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n    \\n    #include <tonemapping_fragment>\\n\\n}\\n\";\n/*\n    gl_FragColor = vec4(vUv.x, vUv.y, 1.0, 1.0);\n\n    #ifdef USE_MAP\n    vec4 texelColor = texture2D( map, vUv);\n    diffuseColor *= texelColor;\n    #endif\n\n    outgoingLight = diffuseColor.rgb;\n\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n*/\n\nvar particle_vert =\n/* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset, 1.0 );\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n\\t#endif\\n\\t\\n    vec2 alignedPosition = ( position.xy ) * size;\\n    \\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n    \\n    mvPosition.xy += rotatedPosition;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar local_particle_vert =\n/* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n    vec2 alignedPosition = ( position.xy ) * size;\\n    \\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n    \\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset + vec3(rotatedPosition, 0.0), 1.0 );\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset + vec3(rotatedPosition, 0.0), 1.0 );\\n\\t#endif\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\nvar stretched_bb_particle_vert =\n/* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute vec3 velocity;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nuniform float speedFactor;\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset, 1.0 );\\n        vec3 viewVelocity = vec3(viewMatrix * vec4(velocity, 1.0));\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n        vec3 viewVelocity = vec3(modelViewMatrix * vec4(velocity, 1.0));\\n\\t#endif\\n\\n    vec3 scaledPos = vec3(position.xy * size, position.z);\\n    mvPosition.xyz += scaledPos + dot(scaledPos, viewVelocity) * viewVelocity / length(viewVelocity) * speedFactor;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\n    vec3 instancePos = vec3(position.xy * size, position.z);\n    instancePos += dot(instancePos, viewVelocity) * viewVelocity * speedFactor;\n    mvPosition.xyz += instancePos;\n\n\tvColor = color; //vec4(1, 1, 1, 1); //color; //length(viewVelocity) * 0.1\n\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar RenderMode;\n\n(function (RenderMode) {\n  RenderMode[RenderMode[\"BillBoard\"] = 0] = \"BillBoard\";\n  RenderMode[RenderMode[\"StretchedBillBoard\"] = 1] = \"StretchedBillBoard\";\n  RenderMode[RenderMode[\"LocalSpaceBillBoard\"] = 2] = \"LocalSpaceBillBoard\";\n})(RenderMode || (RenderMode = {}));\n\nvar ParticleEmitter = /*#__PURE__*/function (_Mesh) {\n  _inherits(ParticleEmitter, _Mesh);\n\n  function ParticleEmitter(system, parameters) {\n    var _this;\n\n    _classCallCheck(this, ParticleEmitter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ParticleEmitter).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"ParticleEmitter\");\n\n    _defineProperty(_assertThisInitialized(_this), \"system\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"geometry\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"material\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"interleavedBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"sizeBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"colorBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"tiling\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uvTileBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"speedFactor\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"worldSpace\", void 0);\n\n    _this.system = system;\n    _this.geometry = new InstancedBufferGeometry();\n    _this.renderMode = parameters.renderMode || RenderMode.BillBoard;\n    _this.speedFactor = parameters.speedFactor || 1;\n    _this.worldSpace = parameters.worldSpace !== undefined ? parameters.worldSpace : false;\n    var instancingGeometry = new Float32Array(parameters.instancingGeometry || [-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n    var uniforms = {};\n    var defines = {};\n    _this.interleavedBuffer = new InterleavedBuffer(instancingGeometry, 5);\n\n    _this.geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n    _this.geometry.setAttribute('position', new InterleavedBufferAttribute(_this.interleavedBuffer, 3, 0, false));\n\n    _this.geometry.setAttribute('uv', new InterleavedBufferAttribute(_this.interleavedBuffer, 2, 3, false));\n\n    _this.offsetBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle * 3), 3);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('offset', _this.offsetBuffer);\n\n    _this.colorBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle * 4), 4);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('color', _this.colorBuffer);\n\n    _this.rotationBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('rotation', _this.rotationBuffer);\n\n    _this.sizeBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('size', _this.sizeBuffer);\n\n    _this.tiling = true;\n\n    if (parameters.texture) {\n      defines['USE_MAP'] = '';\n      defines['USE_UV'] = '';\n      uniforms['map'] = new Uniform(parameters.texture); //@ts-ignore\n\n      uniforms['uvTransform'] = new Uniform(new Matrix3().copy(parameters.texture.matrix));\n      var uTileCount = parameters.uTileCount || 1;\n      var vTileCount = parameters.vTileCount || 1; //this.tiling = uTileCount > 1 || vTileCount > 1;\n\n      _this.system.tileCount = uTileCount * vTileCount;\n\n      if (_this.tiling) {\n        _this.uvTileBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n\n        _this.uvTileBuffer.setUsage(DynamicDrawUsage);\n\n        _this.geometry.setAttribute('uvTile', _this.uvTileBuffer);\n\n        defines['UV_TILE'] = '';\n        uniforms['tileCount'] = new Uniform(new Vector2(uTileCount, vTileCount));\n      }\n    }\n\n    if (parameters.worldSpace !== undefined ? parameters.worldSpace : true) {\n      defines['WORLD_SPACE'] = '';\n    }\n\n    if (_this.renderMode === RenderMode.BillBoard || _this.renderMode === RenderMode.LocalSpaceBillBoard) {\n      var vertexShader;\n      var side;\n\n      if (_this.renderMode === RenderMode.LocalSpaceBillBoard) {\n        vertexShader = local_particle_vert;\n        side = DoubleSide;\n      } else {\n        vertexShader = particle_vert;\n        side = FrontSide;\n      }\n\n      _this.material = new ShaderMaterial({\n        uniforms: uniforms,\n        defines: defines,\n        vertexShader: vertexShader,\n        fragmentShader: particle_frag,\n        transparent: true,\n        depthWrite: false,\n        blending: parameters.blending || AdditiveBlending,\n        side: side\n      });\n    } else if (_this.renderMode === RenderMode.StretchedBillBoard) {\n      _this.velocityBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle * 3), 3);\n\n      _this.velocityBuffer.setUsage(DynamicDrawUsage);\n\n      _this.geometry.setAttribute('velocity', _this.velocityBuffer);\n\n      uniforms['speedFactor'] = new Uniform(parameters.speedFactor);\n      _this.material = new ShaderMaterial({\n        uniforms: uniforms,\n        defines: defines,\n        vertexShader: stretched_bb_particle_vert,\n        fragmentShader: particle_frag,\n        transparent: true,\n        depthWrite: false,\n        blending: parameters.blending || AdditiveBlending\n      });\n    } else {\n      throw new Error(\"render mode unavailable\");\n    } // TODO: implement boundingVolume\n\n\n    _this.frustumCulled = false;\n    return _this;\n  }\n\n  _createClass(ParticleEmitter, [{\n    key: \"clone\",\n    value: function clone() {\n      var system = this.system.clone();\n      return system.emitter;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var particles = this.system.particles;\n      var particleNum = this.system.particleNum;\n      this.geometry.instanceCount = particleNum;\n\n      for (var i = 0; i < particleNum; i++) {\n        var particle = particles[i];\n        this.offsetBuffer.setXYZ(i, particle.position.x, particle.position.y, particle.position.z);\n        this.colorBuffer.setXYZW(i, particle.color.x, particle.color.y, particle.color.z, particle.color.w);\n        this.rotationBuffer.setX(i, particle.rotation);\n        this.sizeBuffer.setX(i, particle.size);\n\n        if (this.renderMode === RenderMode.StretchedBillBoard) {\n          this.velocityBuffer.setXYZ(i, particle.velocity.x, particle.velocity.y, particle.velocity.z);\n        }\n\n        if (this.tiling) {\n          this.uvTileBuffer.setX(i, particle.uvTile);\n        }\n      }\n\n      if (particleNum > 0) {\n        this.offsetBuffer.updateRange.count = particleNum * 3;\n        this.offsetBuffer.needsUpdate = true;\n        this.colorBuffer.updateRange.count = particleNum * 4;\n        this.colorBuffer.needsUpdate = true;\n        this.rotationBuffer.updateRange.count = particleNum;\n        this.rotationBuffer.needsUpdate = true;\n        this.sizeBuffer.updateRange.count = particleNum;\n        this.sizeBuffer.needsUpdate = true;\n\n        if (this.renderMode === RenderMode.StretchedBillBoard) {\n          this.velocityBuffer.updateRange.count = particleNum * 3;\n          this.velocityBuffer.needsUpdate = true;\n        }\n\n        if (this.tiling) {\n          this.uvTileBuffer.updateRange.count = particleNum;\n          this.uvTileBuffer.needsUpdate = true;\n        }\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n    } // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n  }, {\n    key: \"extractFromCache\",\n    value: function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n      if (this.system !== null) object.ps = this.system.toJSON(meta);\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = this.extractFromCache(meta.geometries);\n        var materials = this.extractFromCache(meta.materials);\n        var textures = this.extractFromCache(meta.textures);\n        var images = this.extractFromCache(meta.images);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n      }\n\n      output.object = object;\n      return output;\n    }\n  }]);\n\n  return ParticleEmitter;\n}(Mesh);\n\nvar Particle = function Particle() {\n  _classCallCheck(this, Particle);\n\n  _defineProperty(this, \"startSpeed\", 0);\n\n  _defineProperty(this, \"startColor\", new Vector4());\n\n  _defineProperty(this, \"startSize\", 1);\n\n  _defineProperty(this, \"velocity\", new Vector3());\n\n  _defineProperty(this, \"age\", 0);\n\n  _defineProperty(this, \"life\", 1);\n\n  _defineProperty(this, \"angularVelocity\", void 0);\n\n  _defineProperty(this, \"position\", new Vector3());\n\n  _defineProperty(this, \"rotation\", 0);\n\n  _defineProperty(this, \"size\", 1);\n\n  _defineProperty(this, \"color\", new Vector4());\n\n  _defineProperty(this, \"uvTile\", 0);\n};\n\nvar ConstantValue = /*#__PURE__*/function () {\n  function ConstantValue(value) {\n    _classCallCheck(this, ConstantValue);\n\n    this.value = value;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return this.value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantValue\",\n        value: this.value\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantValue(this.value);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantValue(json.value);\n    }\n  }]);\n\n  return ConstantValue;\n}();\n\nvar IntervalValue = /*#__PURE__*/function () {\n  function IntervalValue(a, b) {\n    _classCallCheck(this, IntervalValue);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(IntervalValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return MathUtils.lerp(this.a, this.b, Math.random());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"IntervalValue\",\n        a: this.a,\n        b: this.b\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new IntervalValue(this.a, this.b);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new IntervalValue(json.a, json.b);\n    }\n  }]);\n\n  return IntervalValue;\n}();\n\nvar PiecewiseFunction = /*#__PURE__*/function () {\n  function PiecewiseFunction() {\n    _classCallCheck(this, PiecewiseFunction);\n\n    _defineProperty(this, \"functions\", void 0);\n\n    this.functions = new Array();\n  }\n\n  _createClass(PiecewiseFunction, [{\n    key: \"findFunction\",\n    value: function findFunction(t) {\n      var mid = 0;\n      var left = 0,\n          right = this.functions.length - 1;\n\n      while (left + 1 < right) {\n        mid = (left + right) / 2;\n        if (t < this.getStartX(mid)) right = mid - 1;else if (t > this.getEndX(mid)) left = mid + 1;else return mid;\n      }\n\n      for (var i = left; i <= right; i++) {\n        if (t >= this.functions[i][1] && t <= this.getEndX(i)) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"getStartX\",\n    value: function getStartX(index) {\n      return this.functions[index][1];\n    }\n  }, {\n    key: \"setStartX\",\n    value: function setStartX(index, x) {\n      if (index > 0) this.functions[index][1] = x;\n    }\n  }, {\n    key: \"getEndX\",\n    value: function getEndX(index) {\n      if (index + 1 < this.functions.length) return this.functions[index + 1][1];\n      return 1;\n    }\n  }, {\n    key: \"setEndX\",\n    value: function setEndX(index, x) {\n      if (index + 1 < this.functions.length) this.functions[index + 1][1] = x;\n    }\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(index) {\n      return this.functions[index][0];\n    }\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(index, func) {\n      this.functions[index][0] = func;\n    }\n  }, {\n    key: \"numOfFunctions\",\n    get: function get() {\n      return this.functions.length;\n    }\n  }]);\n\n  return PiecewiseFunction;\n}();\n\nvar Bezier = /*#__PURE__*/function () {\n  function Bezier(p1, p2, p3, p4) {\n    _classCallCheck(this, Bezier);\n\n    _defineProperty(this, \"p\", void 0);\n\n    this.p = [p1, p2, p3, p4];\n  }\n\n  _createClass(Bezier, [{\n    key: \"genValue\",\n    value: function genValue(t) {\n      var t2 = t * t;\n      var t3 = t * t * t;\n      var mt = 1 - t;\n      var mt2 = mt * mt;\n      var mt3 = mt2 * mt;\n      return this.p[0] * mt3 + this.p[1] * mt2 * t * 3 + this.p[2] * mt * t2 * 3 + this.p[3] * t3;\n    } // get the coefficients of the polynomial's derivatives\n\n  }, {\n    key: \"derivativeCoefficients\",\n    value: function derivativeCoefficients(points) {\n      var dpoints = [];\n\n      for (var p = points, c = p.length - 1; c > 0; c--) {\n        var list = [];\n\n        for (var j = 0; j < c; j++) {\n          var dpt = c * (p[j + 1] - p[j]);\n          list.push(dpt);\n        }\n\n        dpoints.push(list);\n        p = list;\n      }\n\n      return dpoints;\n    } // calculate the slope\n\n  }, {\n    key: \"getSlope\",\n    value: function getSlope(t) {\n      var p = this.derivativeCoefficients(this.p)[0];\n      var mt = 1 - t;\n      var a = mt * mt;\n      var b = mt * t * 2;\n      var c = t * t;\n      return a * p[0] + b * p[1] + c * p[2]; //return  a * (p[1] - p[0]) * 3 + b * (p[2] - p[1]) * 3 + c * (p[3] - p[2]) * 3;\n    } // derivative(0) = (p[1] - p[0]) * 3\n    // derivative(1) = (p[3] - p[2]) * 3\n\n  }, {\n    key: \"controlCurve\",\n    value: function controlCurve(d0, d1) {\n      this.p[1] = d0 / 3 + this.p[0];\n      this.p[2] = this.p[3] - d1 / 3;\n    }\n  }, {\n    key: \"hull\",\n    value: function hull(t) {\n      var p = this.p;\n      var _p = [],\n          pt,\n          q = [],\n          idx = 0,\n          i = 0,\n          l = 0;\n      q[idx++] = p[0];\n      q[idx++] = p[1];\n      q[idx++] = p[2];\n      q[idx++] = p[3]; // we lerp between all points at each iteration, until we have 1 point left.\n\n      while (p.length > 1) {\n        _p = [];\n\n        for (i = 0, l = p.length - 1; i < l; i++) {\n          pt = t * p[i] + (1 - t) * p[i + 1];\n          q[idx++] = pt;\n\n          _p.push(pt);\n        }\n\n        p = _p;\n      }\n\n      return q;\n    }\n  }, {\n    key: \"split\",\n    value: function split(t) {\n      // no shortcut: use \"de Casteljau\" iteration.\n      var q = this.hull(t);\n      var result = {\n        left: new Bezier(q[0], q[4], q[7], q[9]),\n        right: new Bezier(q[9], q[8], q[6], q[3]),\n        span: q\n      };\n      return result;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Bezier(this.p[0], this.p[1], this.p[2], this.p[3]);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        p0: this.p[0],\n        p1: this.p[1],\n        p2: this.p[2],\n        p3: this.p[3]\n      };\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Bezier(json.p0, json.p1, json.p2, json.p3);\n    }\n  }]);\n\n  return Bezier;\n}();\n\nvar PiecewiseBezier = /*#__PURE__*/function (_PiecewiseFunction) {\n  _inherits(PiecewiseBezier, _PiecewiseFunction);\n\n  // default linear bezier\n  function PiecewiseBezier() {\n    var _this2;\n\n    var curves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new Bezier(0, 1.0 / 3, 1.0 / 3 * 2, 1), 0]];\n\n    _classCallCheck(this, PiecewiseBezier);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(PiecewiseBezier).call(this));\n\n    _defineProperty(_assertThisInitialized(_this2), \"type\", void 0);\n\n    _this2.type = \"function\";\n    _this2.functions = curves;\n    return _this2;\n  }\n\n  _createClass(PiecewiseBezier, [{\n    key: \"genValue\",\n    value: function genValue() {\n      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return 0;\n      }\n\n      return this.functions[index][0].genValue((t - this.getStartX(index)) / (this.getEndX(index) - this.getStartX(index)));\n    }\n  }, {\n    key: \"toSVG\",\n    value: function toSVG(length, segments) {\n      if (segments < 1) return \"\";\n      var result = [\"M\", 0, this.functions[0][0].p[0]].join(\" \");\n\n      for (var i = 1.0 / segments; i <= 1; i += 1.0 / segments) {\n        result = [result, \"L\", i * length, this.genValue(i)].join(\" \");\n      }\n\n      return result;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"PiecewiseBezier\",\n        functions: this.functions.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              bezier = _ref2[0],\n              start = _ref2[1];\n\n          return {\n            function: bezier.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PiecewiseBezier(this.functions.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            bezier = _ref4[0],\n            start = _ref4[1];\n\n        return [bezier.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new PiecewiseBezier(json.functions.map(function (piecewiseFunction) {\n        return [Bezier.fromJSON(piecewiseFunction.function), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return PiecewiseBezier;\n}(PiecewiseFunction);\n\nfunction ValueGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantValue':\n      return ConstantValue.fromJSON(json);\n\n    case 'IntervalValue':\n      return IntervalValue.fromJSON(json);\n\n    case 'PiecewiseBezier':\n      return PiecewiseBezier.fromJSON(json);\n\n    default:\n      return new ConstantValue(0);\n  }\n}\n\nvar ColorToJSON = function ColorToJSON(color) {\n  return {\n    r: color.x,\n    g: color.y,\n    b: color.z,\n    a: color.w\n  };\n};\n\nvar JSONToColor = function JSONToColor(json) {\n  return new Vector4(json.r, json.g, json.b, json.a);\n};\n\nvar RandomColor = /*#__PURE__*/function () {\n  function RandomColor(a, b) {\n    _classCallCheck(this, RandomColor);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(RandomColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      var rand = Math.random();\n      return color.copy(this.a).lerp(this.b, rand);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"RandomColor\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RandomColor(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new RandomColor(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return RandomColor;\n}();\n\nvar ColorRange = /*#__PURE__*/function () {\n  function ColorRange(a, b) {\n    _classCallCheck(this, ColorRange);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"function\";\n  }\n\n  _createClass(ColorRange, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      return color.copy(this.a).lerp(this.b, t);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ColorRange\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorRange(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ColorRange(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return ColorRange;\n}();\n\nvar ConstantColor = /*#__PURE__*/function () {\n  function ConstantColor(color) {\n    _classCallCheck(this, ConstantColor);\n\n    this.color = color;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      return color.copy(this.color);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantColor\",\n        color: ColorToJSON(this.color)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantColor(this.color.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantColor(JSONToColor(json.color));\n    }\n  }]);\n\n  return ConstantColor;\n}();\n\nfunction ColorGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantColor':\n      return ConstantColor.fromJSON(json);\n\n    case 'ColorRange':\n      return ColorRange.fromJSON(json);\n\n    case 'RandomColor':\n      return RandomColor.fromJSON(json);\n\n    default:\n      return new ConstantColor(new Vector4(1, 1, 1, 1));\n  }\n}\n\nvar ColorOverLife = /*#__PURE__*/function () {\n  function ColorOverLife(func) {\n    _classCallCheck(this, ColorOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'ColorOverLife');\n  }\n\n  _createClass(ColorOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      this.func.genColor(particle.color, particle.age / particle.life);\n      particle.color.x *= particle.startColor.x;\n      particle.color.y *= particle.startColor.y;\n      particle.color.z *= particle.startColor.z;\n      particle.color.w *= particle.startColor.w;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorOverLife(this.func.clone());\n    }\n  }]);\n\n  return ColorOverLife;\n}();\n\nvar RotationOverLife = /*#__PURE__*/function () {\n  function RotationOverLife(angularVelocityFunc) {\n    _classCallCheck(this, RotationOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'RotationOverLife');\n  }\n\n  _createClass(RotationOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.rotation += delta * particle.angularVelocity;\n      } else {\n        particle.rotation += delta * this.angularVelocityFunc.genValue(particle.age / particle.life);\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RotationOverLife(this.angularVelocityFunc);\n    }\n  }]);\n\n  return RotationOverLife;\n}();\n\nvar SizeOverLife = /*#__PURE__*/function () {\n  _createClass(SizeOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }]);\n\n  function SizeOverLife(func) {\n    _classCallCheck(this, SizeOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SizeOverLife');\n  }\n\n  _createClass(SizeOverLife, [{\n    key: \"update\",\n    value: function update(particle) {\n      particle.size = particle.startSize * this.func.genValue(particle.age / particle.life);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SizeOverLife(this.func.clone());\n    }\n  }]);\n\n  return SizeOverLife;\n}();\n\nvar FrameOverLife = /*#__PURE__*/function () {\n  function FrameOverLife(func) {\n    _classCallCheck(this, FrameOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'FrameOverLife');\n  }\n\n  _createClass(FrameOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      particle.uvTile = Math.floor(this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new FrameOverLife(this.func.clone());\n    }\n  }]);\n\n  return FrameOverLife;\n}();\n\nvar V3_ZERO = new Vector3();\n\nvar OrbitOverLife = /*#__PURE__*/function () {\n  function OrbitOverLife(angularVelocityFunc) {\n    _classCallCheck(this, OrbitOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'OrbitOverLife');\n  }\n\n  _createClass(OrbitOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      var rotation = Math.atan2(particle.position.y, particle.position.x);\n      var len = Math.sqrt(particle.position.x * particle.position.x + particle.position.y * particle.position.y);\n      rotation += this.angularVelocityFunc.genValue(particle.age / particle.life) * delta;\n      particle.position.x = Math.cos(rotation) * len;\n      particle.position.y = Math.sin(rotation) * len; //let v1x = particle.position.x\n      //let v1y = particle.position.y;\n\n      /*let v2x = particle.position.y;\n      let v2y = -particle.position.x;\n      v2x /= len;\n      v2y /= len;\n      particle.position.distanceTo(V3_ZERO) * this.angularVelocityFunc.genValue(particle.age / particle.life);*/\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new OrbitOverLife(this.angularVelocityFunc.clone());\n    }\n  }]);\n\n  return OrbitOverLife;\n}();\n\nfunction BehaviorFromJSON(json) {\n  switch (json.type) {\n    case 'ColorOverLife':\n      return new ColorOverLife(ColorGeneratorFromJSON(json.func));\n\n    case 'RotationOverLife':\n      return new RotationOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'SizeOverLife':\n      return new SizeOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'FrameOverLife':\n      return new FrameOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'OrbitOverLife':\n      return new OrbitOverLife(ValueGeneratorFromJSON(json.func));\n\n    default:\n      return new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)));\n  }\n}\n\nvar ConeEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function ConeEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ConeEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(ConeEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"cone\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConeEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return ConeEmitter;\n}();\n\nvar SphereEmitter = /*#__PURE__*/function () {\n  //[0, 1]\n  function SphereEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SphereEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n  }\n\n  _createClass(SphereEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.position.x = r * sinPhi * cosTheta;\n      p.position.y = r * sinPhi * sinTheta;\n      p.position.z = r * cosPhi;\n      p.velocity.setScalar(0).addScaledVector(p.position, p.startSpeed);\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"sphere\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SphereEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      });\n    }\n  }]);\n\n  return SphereEmitter;\n}();\n\nvar PointEmitter = /*#__PURE__*/function () {\n  function PointEmitter() {\n    _classCallCheck(this, PointEmitter);\n  }\n\n  _createClass(PointEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var theta = u * Math.PI * 2;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(Math.random());\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.velocity.x = r * sinPhi * cosTheta;\n      p.velocity.y = r * sinPhi * sinTheta;\n      p.velocity.z = r * cosPhi;\n      p.velocity.multiplyScalar(p.startSpeed);\n      p.position.setScalar(0);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: 'point'\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PointEmitter();\n    }\n  }]);\n\n  return PointEmitter;\n}();\n\nvar DonutEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function DonutEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DonutEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(DonutEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"donut\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new DonutEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return DonutEmitter;\n}();\n\nvar ParticleSystem = /*#__PURE__*/function () {\n  _createClass(ParticleSystem, [{\n    key: \"texture\",\n    // parameters\n    // runtime data\n    get: function get() {\n      return this.emitter.material.uniforms.map.value;\n    },\n    set: function set(texture) {\n      this.emitter.material.uniforms.map.value = texture;\n    }\n  }, {\n    key: \"uTileCount\",\n    get: function get() {\n      return this.emitter.material.uniforms.tileCount.value.x;\n    },\n    set: function set(u) {\n      this.emitter.material.uniforms.tileCount.value.x = u;\n    }\n  }, {\n    key: \"vTileCount\",\n    get: function get() {\n      return this.emitter.material.uniforms.tileCount.value.y;\n    },\n    set: function set(v) {\n      this.emitter.material.uniforms.tileCount.value.y = v;\n    }\n  }, {\n    key: \"renderMode\",\n    get: function get() {\n      return this.emitter.renderMode;\n    }\n  }, {\n    key: \"speedFactor\",\n    get: function get() {\n      if (this.emitter.material.uniforms.speedFactor) {\n        return this.emitter.material.uniforms.speedFactor.value;\n      } else {\n        return 0;\n      }\n    },\n    set: function set(v) {\n      this.emitter.material.uniforms.speedFactor.value = v;\n    }\n  }, {\n    key: \"blending\",\n    get: function get() {\n      return this.emitter.material.blending;\n    },\n    set: function set(blending) {\n      this.emitter.material.blending = blending;\n    }\n  }]);\n\n  function ParticleSystem() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ParticleSystem);\n\n    _defineProperty(this, \"autoDestroy\", void 0);\n\n    _defineProperty(this, \"looping\", void 0);\n\n    _defineProperty(this, \"duration\", void 0);\n\n    _defineProperty(this, \"maxParticle\", void 0);\n\n    _defineProperty(this, \"startLife\", void 0);\n\n    _defineProperty(this, \"startSpeed\", void 0);\n\n    _defineProperty(this, \"startRotation\", void 0);\n\n    _defineProperty(this, \"startSize\", void 0);\n\n    _defineProperty(this, \"startColor\", void 0);\n\n    _defineProperty(this, \"startTileIndex\", void 0);\n\n    _defineProperty(this, \"emissionOverTime\", void 0);\n\n    _defineProperty(this, \"emissionOverDistance\", void 0);\n\n    _defineProperty(this, \"emissionBursts\", void 0);\n\n    _defineProperty(this, \"tileCount\", 1);\n\n    _defineProperty(this, \"worldSpace\", void 0);\n\n    _defineProperty(this, \"particleNum\", void 0);\n\n    _defineProperty(this, \"burstIndex\", void 0);\n\n    _defineProperty(this, \"burstWaveIndex\", void 0);\n\n    _defineProperty(this, \"time\", void 0);\n\n    _defineProperty(this, \"paused\", void 0);\n\n    _defineProperty(this, \"waitEmiting\", void 0);\n\n    _defineProperty(this, \"emitEnded\", void 0);\n\n    _defineProperty(this, \"markForDestroy\", void 0);\n\n    _defineProperty(this, \"behaviors\", void 0);\n\n    _defineProperty(this, \"particles\", void 0);\n\n    _defineProperty(this, \"emitterShape\", void 0);\n\n    _defineProperty(this, \"emitter\", void 0);\n\n    _defineProperty(this, \"oldWorldMatrix\", new Matrix4());\n\n    _defineProperty(this, \"normalMatrix\", new Matrix3());\n\n    this.autoDestroy = parameters.autoDestroy === undefined ? false : parameters.autoDestroy;\n    this.duration = parameters.duration || 1;\n    this.maxParticle = parameters.maxParticle || 100;\n    this.looping = parameters.looping === undefined ? true : parameters.looping;\n    this.startLife = parameters.startLife || new ConstantValue(5);\n    this.startSpeed = parameters.startSpeed || new ConstantValue(0);\n    this.startRotation = parameters.startRotation || new ConstantValue(0);\n    this.startSize = parameters.startSize || new ConstantValue(1);\n    this.startColor = parameters.startColor || new ConstantColor(new Vector4(1, 1, 1, 1));\n    this.emissionOverTime = parameters.emissionOverTime || new ConstantValue(10);\n    this.emissionOverDistance = parameters.emissionOverDistance || new ConstantValue(0);\n    this.emissionBursts = parameters.emissionBursts || [];\n    this.emitterShape = parameters.shape || new SphereEmitter();\n    this.behaviors = parameters.behaviors || new Array();\n    this.worldSpace = parameters.worldSpace === undefined ? false : parameters.worldSpace;\n    this.particles = new Array();\n    this.startTileIndex = parameters.startTileIndex || 0;\n    this.emitter = new ParticleEmitter(this, parameters);\n    this.particleNum = 0;\n    this.burstIndex = 0;\n    this.burstWaveIndex = 0;\n    this.time = 0;\n    this.paused = false;\n    this.waitEmiting = 0;\n    this.emitEnded = false;\n    this.markForDestroy = false;\n  }\n\n  _createClass(ParticleSystem, [{\n    key: \"pause\",\n    value: function pause() {\n      this.paused = true;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.paused = false;\n    }\n  }, {\n    key: \"spawn\",\n    value: function spawn(count) {\n      for (var i = 0; i < count && this.particleNum < this.maxParticle; i++) {\n        this.particleNum++;\n\n        while (this.particles.length < this.particleNum) {\n          this.particles.push(new Particle());\n        }\n\n        var particle = this.particles[this.particleNum - 1];\n        this.startColor.genColor(particle.startColor, this.time);\n        particle.color.copy(particle.startColor);\n        particle.startSpeed = this.startSpeed.genValue(this.time);\n        particle.life = this.startLife.genValue(this.time);\n        particle.age = 0;\n        particle.rotation = this.startRotation.genValue(this.time);\n        particle.startSize = particle.size = this.startSize.genValue(this.time);\n        particle.uvTile = this.startTileIndex;\n        this.emitterShape.initialize(particle);\n\n        if (this.worldSpace) {\n          particle.position.applyMatrix4(this.emitter.matrixWorld);\n          particle.velocity.applyMatrix3(this.normalMatrix);\n        }\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].initialize(particle);\n        }\n      }\n    }\n  }, {\n    key: \"endEmit\",\n    value: function endEmit() {\n      this.emitEnded = true;\n\n      if (this.autoDestroy) {\n        this.markForDestroy = true;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.emitter.dispose();\n      if (this.emitter.parent) this.emitter.parent.remove(this.emitter);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.paused = false;\n      this.particleNum = 0;\n      this.burstIndex = 0;\n      this.burstWaveIndex = 0;\n      this.time = 0;\n      this.waitEmiting = 0;\n      this.emitEnded = false;\n      this.markForDestroy = false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (delta > 0.1) delta = 0.1;\n      if (this.paused) return;\n\n      if (this.emitEnded && this.particleNum === 0) {\n        if (this.markForDestroy && this.emitter.parent) this.dispose();\n        return;\n      }\n\n      if (this.time > this.duration) {\n        if (this.looping) {\n          this.time -= this.duration;\n        } else {\n          if (!this.emitEnded) {\n            this.endEmit();\n          }\n        }\n      }\n\n      this.normalMatrix.getNormalMatrix(this.emitter.matrixWorld); // particle die\n\n      for (var i = 0; i < this.particleNum; i++) {\n        var particle = this.particles[i];\n\n        if (particle.age >= particle.life) {\n          this.particles[i] = this.particles[this.particleNum - 1];\n          this.particles[this.particleNum - 1] = particle;\n          this.particleNum--;\n          i--;\n        }\n      } // spawn\n\n\n      if (!this.emitEnded) {\n        var totalSpawn = Math.floor(this.waitEmiting);\n        this.spawn(totalSpawn);\n        this.waitEmiting -= totalSpawn;\n      } // spawn burst\n\n\n      while (this.burstIndex < this.emissionBursts.length && this.emissionBursts[this.burstIndex].time <= this.time) {\n        if (Math.random() < this.emissionBursts[this.burstIndex].probability) {\n          var count = this.emissionBursts[this.burstIndex].count;\n          this.spawn(count);\n        }\n\n        this.burstIndex++;\n      }\n\n      for (var _i = 0; _i < this.particleNum; _i++) {\n        var _particle = this.particles[_i];\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].update(_particle, delta);\n        }\n\n        _particle.position.addScaledVector(_particle.velocity, delta);\n\n        _particle.age += delta;\n      }\n\n      this.emitter.update();\n      this.oldWorldMatrix.copy(this.emitter.matrixWorld);\n\n      if (!this.emitEnded) {\n        this.waitEmiting += delta * this.emissionOverTime.genValue(this.time / this.duration);\n      }\n\n      this.time += delta;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      this.texture.toJSON(meta);\n\n      if (this.texture.image !== undefined) {\n        var image = this.texture.image;\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: this.texture.name\n        };\n      }\n\n      return {\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.toJSON(),\n        startLife: this.startLife.toJSON(),\n        startSpeed: this.startSpeed.toJSON(),\n        startRotation: this.startRotation.toJSON(),\n        startSize: this.startSize.toJSON(),\n        startColor: this.startColor.toJSON(),\n        emissionOverTime: this.emissionOverTime.toJSON(),\n        emissionOverDistance: this.emissionOverDistance.toJSON(),\n        emissionBursts: this.emissionBursts,\n        instancingGeometry: Array.from(this.emitter.interleavedBuffer.array),\n        renderMode: this.renderMode,\n        speedFactor: this.renderMode === RenderMode.StretchedBillBoard ? this.speedFactor : 0,\n        texture: this.texture.uuid,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: this.behaviors.map(function (behavior) {\n          return behavior.toJSON();\n        }),\n        worldSpace: this.worldSpace\n      };\n    }\n  }, {\n    key: \"addBehavior\",\n    value: function addBehavior(behavior) {\n      this.behaviors.push(behavior);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newEmissionBursts = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.emissionBursts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var emissionBurst = _step.value;\n          var newEmissionBurst = {};\n          Object.assign(newEmissionBurst, emissionBurst);\n          newEmissionBursts.push(newEmissionBurst);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var newBehaviors = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.behaviors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var behavior = _step2.value;\n          newBehaviors.push(behavior.clone());\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return new ParticleSystem({\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.clone(),\n        startLife: this.startLife.clone(),\n        startSpeed: this.startSpeed.clone(),\n        startRotation: this.startRotation.clone(),\n        startSize: this.startSize.clone(),\n        startColor: this.startColor.clone(),\n        emissionOverTime: this.emissionOverTime.clone(),\n        emissionOverDistance: this.emissionOverDistance.clone(),\n        emissionBursts: newEmissionBursts,\n        instancingGeometry: this.emitter.interleavedBuffer.array,\n        renderMode: this.renderMode,\n        speedFactor: this.speedFactor,\n        texture: this.texture,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: newBehaviors,\n        worldSpace: this.worldSpace\n      });\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json, textures) {\n      var shape;\n\n      switch (json.shape.type) {\n        case 'cone':\n          shape = new ConeEmitter(json.shape);\n          break;\n\n        case 'donut':\n          shape = new DonutEmitter(json.shape);\n          break;\n\n        case 'point':\n          shape = new PointEmitter();\n          break;\n\n        case 'sphere':\n          shape = new SphereEmitter(json.shape);\n          break;\n\n        default:\n          shape = new PointEmitter();\n          break;\n      }\n\n      return new ParticleSystem({\n        autoDestroy: json.autoDestroy,\n        looping: json.looping,\n        duration: json.duration,\n        maxParticle: json.maxParticle,\n        shape: shape,\n        startLife: ValueGeneratorFromJSON(json.startLife),\n        startSpeed: ValueGeneratorFromJSON(json.startSpeed),\n        startRotation: ValueGeneratorFromJSON(json.startRotation),\n        startSize: ValueGeneratorFromJSON(json.startSize),\n        startColor: ColorGeneratorFromJSON(json.startColor),\n        emissionOverTime: ValueGeneratorFromJSON(json.emissionOverTime),\n        emissionOverDistance: ValueGeneratorFromJSON(json.emissionOverDistance),\n        emissionBursts: json.emissionBursts,\n        instancingGeometry: json.instancingGeometry,\n        renderMode: json.renderMode,\n        speedFactor: json.speedFactor,\n        texture: textures[json.texture],\n        startTileIndex: json.startTileIndex,\n        uTileCount: json.uTileCount,\n        vTileCount: json.vTileCount,\n        blending: json.blending,\n        behaviors: json.behaviors.map(function (behavior) {\n          return BehaviorFromJSON(behavior);\n        }),\n        worldSpace: json.worldSpace\n      });\n    }\n  }]);\n\n  return ParticleSystem;\n}();\n\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  //SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipMapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipMapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipMapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipMapLinearFilter\n};\n\nvar QuarksLoader = /*#__PURE__*/function () {\n  function QuarksLoader(manager) {\n    _classCallCheck(this, QuarksLoader);\n\n    _defineProperty(this, \"manager\", void 0);\n\n    _defineProperty(this, \"crossOrigin\", \"anonymous\");\n\n    _defineProperty(this, \"path\", void 0);\n\n    _defineProperty(this, \"resourcePath\", void 0);\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.resourcePath = '';\n  }\n\n  _createClass(QuarksLoader, [{\n    key: \"setPath\",\n    value: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  }, {\n    key: \"setResourcePath\",\n    value: function setResourcePath(value) {\n      this.resourcePath = value;\n      return this;\n    }\n  }, {\n    key: \"setCrossOrigin\",\n    value: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === undefined ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(scope.manager);\n      if (this.path) loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(loader, url) {\n      var scope = this;\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    }\n  }, {\n    key: \"parseImages\",\n    value: function parseImages(json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n              images[image.uuid].push(this.loadImage(loader, path));\n            }\n          } else {\n            // load single image\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n            images[image.uuid] = this.loadImage(loader, path);\n          }\n        }\n      }\n\n      return images;\n    }\n  }, {\n    key: \"parseTextures\",\n    value: function parseTextures(json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture;\n\n          if (Array.isArray(images[data.image])) {\n            texture = new CubeTexture(images[data.image]);\n          } else {\n            texture = new Texture(images[data.image]);\n          }\n\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.type !== undefined) texture.type = data.type;\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    }\n  }, {\n    key: \"parseObject\",\n    value: function parseObject(data, textures) {\n      var object;\n\n      switch (data.type) {\n        case 'ParticleEmitter':\n          object = ParticleSystem.fromJSON(data.ps, textures).emitter;\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], textures));\n        }\n      }\n\n      return object;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json, onLoad) {\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var object = this.parseObject(json.object, textures);\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    }\n  }]);\n\n  return QuarksLoader;\n}();\n\nvar Gradient = /*#__PURE__*/function (_PiecewiseFunction2) {\n  _inherits(Gradient, _PiecewiseFunction2);\n\n  // default linear bezier\n  function Gradient() {\n    var _this3;\n\n    var functions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new ColorRange(new Vector4(0, 0, 0, 1), new Vector4(1, 1, 1, 1)), 0]];\n\n    _classCallCheck(this, Gradient);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Gradient).call(this));\n\n    _defineProperty(_assertThisInitialized(_this3), \"type\", void 0);\n\n    _this3.type = \"function\";\n    _this3.functions = functions;\n    return _this3;\n  }\n\n  _createClass(Gradient, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return color.copy(this.functions[0][0].a);\n      }\n\n      return this.getFunction(index).genColor(color, t);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"Gradient\",\n        functions: this.functions.map(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 2),\n              range = _ref6[0],\n              start = _ref6[1];\n\n          return {\n            function: range.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Gradient(this.functions.map(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            range = _ref8[0],\n            start = _ref8[1];\n\n        return [range.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Gradient(json.functions.map(function (piecewiseFunction) {\n        return [ColorRange.fromJSON(piecewiseFunction.function), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return Gradient;\n}(PiecewiseFunction);\n\nvar SpeedOverLife = /*#__PURE__*/function () {\n  _createClass(SpeedOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }]);\n\n  function SpeedOverLife(func) {\n    _classCallCheck(this, SpeedOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SpeedOverLife');\n  }\n\n  _createClass(SpeedOverLife, [{\n    key: \"update\",\n    value: function update(particle) {\n      particle.velocity.normalize().multiplyScalar(particle.startSpeed * this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SpeedOverLife(this.func.clone());\n    }\n  }]);\n\n  return SpeedOverLife;\n}();\n\nexport { BehaviorFromJSON, Bezier, ColorGeneratorFromJSON, ColorOverLife, ColorRange, ConeEmitter, ConstantColor, ConstantValue, DonutEmitter, FrameOverLife, Gradient, IntervalValue, OrbitOverLife, Particle, ParticleEmitter, ParticleSystem, PiecewiseBezier, PiecewiseFunction, PointEmitter, QuarksLoader, RandomColor, RenderMode, RotationOverLife, SizeOverLife, SpeedOverLife, SphereEmitter, ValueGeneratorFromJSON };","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\nexport class ToonProjectile extends Group {\n    private particles: ParticleSystem;\n    private smoke: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private mainBeam: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n\n        this.mainBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(3.5),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(2, 5),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 4.8423 / 180 * Math.PI,\n                radius: .3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .01,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n\n        this.add(this.particles.emitter);\n\n        this.smoke = new ParticleSystem({\n            startLife: new IntervalValue(0.25, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(.75, 1.25),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new SphereEmitter({\n                radius: .2,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n\n        this.add(this.smoke.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\nexport class BulletMuzzle extends Group {\n    private beam: ParticleSystem;\n    private muzzle1: ParticleSystem;\n    private muzzle2: ParticleSystem;\n    private flash: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.585716, 0.1691176, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        let muzzle = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.muzzle1 = new ParticleSystem(muzzle);\n        this.muzzle1.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle1.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle1.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle1.emitter.renderOrder = 2;\n        this.muzzle1.emitter.name = 'muzzle1';\n        this.muzzle1.emitter.position.x = 1;\n        this.add(this.muzzle1.emitter);\n\n        this.muzzle2 = new ParticleSystem(muzzle);\n        this.muzzle2.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle2.emitter.renderOrder = 2;\n        this.muzzle2.emitter.name = 'muzzle2';\n        this.muzzle2.emitter.position.x = 1;\n        this.muzzle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.muzzle2.emitter);\n\n        this.flash = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.flash.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.95, 0.82, 1), new Vector4(1, 0.38, 0.12, 1))));\n        this.flash.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(81, 84.333, 87.666, 91), 0]])));\n        this.flash.emitter.renderOrder = 2;\n        this.flash.emitter.name = 'flash';\n        this.add(this.flash.emitter);\n\n        this.smoke = new ParticleSystem({\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.smoke.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.rotation.y = Math.PI / 2;\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(1, 15),\n            startSize: new IntervalValue(0.1, 0.3),\n            startColor: new RandomColor(new Vector4(1, 0.91, 0.51, 1), new Vector4(1, 0.44, 0.16, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.emitter.renderOrder = 1;\n        this.particles.emitter.name = 'particles';\n        this.particles.emitter.rotation.y = Math.PI / 2;\n        this.add(this.particles.emitter);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.muzzle1.update(delta);\n        this.muzzle2.update(delta);\n        this.flash.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\nexport class BulletProjectile extends Group {\n    private hProjectile: ParticleSystem;\n    private vProjectile: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/projectile.png\");\n        texture.name = \"textures/projectile.png\";\n\n        let projectileParam = {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(4),\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 1,\n            vTileCount: 1,\n            instancingGeometry: [\n                -2, -0.5, 0, 0, 0,\n                2, -0.5, 0, 1, 0,\n                2, 0.5, 0, 1, 1,\n                -2, 0.5, 0, 0, 1\n            ],\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.hProjectile = new ParticleSystem(projectileParam);\n        this.hProjectile.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));\n        this.hProjectile.emitter.renderOrder = 2;\n        this.hProjectile.emitter.name = 'hProjectile';\n        this.add(this.hProjectile.emitter);\n\n        this.vProjectile = new ParticleSystem(projectileParam);\n        this.vProjectile.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));\n        this.vProjectile.emitter.renderOrder = 2;\n        this.vProjectile.emitter.name = 'vProjectile';\n        this.vProjectile.emitter.rotation.x = Math.PI / 2;\n        this.add(this.vProjectile.emitter);\n    }\n\n    update(delta: number) {\n        this.hProjectile.update(delta);\n        this.vProjectile.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\n// TODO\nexport class ToonExplosion extends Group {\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n        this.mainBeam = new ParticleSystem({\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(5, 15),\n            startSize: new IntervalValue(1.5, 1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 25 * Math.PI / 180,\n                radius: 0.2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(0.7, 1.5),\n            startSize: new IntervalValue(0.4, 0.8),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 80 * Math.PI / 180,\n                radius: 0.25,\n                thickness: 0.5,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n        this.beam.update(delta);\n        this.circle.update(delta);\n    }\n}","import {AdditiveBlending, Group, NormalBlending, Scene, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier, ColorOverLife, ColorRange, ConstantColor,\n    ConstantValue, FrameOverLife,\n    IntervalValue,\n    ParticleSystem,\n    PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, RotationOverLife,\n    SizeOverLife,\n    SphereEmitter\n} from \"three.quarks\";\n\nexport class Explosion extends Group {\n\n    static yellowColor = new Vector4(0.9, 0.60, 0.25, 1);\n    static yellowColor2 = new Vector4(1, 0.95, 0.4, 1);\n\n    private gatherParticles: ParticleSystem;\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n        let mainColor = Explosion.yellowColor;\n        let secColor = Explosion.yellowColor2;\n\n        this.gatherParticles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 3),\n            startColor: new ConstantColor(new Vector4(1,1,1,1)),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n            shape: new SphereEmitter({\n                radius: 40,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(mainColor.x, mainColor.y, mainColor.z, .2), new Vector4(mainColor.x, mainColor.y, mainColor.z, 1))));\n        this.gatherParticles.emitter.renderOrder = 2;\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.add(this.gatherParticles.emitter);\n\n        this.mainBeam = new ParticleSystem({\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(100, 300),\n            startSize: new IntervalValue(1.5, 12.5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(20, 45),\n            startSize: new IntervalValue(4, 8),\n            startColor: new ConstantColor(mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new IntervalValue(10, 15),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 7.5,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(mainColor, new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(40, 200),\n            startSize: new IntervalValue(1, 4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.35,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.beam.emitter.renderOrder = -2;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n    }\n\n    update(delta: number) {\n        //delta /= 1000;\n        this.gatherParticles.update(delta);\n        this.beam.update(delta);\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.circle.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\n\nexport class LevelUp extends Group {\n\n    private gatherParticles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glow2: ParticleSystem;\n    private particle: ParticleSystem;\n\n    constructor() {\n        super();\n        this.name = 'levelUp';\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n\n        let yellow = new Vector4(.8,.8,.2, 1);\n\n        this.gatherParticles = new ParticleSystem({\n            duration: 0.5,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(100),\n            shape: new SphereEmitter({\n                radius: 60,\n                thickness: .8,\n                arc: Math.PI\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.05\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(.2, .2, .2, 1), new Vector4(1, 1, 1, 1))));\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.gatherParticles.emitter.renderOrder = 2;\n        this.add(this.gatherParticles.emitter);\n\n        let glowParam = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            instancingGeometry: [\n                -1, -1, 0, 0, 0,\n                1, -1, 0, 1, 0,\n                1, 1, 0, 1, 1,\n                -1, 1, 0, 0, 1\n            ],\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.glow = new ParticleSystem(glowParam);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.glow.emitter.renderOrder = 0;\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.glow.emitter);\n\n\n        let glow2Param = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        };\n\n        this.glow2 = new ParticleSystem(glow2Param);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1), 0], [new Bezier(1, 0.90, 0.75, 0), 0.2]])));\n        this.glow2.emitter.renderOrder = 0;\n        this.glow2.emitter.name = 'glow2';\n        this.add(this.glow2.emitter);\n\n        let particleParam = {\n            duration: 1.0,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(120, 180),\n            startSize: new IntervalValue(2, 4),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new PiecewiseBezier([[new Bezier(0, 0, 0, 0), 0], [new Bezier(50, 80, 80, 50), 0.4]]),\n            /*emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],*/\n            shape: new ConeEmitter({\n                radius: 25,\n                thickness: 0.2,\n                angle: Math.PI / 100\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            //speedFactor: 0.1,\n            renderMode: RenderMode.BillBoard\n        };\n\n        this.particle = new ParticleSystem(particleParam);\n        this.particle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.particle.addBehavior(new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, Math.PI * 4* 0.75, Math.PI * 4 * 0.90, Math.PI * 4),0]])));\n        this.particle.emitter.renderOrder = 2;\n        this.particle.emitter.name = 'particle';\n        this.particle.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.particle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.gatherParticles.update(delta);\n        this.glow.update(delta);\n        this.glow2.update(delta);\n        this.particle.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, FrameOverLife, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter, RandomColor,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\n\nexport class PickUp extends Group {\n\n    static yellowColor = new Vector4(1, 1, 0.3, 1);\n    static darkOrangeColor = new Vector4(1, 0.7, 0.1, 1);\n    static redColor = new Vector4(1, 0, 0, 1);\n\n    private particles: ParticleSystem;\n    private circle: ParticleSystem;\n    private upflow: ParticleSystem;\n    private beam: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.6),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(2, 10),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: false,\n\n            maxParticle: 2000,\n            emissionOverTime: new ConstantValue(40),\n\n            emissionBursts: [{\n                time: 0,\n                count: 100,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n            shape: new ConeEmitter({\n                radius: 30,\n                thickness: 2,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.circle.addBehavior(new OrbitOverLife(new IntervalValue(6, 8)));\n\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.88, 0.88, 0), 0]])));\n        this.circle.addBehavior(new ColorOverLife(new ColorRange(new Vector4(0.2, 0.6, 1, 1), new Vector4(0.2, 0.2, 1, 1))))\n        this.circle.emitter.renderOrder = 3;\n        this.circle.emitter.name = 'mainBeam';\n\n        this.add(this.circle.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.6),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(PickUp.yellowColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.5, 0.6666, 1), 0]])));\n        this.add(this.beam.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(20, 30),\n            startSize: new IntervalValue(2, 6),\n            startColor: new RandomColor(PickUp.darkOrangeColor, PickUp.redColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 20,\n                thickness: 3,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.3, 0.25, 0.1), 0]])));\n        this.particles.emitter.renderOrder = 2;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.upflow = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.6),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(60),\n            startColor: new RandomColor(new Vector4(1, 0.2, 0, 1), PickUp.redColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard\n        });\n        this.upflow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.9, 0.6, 0.3), 0]])));\n        this.upflow.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(38, 39, 40, 46), 0]])));\n        this.upflow.emitter.renderOrder = 1;\n        this.upflow.emitter.name = 'upflow';\n        this.add(this.upflow.emitter);\n\n    }\n\n    update(delta: number) {\n        this.circle.update(delta);\n        this.beam.update(delta);\n        this.upflow.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\n\nexport class ShipSmoke extends Group {\n\n    private smoke: ParticleSystem;\n    constructor() {\n        super();\n        this.name = 'shipSmoke';\n\n        let texture = new TextureLoader().load(\"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n\n        let grey = new Vector4(.5, .5, .5, 1);\n\n        this.smoke = new ParticleSystem({\n            duration: 5,\n            looping: true,\n            startLife: new IntervalValue(1.5, 3),\n            startSpeed: new IntervalValue(20, 30),\n            startSize: new IntervalValue(10, 15),\n            startColor: new ConstantColor(grey),\n            worldSpace: true,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new ConeEmitter({\n                radius: 10,\n                thickness: 1,\n                angle: 0.2\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(.8, .8, .8, 0))));\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.2, 1, 1, 1), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.renderOrder = 2;\n        this.smoke.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.smoke.emitter);\n    }\n\n    update(delta: number) {\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\n// TODO\nexport class ElectricBall extends Group {\n    private beam: ParticleSystem;\n    private beamWorld: ParticleSystem;\n    private electricity: ParticleSystem;\n    private electricBall: ParticleSystem;\n    /*private sparks: ParticleSystem;*/\n\n    constructor() {\n        super();\n\n        let texture2 = new TextureLoader().load( \"textures/texture2.png\");\n        texture2.name = \"textures/texture2.png\";\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(15.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.beamWorld = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(7.5, 15),\n            startColor: new RandomColor(new Vector4(0.1397059 * 0.8, 0.3592291 * 0.8, 1 * 0.8, 1), new Vector4(1 * 0.8, 0.9275356 * 0.8, 0.1029412 * 0.8, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n            shape: new SphereEmitter({\n                radius: 0.01,\n                thickness: 1,\n                arc: Math.PI * 2\n            }),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beamWorld.emitter.renderOrder = 0;\n        this.beamWorld.emitter.name = 'beamWorld';\n        this.beamWorld.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0))));\n        this.add(this.beamWorld.emitter);\n\n        this.electricity = new ParticleSystem({\n            duration: 0.5,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(3, 6),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        //this.electricity.addBehavior(new ColorOverLife(([[new Bezier(61, 64, 67, 70), 0]])));\n        this.electricity.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(53, 56, 59, 62), 0]])));\n        this.electricity.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1.0, 1.0, 0.75, 0), 0]])));\n        this.electricity.emitter.renderOrder = 2;\n        this.electricity.emitter.name = 'electricity';\n        this.add(this.electricity.emitter);\n\n        this.electricBall = new ParticleSystem({\n            duration: 0.4,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(5, 10),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(3),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.electricBall.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(62, 65, 68, 71), 0]])));\n        this.electricBall.emitter.renderOrder = 1;\n        this.electricBall.emitter.name = 'electricBall';\n        this.add(this.electricBall.emitter);\n        /*\n        this.sparks = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n*/\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.beamWorld.update(delta);\n        this.electricity.update(delta);\n        this.electricBall.update(delta);\n        /*this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.circle.update(delta);*/\n    }\n}","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\nexport class ShipTrail extends Group {\n    private particles: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private beam: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n        texture.name = \"textures/texture1.png\";\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(20.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.add(this.beam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(10),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: true,\n\n            maxParticle: 500,\n            emissionOverTime: new ConstantValue(120),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 1.0, 0.8, 0.5), 0]])));\n        this.glowBeam.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1,1,1,1), new Vector4(0,0,0,0))));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(20, 40),\n            startSize: new IntervalValue(1, 2),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(0.5220588, 0.6440161, 1, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 80 / 180 * Math.PI,\n                radius: 1,\n                thickness: 0.3,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .2,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 200;\\n\" +\n                \"    if (this.position.x > 200)\\n\" +\n                \"        this.position.x = -200;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import * as React from \"react\";\nimport * as THREE from \"three\";\nimport {Object3D, Texture} from \"three\";\nimport {ParticleEmitter, QuarksLoader} from \"three.quarks\";\nimport {Application} from \"./Application\";\nimport {TextureLoader} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {AdditiveBlending} from \"three\";\nimport {Mesh} from \"three\";\nimport {BoxBufferGeometry} from \"three\";\nimport {MeshStandardMaterial} from \"three\";\nimport {ToonProjectile} from \"../example/ToonProjectile\";\nimport {Color} from \"three\";\nimport {AxesHelper} from \"three\";\nimport {PointLight} from \"three\";\nimport {AmbientLight} from \"three\";\nimport {BulletMuzzle} from \"../example/BulletMuzzle\";\nimport {BulletProjectile} from \"../example/BulletProjectile\";\nimport {BulletHit} from \"../example/BulletHit\";\nimport {ToonExplosion} from \"../example/ToonExplosion\";\nimport {Explosion} from \"../example/Explosion\";\nimport {LevelUp} from \"../example/LevelUp\";\nimport {PickUp} from \"../example/PickUp\";\nimport {ShipSmoke} from \"../example/ShipSmoke\";\nimport {ElectricBall} from \"../example/ElectricBall\";\nimport {ShipTrail} from \"../example/ShipTrail\";\n\n\nexport interface TextureImage {\n    img: string,\n    texture: Texture,\n}\n\nexport interface AppContext {\n    scene: THREE.Scene;\n    script: (delta: number) => void;\n    selection: Array<Object3D>;\n    textures: Array<TextureImage>;\n    actions: {\n        onOpenDemo: (index: number)=>void;\n        onSaveAs: ()=>void;\n        onImport: (files: FileList)=>void;\n        select: (object: Object3D) => void;\n        selectAddition: (object: Object3D) => void;\n        addObject3d: (type: string, parent: Object3D) => void;\n        removeObject3d: (object: Object3D) => void;\n        duplicateObject3d: (object: Object3D) => void;\n        updateParticleSystem: (object: ParticleEmitter) => void;\n        addTexture: (textureImage: TextureImage) => void;\n        updateProperties: () => void;\n    }\n}\n\nconst ApplicationContext = React.createContext<AppContext | null>(null);\n\nexport const ApplicationContextConsumer = ApplicationContext.Consumer;\n\nexport class ApplicationContextProvider extends React.Component<{ }, AppContext> {\n\n    createScene(demoIndex: number) {\n        const scene = new THREE.Scene();\n\n        scene.background = new Color(0x666666);\n\n        let demoObject;\n        if (demoIndex === 0) {\n            demoObject = new ToonProjectile();\n            demoObject.name = \"Toon Projectile\";\n        } else if (demoIndex === 1) {\n            demoObject = new BulletMuzzle();\n            demoObject.name = \"BulletMuzzle\";\n        } else if (demoIndex === 2) {\n            demoObject = new BulletProjectile();\n            demoObject.name = \"BulletProjectile\";\n        } else if (demoIndex === 3) {\n            demoObject = new ShipSmoke();\n            demoObject.name = \"shipSmoke\";\n        } else if (demoIndex === 4) {\n            demoObject = new ToonExplosion();\n            demoObject.name = \"ToonExplosion\";\n        } else if (demoIndex === 5) {\n            demoObject = new Explosion();\n            demoObject.name = \"Explosion\";\n        } else if (demoIndex === 6) {\n            demoObject = new LevelUp();\n            demoObject.name = \"LevelUp\";\n        } else if (demoIndex === 7) {\n            demoObject = new PickUp();\n            demoObject.name = \"PickUp\";\n        } else if (demoIndex == 8) {\n            demoObject = new ElectricBall();\n            demoObject.name = \"ElectricBall\";\n        } else if (demoIndex == 9){\n            demoObject = new ShipTrail();\n            demoObject.name = \"ShipTrail\";\n        } else {\n            demoObject = new ElectricBall();\n            demoObject.name = \"ElectricBall\";\n        }\n        scene.add(demoObject);\n\n        const axisHelper = new AxesHelper(100);\n        axisHelper.name = \"axisHelper\";\n        scene.add(axisHelper);\n\n        const light = new PointLight(new Color(1, 1, 1), 0.8, 200);\n        light.position.set(50, 50, 50);\n        scene.add(light);\n\n        const ambientLight = new AmbientLight(new Color(1, 1, 1), 0.2);\n        scene.add(ambientLight);\n\n        return scene;\n    }\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        const texture1 = new TextureLoader().load(\"textures/texture1.png\");\n        texture1.name = \"textures/texture1.png\";\n        const texture2 = new TextureLoader().load(\"textures/texture2.png\");\n        texture2.name = \"textures/texture2.png\";\n\n        const state: AppContext = {\n            scene: this.createScene(0),\n            script: this.animate,\n            selection: [],\n            textures: [\n                {img: './textures/texture1.png', texture: texture1},\n                {img: './textures/texture2.png', texture: texture2},\n            ],\n            actions: {\n                onOpenDemo: (index: number) => {\n                    const scene = this.createScene(index);\n                    this.setState({scene: scene});\n                },\n                onSaveAs: () => {\n                    const a = document.createElement(\"a\");\n                    const file = new Blob([JSON.stringify(this.state.scene.toJSON())], {type: \"application/json\"});\n                    a.href = URL.createObjectURL(file);\n                    a.download = \"scene.json\";\n                    a.click();\n                },\n                onImport: (files: FileList) => {\n                    const nFiles = files.length;\n                    for (let nFileId = 0; nFileId < nFiles; nFileId++) {\n                        const jsonURL = URL.createObjectURL( files[nFileId] );\n\n                        const loader = new QuarksLoader();\n                        loader.setCrossOrigin(\"\");\n                        loader.load(jsonURL, (object3D: Object3D)=>{\n                                this.state.scene.add(object3D);\n                        }, ()=>{}, ()=>{});\n                    }\n                },\n                select: object => {\n                    this.setState({selection: [object]});\n                },\n                selectAddition: object => {\n                    if (this.state.selection.indexOf(object) === -1) {\n                        this.state.selection.push(object);\n                        this.setState({selection: this.state.selection});\n                    }\n                },\n                addObject3d: this.addObject3d,\n                removeObject3d: this.removeObject3d,\n                duplicateObject3d: this.duplicateObject3d,\n                updateParticleSystem: () => {\n                },\n                updateProperties: () => {\n                    this.setState({scene: this.state.scene});\n                },\n                addTexture: (textureImage: TextureImage) => {\n                    this.state.textures.push(textureImage);\n                    this.setState({textures: this.state.textures});\n                }\n            }\n        };\n\n        this.state = state;\n    }\n\n    removeObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.remove(object3D);\n        }\n    };\n\n    duplicateObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.add(object3D.clone());\n        }\n    }\n\n    addObject3d = (type: string, parent: Object3D) => {\n        let object;\n        switch (type) {\n            case 'particle':\n                const texture = this.state.textures[0].texture;\n                const particleSystem = new ParticleSystem({\n                    maxParticle: 10000,\n                    shape: new ConeEmitter(),\n                    emissionOverTime: new ConstantValue(100),\n                    startLife: new ConstantValue(30),\n                    startSpeed: new ConstantValue(10),\n                    startSize: new ConstantValue(1),\n                    startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n                    texture: texture,\n                    blending: AdditiveBlending,\n                    startTileIndex: 0,\n                    uTileCount: 10,\n                    vTileCount: 10,\n                    worldSpace: true,\n                });\n                object = particleSystem.emitter;\n                this.state.scene.add(object);\n                break;\n            case 'box':\n                object = new Mesh(new BoxBufferGeometry(10, 10, 10), new MeshStandardMaterial({color: 0xcccccc}));\n                this.state.scene.add(object);\n                break;\n        }\n        if (object) {\n            parent.add(object);\n            this.state.actions.select(object);\n            this.setState({});\n        }\n    };\n\n\n    update = 0;\n    animate = (delta: number) => {\n        /*this.toonProjectile!.position.x += delta * 30;\n        if (this.toonProjectile!.position.x > 20)\n            this.toonProjectile!.position.x = -20;*/\n\n        this.update += delta;\n        if (this.update > 0.1) {\n            this.state.actions.updateProperties();\n            this.update = 0;\n        }\n    };\n\n    render() {\n        //console.log( \"rendering ApplicationContext \");\n        return (\n            <ApplicationContext.Provider value={this.state}>\n                {this.props.children}\n            </ApplicationContext.Provider>\n        )\n    }\n}\n/*\n        this.particleSystem = new ParticleSystem({\n            maxParticle: 10000,\n            shape: new ConeEmitter(),\n            emissionOverTime: new ConstantValue(100),\n            startLife: new ConstantValue(30),\n            startSpeed: new ConstantValue(10),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(1,1,1, 1)),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            worldSpace: true,\n        });*/\n//this.particleSystem.emitter.position.set(10, 0, 0);\n//scene.add(this.particleSystem.emitter);","import * as React from \"react\";\nimport Stats from \"stats.js\";\nimport {WEBGL} from \"../WebGL\";\nimport {\n    PerspectiveCamera,\n    WebGLRenderer,\n    Clock,\n} from \"three\";\nimport {RefObject} from \"react\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\n\ninterface ThreejsViewportProps {\n    width: number;\n    height: number;\n}\n\nexport class ThreejsViewport extends React.PureComponent<ThreejsViewportProps> {\n    container: RefObject<HTMLDivElement>;\n    stats?: Stats;\n    camera?: PerspectiveCamera;\n    renderer?: WebGLRenderer;\n    private clock?: Clock;\n    private controls?: OrbitControls;\n\n    private appContext?: AppContext;\n\n    constructor(props: Readonly<ThreejsViewportProps>) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    componentDidMount(): void {\n        if ( this.init() ) {\n            this.animate();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ThreejsViewportProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        this.camera!.aspect = this.props.width / this.props.height;\n        this.camera!.updateProjectionMatrix();\n        this.renderer!.setSize( this.props.width, this.props.height );\n    }\n\n    init() {\n        if (!this.container.current) {\n            return false;\n        }\n\n        if ( !WEBGL.isWebGLAvailable() ) {\n            document.body.appendChild( WEBGL.getWebGLErrorMessage() );\n            return false;\n        }\n\n        this.renderer = new WebGLRenderer();\n\n        /*if ( this.renderer.extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n            document.getElementById( 'notSupported' )!.style.display = '';\n            return false;\n        }*/\n\n        const width = this.props.width;\n        const height = this.props.height;\n\n        this.clock = new Clock();\n\n        this.camera = new PerspectiveCamera( 50, width / height, 1, 1000 );\n        this.camera.position.set(50, 50, 50);\n\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.controls.enableKeys = false;\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.1;\n        this.controls.rotateSpeed = 0.2;\n        this.controls.update();\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( width, height );\n        this.container.current!.appendChild( this.renderer.domElement );\n\n        this.stats = new Stats();\n        this.stats.dom.style.position = \"absolute\";\n        this.stats.dom.style.left = \"\";\n        this.stats.dom.style.right = \"0\";\n        this.container.current!.appendChild( this.stats.dom );\n\n        //window.addEventListener( 'resize', this.onWindowResize, false );\n\n        this.onResize(null);\n\n        return true;\n\n    }\n\n    onResize = (event: any ) => {\n\n        if (this.renderer!.domElement.parentElement!.clientWidth - 10 !== this.renderer!.domElement.width ||\n            this.renderer!.domElement.parentElement!.clientHeight - 10 !== this.renderer!.domElement.height) {\n\n            const newWidth = this.renderer!.domElement.parentElement!.clientWidth - 10;\n            const newHeight = this.renderer!.domElement.parentElement!.clientHeight - 10;\n\n            this.camera!.aspect = newWidth / newHeight;\n            this.camera!.updateProjectionMatrix();\n            this.renderer!.domElement.style.width = '100%';\n            this.renderer!.domElement.style.height = '100%';\n            this.renderer!.setSize(newWidth, newHeight);\n        }\n    };\n\n    animate = () => {\n        requestAnimationFrame( this.animate );\n\n        this.onResize(null);\n        this.renderScene();\n        this.stats!.update();\n    };\n\n    renderScene() {\n        if (this.appContext) {\n            this.controls!.update();\n            const delta = this.clock!.getDelta();\n            //console.log(delta);\n            //let time = performance.now() * 0.0005;\n            //this.particleSystem!.update(this.clock!.getDelta());\n            this.appContext.script(delta);\n            //this.particleSystem!.emitter.rotation.y = this.clock!.getElapsedTime();\n            //this.particleSystem!.emitter.position.set(Math.cos(this.clock!.getElapsedTime()) * 20, 0, Math.sin(this.clock!.getElapsedTime()) * 20);\n            //console.log(this.particleSystem!.emitter.modelViewMatrix);\n\n            this.appContext.scene.traverse(object => {\n                if (object.userData && object.userData.func) {\n                    object.userData.func.call(object, delta);\n                }\n                if (object instanceof ParticleEmitter) {\n                    /*if (object.name === 'muzzle1' && object.system.particleNum > 0) {\n                        console.log(object.system.particles);\n                    }*/\n                    object.system.update(delta);\n                }\n            });\n\n            this.renderer!.render(this.appContext.scene, this.camera!);\n        }\n    }\n\n    render() {\n        console.log( \"rendering ThreejsViewPort\");\n        return (\n        <ApplicationContextConsumer>\n            { context => {\n                    if (context) {\n                        this.appContext = context;\n                        return <div ref={this.container} style={{width: '100%', height: '100%'}}></div>;\n                    }\n                }\n            }\n        </ApplicationContextConsumer>);\n    }\n}\n","import * as React from 'react';\nimport \"./NumberInput.scss\";\n\ninterface NumberInputProps{\n    value: number;\n    onChange: (value: number)=>void;\n}\n\nexport const NumberInput : React.FC<NumberInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value + '');\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        const x = parseFloat(inputValue);\n        if (x !== props.value)\n            props.onChange(x);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value + '') {\n            setInputValue(props.value + '');\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            const x = parseFloat(inputValue);\n            if (x !== props.value)\n                props.onChange(x);\n        }\n    };\n\n    return <input className=\"number-input\" value={focus? inputValue: props.value} size={5}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {NumberInput} from \"./NumberInput\";\n\ninterface Vector3Props {\n    name: string;\n    x: number;\n    y: number;\n    z: number;\n    onChange: (x: number, y: number, z: number)=>void;\n    unitConversion?: number;\n}\n\nexport class Vector3Editor extends React.PureComponent<Vector3Props> {\n    render() {\n        console.log('rendered Vector3');\n        const {x, y, z, unitConversion = 1, onChange, name} = this.props;\n        return(<div className=\"property\">\n                <label className=\"name\">{name}</label>\n                <label>X:</label><NumberInput value={x * unitConversion} onChange={value => {onChange(value / unitConversion, y, z)}}/>\n                <label>Y:</label><NumberInput value={y * unitConversion} onChange={value => {onChange(x, value / unitConversion, z)}}/>\n                <label>Z:</label><NumberInput value={z * unitConversion} onChange={value => {onChange(x, y, value / unitConversion)}}/>\n            </div>\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringInputProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const StringInput : React.FC<StringInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return <input className=\"string-input\" value={focus? inputValue: props.value} size={20}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\n\n\ninterface ObjectPropertiesProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ObjectPropertiesState {\n\n}\n\nexport class ObjectProperties extends React.PureComponent<ObjectPropertiesProps, ObjectPropertiesState> {\n    constructor(props: Readonly<ObjectPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeName = (name: string) => {\n        this.props.object3d.name = name;\n        this.props.updateProperties();\n    };\n    onChangePosition = (x: number, y: number, z: number) => {\n        this.props.object3d.position.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeScale = (x: number, y: number, z: number) => {\n        this.props.object3d.scale.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeRotation = (x: number, y: number, z: number) => {\n        this.props.object3d.rotation.set(x, y, z);\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Name:</label>\n                            <StringInput value={this.props.object3d.name} onChange={this.onChangeName}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Position\" x={this.props.object3d.position.x}\n                                       y={this.props.object3d.position.y} z={this.props.object3d.position.z}\n                                       onChange={this.onChangePosition}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Rotation\" x={this.props.object3d.rotation.x}\n                                       y={this.props.object3d.rotation.y} z={this.props.object3d.rotation.z}\n                                       onChange={this.onChangeRotation} unitConversion={180 / Math.PI}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Scale\" x={this.props.object3d.scale.x}\n                                       y={this.props.object3d.scale.y} z={this.props.object3d.scale.z}\n                                       onChange={this.onChangeScale}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport {ColorResult, SketchPicker} from \"react-color\";\nimport {Vector4} from \"three\";\nimport \"./ColorEditor.scss\";\n\ninterface ColorEditorProps {\n    color: Vector4;\n    onChange: (color: Vector4) => void;\n}\n\nfunction ConvertToColor(color: Vector4) {\n    return `rgba(${((color.x * 255) | 0)},${((color.y * 255) | 0)},${((color.z * 255) | 0)},${color.w})`;\n}\n\nexport const ColorEditor: React.FC<ColorEditorProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const togglePicker = () => {\n        setOpen(!open);\n    };\n\n    const closePicker = () => {\n        setOpen(false);\n    };\n\n    const colorChange = (colorResult: ColorResult) => {\n        const color = new Vector4();\n        color.x = Math.min(255, colorResult.rgb.r) / 255;\n        color.y = Math.min(255, colorResult.rgb.g) / 255;\n        color.z = Math.min(255, colorResult.rgb.b) / 255;\n        color.w = colorResult.rgb.a!;\n        onChange(color);\n    };\n\n    const {color, onChange} = props;\n\n    return (\n        <div className=\"color-editor\">\n            <button style={{backgroundColor: ConvertToColor(color), height: '20px'}} onClick={togglePicker}/>\n            {ConvertToColor(color)}\n            {\n                open ? <div className=\"popover\">\n                    <div className=\"cover\" onClick={closePicker}/>\n                    <SketchPicker\n                        color={{\n                            r: ((color.x * 255) | 0),\n                            g: ((color.y * 255) | 0),\n                            b: ((color.z * 255) | 0),\n                            a: color.w\n                        }}\n                        onChange={colorChange}/>\n                </div> : null\n            }\n        </div>);\n};\n","import React from \"react\";\n\nfunction interp(a: number, b: number, x: number) {\n    return a * (1 - x) + b * x;\n}\n\nexport interface TransformProps {\n    xFrom: number;\n    yFrom: number;\n    xTo: number;\n    yTo: number;\n}\n\nexport class TransformComponent<T extends TransformProps = TransformProps, K = {}> extends React.Component<T, K> {\n\n    x = (value: number) => interp(this.props.xFrom, this.props.xTo, value);\n    y = (value: number) => interp(this.props.yFrom, this.props.yTo, value);\n\n    shouldComponentUpdate(nextProps: TransformProps) {\n        const { xFrom, yFrom, xTo, yTo } = this.props;\n        return (\n            nextProps.xFrom !== xFrom ||\n            nextProps.yFrom !== yFrom ||\n            nextProps.xTo !== xTo ||\n            nextProps.yTo !== yTo\n        );\n    }\n}","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\nimport {Bezier} from \"three.quarks\";\n\nexport interface CurveProps extends TransformProps {\n    curveColor: string;\n    curveWidth: number;\n    value: Bezier;\n}\n\nexport class CurveComponent extends TransformComponent<CurveProps> {\n    shouldComponentUpdate(nextProps: CurveProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const [p0, p1, p2, p3] = value.p;\n        return nextProps.curveColor !== curveColor ||\n            nextProps.curveWidth !== curveWidth ||\n            nextProps.value !== value;\n    }\n\n    render() {\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const {x, y} = this;\n\n        const segments = Math.floor((x(1) - x(0)) / 5);\n\n        let curve = `M${x(0)},${y(value.genValue(0))} `;\n        if (segments > 0) {\n            for (let i = 1 / segments; i <= 1; i += 1 / segments) {\n                curve += `L${x(i)},${y(value.genValue(i))} `;\n            }\n        }\n        curve += `L${x(1)},${y(value.genValue(1))} `;\n\n        return (<path\n            fill=\"none\"\n            stroke={curveColor}\n            strokeWidth={curveWidth}\n            d={curve} />);\n    }\n}\n","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\n\ninterface HandleProps extends TransformProps {\n    handleRadius: number,\n    handleColor: string,\n    hover: boolean,\n    down: boolean,\n    background: string,\n    handleStroke: number,\n    xstart: number,\n    ystart: number,\n    xval: number,\n    yval: number,\n    onMouseEnter: (event: React.MouseEvent)=>void,\n    onMouseLeave: (event: React.MouseEvent)=>void,\n    onMouseDown: (event: React.MouseEvent)=>void,\n}\n\nexport class HandleComponent extends TransformComponent<HandleProps> {\n    shouldComponentUpdate(nextProps: HandleProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n        return nextProps.xstart !== xstart ||\n            nextProps.ystart !== ystart ||\n            nextProps.handleRadius !== handleRadius ||\n            nextProps.handleColor !== handleColor ||\n            nextProps.hover !== hover ||\n            nextProps.down !== down ||\n            nextProps.background !== background ||\n            nextProps.handleStroke !== handleStroke ||\n            nextProps.xval !== xval ||\n            nextProps.yval !== yval ||\n            nextProps.onMouseDown !== onMouseDown ||\n            nextProps.onMouseLeave !== onMouseLeave ||\n            nextProps.onMouseEnter !== onMouseEnter;\n    }\n\n    render() {\n        const { x, y } = this;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n\n        const sx = x(xstart);\n        const sy = y(ystart);\n        const cx = x(xval);\n        const cy = y(yval);\n        const a = Math.atan2(cy-sy, cx-sx);\n        const cxs = cx - handleRadius * Math.cos(a);\n        const cys = cy - handleRadius * Math.sin(a);\n\n        return <g>\n            <line\n                stroke={handleColor}\n                strokeWidth={hover||down ? 1 + handleStroke : handleStroke}\n                x1={cxs}\n                y1={cys}\n                x2={sx}\n                y2={sy} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={handleRadius}\n                stroke={handleColor}\n                strokeWidth={down ? 2 * handleStroke : handleStroke}\n                fill={down ? background: handleColor}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseDown={onMouseDown} />\n        </g>;\n    }\n}","import * as React from \"react\";\nimport {CurveComponent} from \"./CurveComponent\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {HandleComponent} from \"./HandleComponent\";\nimport {createRef} from \"react\";\n\ninterface BezierCurvesEditorProps {\n    value: PiecewiseBezier\n    onChange?: (value:PiecewiseBezier) => void,\n    width: number,\n    height: number,\n    padding?: Array<number>,\n    className?: string,\n    background?: string,\n    gridColor?: string,\n    curveColor?: string,\n    handleColor?: string,\n    curveWidth?: number,\n    handleRadius?: number,\n    handleStroke?: number,\n    readOnly?: boolean,\n    style?: React.CSSProperties,\n    pointers?: React.CSSProperties,\n    textStyle?: React.CSSProperties,\n}\n\ninterface BezierCurvesEditorState {\n    curve: number,\n    hover: number,\n    down: number,\n}\n\nexport class BezierCurvesEditor extends React.PureComponent<BezierCurvesEditorProps, BezierCurvesEditorState> {\n\n\n    static defaultP = {\n        padding: [0, 0, 0, 0],\n        handleRadius: 4,\n    }; //[25, 5, 25, 18]\n\n    constructor(props: Readonly<BezierCurvesEditorProps>) {\n        super(props);\n        this.state = {\n            curve: -1,\n            down: -1,\n            hover: -1,\n        };\n    }\n\n    rootRef = createRef<HTMLDivElement>();\n\n    positionForEvent = (e: React.MouseEvent) => {\n        if (this.rootRef.current) {\n            const rect = this.rootRef.current.getBoundingClientRect();\n            return [e.clientX - rect.left, e.clientY - rect.top];\n        } else {\n            return [0, 0];\n        }\n    };\n\n    x = (value:number) => {\n    };\n\n    y = (value:number) => {\n    };\n\n    inversex = (x:number) => {\n    };\n\n    inversey = (y:number) => {\n    };\n\n    onDownLeave = (e: React.MouseEvent) => {\n        if (this.state.down) {\n            this.onDownMove(e);\n            this.setState({\n                down: -1,\n                hover: -1\n            });\n        }\n    };\n    onDownMove = (e: React.MouseEvent) => {\n        if (this.state.down >= 0) {\n            e.preventDefault();\n            const [x, y] = this.positionForEvent(e);\n            const value = new PiecewiseBezier(this.props.value.functions);\n\n            const valueX = x / this.props.width;\n            const curveIndex = this.state.curve;\n            const curve = value.getFunction(curveIndex);\n\n            if (this.state.down === 0) {\n                const old = curve.p[0];\n                curve.p[0] = (this.props.height - y) / this.props.height;\n                curve.p[1] += curve.p[0] - old;\n                value.setStartX(curveIndex, x / this.props.width);\n                if (curveIndex - 1 >= 0) {\n                    const pCurve = value.getFunction(curveIndex - 1);\n                    pCurve.p[3] = (this.props.height - y) / this.props.height;\n                    pCurve.p[2] += curve.p[0] - old;\n                    value.setFunction(curveIndex - 1, value.getFunction(curveIndex - 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 3) {\n                const old = curve.p[3];\n                curve.p[3] = (this.props.height - y) / this.props.height;\n                curve.p[2] += curve.p[3] - old;\n                value.setEndX(curveIndex, x / this.props.width);\n                if (curveIndex + 1 < value.numOfFunctions) {\n                    const nCurve = value.getFunction(curveIndex + 1);\n                    nCurve.p[0] = (this.props.height - y) / this.props.height;\n                    nCurve.p[1] += curve.p[3] - old;\n                    value.setFunction(curveIndex + 1, value.getFunction(curveIndex + 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 1) {\n                curve.p[1] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 2) {\n                curve.p[2] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            //value[i] = this.inversex(x);\n            //value[i + 1] = this.inversey(y);\n            if (this.props.onChange)\n                this.props.onChange(value);\n        }\n    };\n\n    onDownUp = () => {\n        // this.onDownMove(e);\n        this.setState({\n            down: -1,\n        });\n    };\n\n\n    onEnterHandle(curve: number, h: number) {\n        if (!this.state.down) {\n            this.setState({\n                hover: h,\n                curve: curve,\n            });\n        }\n    }\n    onDownHandle(curve: number, h: number, e: React.MouseEvent) {\n        e.preventDefault();\n        this.setState({\n            hover: -1,\n            down: h,\n            curve: curve,\n        });\n    }\n\n    onLeaveHandle() {\n        if (!this.state.down) {\n            this.setState({\n                hover: -1,\n            });\n        }\n    }\n\n    render() {\n\n        const {\n            width,\n            height,\n            value,\n            curveWidth = 1,\n            curveColor = \"#000\",\n            handleRadius = BezierCurvesEditor.defaultP.handleRadius,\n            handleColor = \"#f00\",\n            handleStroke = 1,\n            background = \"#fff\",\n        } = this.props;\n\n        const {\n            curve: curveIndex,\n            down,\n            hover\n        } = this.state;\n\n        const curves = [];\n        for (let i = 0; i < value.numOfFunctions; i ++) {\n            const x1 = value.getStartX(i);\n            const x2 = value.getEndX(i);\n            const curve = value.getFunction(i);\n            const slope0 = curve.getSlope(0);\n            const slope1 = curve.getSlope(1);\n\n            curves.push(\n                <g key={i}>\n                    <CurveComponent xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        curveColor={curveColor} curveWidth={curveWidth} value={curve}/>\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 0, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 0)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={0}\n                        yval={curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 0}\n                        hover={curveIndex === i && hover === 0}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 1, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 1)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={1.0 / 3}\n                        yval={1.0 / 3 * slope0 + curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 1}\n                        hover={curveIndex === i && hover === 1}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 2, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 2)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1 - 1.0 / 3}\n                        yval={curve.p[3] - 1.0 / 3 * slope1}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 2}\n                        hover={curveIndex === i && hover === 2}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 3, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 3)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1}\n                        yval={curve.p[3]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 3}\n                        hover={curveIndex === i && hover === 3}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                </g>);\n        }\n        return <div ref={this.rootRef}\n                    onMouseMove={this.onDownMove}\n                    onMouseUp={this.onDownUp}\n                    onMouseLeave={this.onDownLeave}>\n            <svg width={width} height={height}>\n                {curves}\n            </svg>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {IntervalValue} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {NumberInput} from \"./NumberInput\";\nimport {ColorEditor} from \"./ColorEditor\";\nimport \"./GeneratorEditor.scss\";\nimport {BezierCurvesEditor} from \"./bezier/BezierCurvesEditor\";\n\ntype EditorType =\n    'constant'\n    | 'intervalValue'\n    | 'piecewiseBezier'\n    | 'color'\n    | 'randomColor'\n    | 'colorRange'\n    | 'gradient';\nexport type ValueType = 'value' | 'functionValue' | 'color' | 'functionColor';\n\nconst ValueToEditor: { [a: string]: Array<EditorType> } = {\n    'value': ['constant', 'intervalValue'],\n    'functionValue': ['piecewiseBezier'],\n    'color': ['color', 'randomColor'],\n    'functionColor': ['colorRange', 'gradient'],\n};\n\nexport type GenericGenerator = ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator;\n\ninterface GeneratorEditorProps {\n    allowedType: Array<ValueType>;\n    name: string;\n    generator: GenericGenerator;\n    updateGenerator: (generator: GenericGenerator) => void;\n}\n\ninterface GeneratorEditorState {\n    open: boolean;\n}\n\nexport class GeneratorEditor extends React.PureComponent<GeneratorEditorProps, GeneratorEditorState> {\n\n    constructor(props: Readonly<GeneratorEditorProps>) {\n        super(props);\n        const currentEditor = ValueToEditor[props.allowedType[0]][0];\n        this.state = {\n            open: false,\n        }\n    }\n    changeEditor = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const editorType = e.target.value;\n        let generator: GenericGenerator | null = null;\n        switch(editorType) {\n            case \"constant\":\n                generator = new ConstantValue(0);\n                break;\n            case \"color\":\n                generator = new ConstantColor(new Vector4(1,1,1,1));\n                break;\n            case \"intervalValue\":\n                generator = new IntervalValue(0, 1);\n                break;\n            case \"colorRange\":\n                generator = new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"randomColor\":\n                generator = new RandomColor(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"piecewiseBezier\":\n                generator = new PiecewiseBezier();\n                break;\n        }\n        if (generator)\n            this.props.updateGenerator(generator);\n    }\n\n    changeValue = (x: number) => {\n        this.props.updateGenerator(new ConstantValue(x));\n    };\n\n    changeColor = (x: Vector4) => {\n        this.props.updateGenerator(new ConstantColor(x));\n    };\n\n    changeValueA = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(x, interval.b));\n    };\n\n    changeValueB = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(interval.a, x));\n    };\n\n    changeColorRangeA = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(x, colorRange.b));\n    };\n    changeColorRangeB = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(colorRange.a, x));\n    };\n    changeRandomColorA = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(x, randomColor.b));\n    };\n    changeRandomColorB = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(randomColor.a, x));\n    };\n\n    changeCurve = (x: PiecewiseBezier) => {\n        this.props.updateGenerator(new PiecewiseBezier(x.functions));\n    }\n\n    getEditorType(generator: GenericGenerator): EditorType {\n        if (generator instanceof ConstantValue) {\n            return 'constant';\n        } else if (generator instanceof IntervalValue) {\n            return 'intervalValue';\n        } else if (generator instanceof PiecewiseBezier) {\n            return 'piecewiseBezier';\n        } else if (generator instanceof ConstantColor) {\n            return 'color';\n        } else if (generator instanceof RandomColor) {\n            return 'randomColor';\n        } else if (generator instanceof ColorRange) {\n            return 'colorRange';\n        } else if (generator instanceof Gradient) {\n            return 'gradient';\n        }\n        return 'constant';\n    }\n\n    render() {\n        //console.log('render GeneratorEditor');\n        const {name, generator, allowedType} = this.props;\n\n        const editorTypes = [];\n        for (const valueType of allowedType) {\n            for (const editorType of ValueToEditor[valueType]) {\n                editorTypes.push(editorType);\n            }\n        }\n\n        const currentEditor = this.getEditorType(generator);\n        //console.log(currentEditor);\n\n        let editor;\n        switch (currentEditor) {\n            case \"constant\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as ConstantValue).value}\n                                 onChange={this.changeValue}/></React.Fragment>;\n                break;\n            case \"color\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ConstantColor).color} onChange={this.changeColor}/>\n                </React.Fragment>);\n                break;\n            case \"intervalValue\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as IntervalValue).a}\n                                 onChange={this.changeValueA}/>-<NumberInput\n                    value={(generator as IntervalValue).b} onChange={this.changeValueB}/></React.Fragment>;\n                break;\n            case \"piecewiseBezier\":\n                editor = <React.Fragment>\n                    <BezierCurvesEditor height={40} width={240} value={(generator as PiecewiseBezier)} onChange={this.changeCurve}/>\n                </React.Fragment>;\n                break;\n            case \"colorRange\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ColorRange).a} onChange={this.changeColorRangeA}/>-\n                    <ColorEditor color={(generator as ColorRange).b} onChange={this.changeColorRangeB}/>\n                </React.Fragment>);\n                break;\n            case \"randomColor\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as RandomColor).a} onChange={this.changeRandomColorA}/>-\n                    <ColorEditor color={(generator as RandomColor).b} onChange={this.changeRandomColorB}/>\n                </React.Fragment>);\n                break;\n        }\n        return <div className=\"property\">\n            <label className=\"name\">{name}</label>\n            {editor}\n            <select className=\"editor-select\" onChange={this.changeEditor} value={currentEditor}>\n                {editorTypes.map(editorType => <option key={editorType} value={editorType}>{editorType}</option>)}\n            </select>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\n\ninterface ParticleSystemPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface ParticleSystemPropertiesState {\n\n}\n\nexport class ParticleSystemProperties extends React.PureComponent<ParticleSystemPropertiesProps, ParticleSystemPropertiesState> {\n    constructor(props: Readonly<ParticleSystemPropertiesProps>) {\n        super(props);\n    }\n    onChangeStartSpeed = (g: GenericGenerator) => {\n        console.log(\"change start speed\");\n        this.props.particleSystem.startSpeed = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartLife = (g: GenericGenerator) => {\n        console.log(\"change start life\");\n        this.props.particleSystem.startLife = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartSize = (g: GenericGenerator) => {\n        console.log(\"change start size\");\n        this.props.particleSystem.startSize = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartColor = (g: GenericGenerator) => {\n        console.log(\"change start color\");\n        this.props.particleSystem.startColor = g as ColorGenerator | FunctionColorGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeStartRotation = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.startRotation = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeEmissionOverTime = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.emissionOverTime = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        const valueFunctionTypes = ['value', 'functionValue'] as Array<ValueType>;\n        const colorValueFunctionTypes = ['color', 'functionColor'] as Array<ValueType>;\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Life\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startLife}\n                                         updateGenerator={this.onChangeStartLife}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Size\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSize}\n                                         updateGenerator={this.onChangeStartSize}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Speed\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSpeed}\n                                         updateGenerator={this.onChangeStartSpeed}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Color\"\n                                         allowedType={colorValueFunctionTypes}\n                                         generator={this.props.particleSystem.startColor}\n                                         updateGenerator={this.onChangeStartColor}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Rotation\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startRotation}\n                                         updateGenerator={this.OnChangeStartRotation}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Emission Over Time\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.emissionOverTime}\n                                         updateGenerator={this.OnChangeEmissionOverTime}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\n\ninterface FileInputProps {\n    onChange: (files: FileList) => void;\n}\n\nexport class FileInput extends React.Component<FileInputProps>\n{\n    constructor(props: any)\n    {\n        super(props);\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onChange(e.target.files);\n    };\n\n    render ()\n    {\n        return <div>\n            <input\n                accept=\"image/*\"\n                type=\"file\"\n                id=\"contained-button-file\"\n                style={{display: 'none'}}\n                onChange={this.handleChange} />\n            <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload\n                </Button>\n            </label>\n        </div>;\n    }\n}","\nimport { Theme, createStyles, makeStyles, withStyles, WithStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {Button, Dialog, GridList, GridListTile, GridListTileBar} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Texture} from \"three\";\nimport {TextureImage} from \"./ApplicationContext\";\nimport {FileInput} from \"./editors/FileInput\";\nimport \"./TexturePicker.scss\";\n\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[500],\n        },\n    });\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            width: 500,\n            height: 450,\n        },\n    }),\n);\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n    id: string;\n    children: React.ReactNode;\n    onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport interface TexturePickerProps {\n    textures: Array<TextureImage>,\n    open: boolean,\n    handleSelect: (texture: TextureImage)=>void,\n    handleUpload: (files: FileList)=>void,\n    handleClose: ()=>void,\n}\n\nexport const TexturePicker: React.FC<TexturePickerProps> = (props) => {\n    const classes = useStyles();\n    const [selected, setSelected] = useState(0);\n\n    return (\n        <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n                Picker Texture\n            </DialogTitle>\n            <DialogContent dividers>\n                <div className={classes.root}>\n                    <GridList cellHeight={160} className={classes.gridList} cols={3}>\n                        {props.textures.map((texture, index) => (\n                            <GridListTile key={texture.img} cols={1} onClick={() => {setSelected(index)}} className={ index === selected ? 'selected-tile': ''}>\n                                <img src={texture.img} alt={texture.texture.name} />\n                                <GridListTileBar\n                                    title={texture.texture.name}\n                                    subtitle={<span>by: {texture.texture.name}</span>}\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <FileInput onChange={props.handleUpload} />\n                <Button variant={'contained'} onClick={() => {props.handleSelect(props.textures[selected]); props.handleClose(); }}>Confirm</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import * as React from \"react\";\nimport {AdditiveBlending, Blending, NormalBlending, Texture} from \"three\";\nimport {AppContext, ApplicationContextConsumer, TextureImage} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {FileInput} from \"./editors/FileInput\";\nimport {TexturePicker} from \"./TexturePicker\";\nimport Button from \"@material-ui/core/Button\";\n\n\ninterface ParticleRendererPropertiesProps {\n    particleSystem: ParticleSystem,\n    context: AppContext,\n    updateProperties: Function,\n}\n\ninterface ParticleRendererPropertiesState {\n    texturePickerOpen: boolean,\n}\n\nexport class ParticleRendererProperties extends React.PureComponent<ParticleRendererPropertiesProps, ParticleRendererPropertiesState> {\n    constructor(props: Readonly<ParticleRendererPropertiesProps>) {\n        super(props);\n        this.state = {\n            texturePickerOpen: false,\n        };\n    }\n    onChangeStartTile = (index: number) => {\n        this.props.particleSystem.startTileIndex = index;\n        this.props.updateProperties();\n    };\n    onChangeUTileCount = (u: number) => {\n        this.props.particleSystem.uTileCount = u;\n        this.props.updateProperties();\n    };\n    onChangeVTileCount = (v: number) => {\n        this.props.particleSystem.vTileCount = v;\n        this.props.updateProperties();\n    };\n    onChangeBlending = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        console.log(e.target.value);\n        switch (e.target.value) {\n            case \"Normal\":\n                this.props.particleSystem.blending = NormalBlending;\n                this.props.particleSystem.emitter.material.blending = NormalBlending;\n                break;\n            case \"Additive\":\n                this.props.particleSystem.blending = AdditiveBlending;\n                this.props.particleSystem.emitter.material.blending = AdditiveBlending;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBlending = (blending: Blending) => {\n        switch (blending) {\n            case NormalBlending:\n                return \"Normal\"\n            case AdditiveBlending:\n                return \"Additive\";\n        }\n    }\n\n    onUploadTexture = (files: FileList) => {\n        console.log(\"upload texture\");\n        const image = document.createElement( 'img' );\n        const texture = new Texture( image );\n        image.onload = function()  {\n            texture.needsUpdate = true;\n        };\n        if (files && files[0]) {\n            const reader = new FileReader();\n            reader.onload = function (e) {\n                image.src = reader.result as string;\n            };\n            reader.readAsDataURL(files[0]);\n\n            texture.name = files[0].name;\n            const textureImage = {\n                img: URL.createObjectURL(files[0]),\n                texture: texture\n            };\n            this.props.context.actions.addTexture(textureImage);\n        }\n\n    }\n\n    onChangeTexture = (textureImage: TextureImage) => {\n        console.log(\"change texture\");\n        this.props.particleSystem.texture = textureImage.texture;\n        this.props.updateProperties();\n    };\n\n    closeTexturePicker = () => {\n        this.setState({texturePickerOpen: false});\n    }\n\n    openTexturePicker = () => {\n        this.setState({texturePickerOpen: true});\n    }\n\n    render() {\n        console.log('rendered particleRendererProperties');\n        return (\n            <div>\n\n                texture?: Texture;\n                blending?: Blending;\n                worldSpace?: boolean;\n\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Blend Mode</label>\n                            <select className=\"editor-select\" onChange={this.onChangeBlending} value={this.getValueOfBlending(this.props.particleSystem.blending)}>\n                                <option key={0} value=\"Normal\" >Normal</option>\n                                <option key={1} value=\"Additive\" >Additive</option>\n                            </select>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">UVTile</label>\n                            <label>Column:</label><NumberInput value={this.props.particleSystem.uTileCount} onChange={this.onChangeUTileCount}/>\n                            <label>Row:</label><NumberInput value={this.props.particleSystem.vTileCount} onChange={this.onChangeVTileCount}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Start Tile Index</label><NumberInput value={this.props.particleSystem.startTileIndex} onChange={this.onChangeStartTile}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Texture</label>\n                            {this.props.particleSystem.texture? this.props.particleSystem.texture.name: \"..\"} <Button onClick={this.openTexturePicker} variant={'contained'}>Pick</Button>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <TexturePicker handleClose={this.closeTexturePicker} handleSelect={this.onChangeTexture} handleUpload={this.onUploadTexture} open={this.state.texturePickerOpen} textures={context.textures}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport \"./ScriptEditor.scss\";\n\ninterface ScriptEditorProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const ScriptEditor : React.FC<ScriptEditorProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (value: string) => {\n        if (focus) {\n            setInputValue(value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return(\n        <Editor\n            value={focus? inputValue: props.value}\n            onValueChange={onInputChange}\n            highlight={code => highlight(code, languages.javascript, \"javascript\")}\n            padding={10}\n            onBlur={onInputBlur} onFocus={onInputFocus} //onKeyDown={onKeyDown}\n            style={{\n                fontFamily: '\"Consolas\", monospace',\n                fontSize: 12,\n            }}\n        />);\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScriptPropertiesProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ScriptPropertiesState {\n\n}\n\nexport class ScriptProperties extends React.PureComponent<ScriptPropertiesProps, ScriptPropertiesState> {\n    constructor(props: Readonly<ScriptPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeScript = (script: string) => {\n        if (this.props.object3d.userData === null) {\n            this.props.object3d.userData = {};\n        }\n        this.props.object3d.userData.script = script;\n        this.props.object3d.userData.func = new Function(\"delta\", script);\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                        <label className=\"script\">Script:</label>\n                        <ScriptEditor value={this.props.object3d.userData.script || \"\"} onChange={this.onChangeScript}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import {Blending, Texture} from \"three\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ConeEmitter, DonutEmitter, EmitterShape, ParticleSystem, PointEmitter, SphereEmitter} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {FileInput} from \"./editors/FileInput\";\nimport React, {ChangeEvent} from \"react\";\n\n\ninterface EmitterShapePropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface EmitterShapePropertiesState {\n\n}\n\nexport class EmitterShapeProperties extends React.PureComponent<EmitterShapePropertiesProps, EmitterShapePropertiesState> {\n    constructor(props: Readonly<EmitterShapePropertiesProps>) {\n        super(props);\n    }\n\n    getValueOfShape = (shape: EmitterShape) => {\n        if (this.props.particleSystem.emitterShape instanceof PointEmitter) {\n            return \"PointEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof ConeEmitter) {\n            return \"ConeEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof SphereEmitter) {\n            return \"SphereEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof DonutEmitter) {\n            return \"DonutEmitter\";\n        } else\n            return \"\";\n    };\n\n    onChangeShape = (e: ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"PointEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof PointEmitter)) {\n                    this.props.particleSystem.emitterShape = new PointEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"ConeEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof ConeEmitter)) {\n                    this.props.particleSystem.emitterShape = new ConeEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"SphereEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof SphereEmitter)) {\n                    this.props.particleSystem.emitterShape = new SphereEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"DonutEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof DonutEmitter)) {\n                    this.props.particleSystem.emitterShape = new DonutEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n        }\n    };\n\n    onChangeKeyValue = (k: string, v: number) => {\n        (this.props.particleSystem.emitterShape as any)[k] = v;\n        this.props.updateProperties();\n    };\n\n    renderShapeProperties() {\n        const properties = [];\n        for (const key in this.props.particleSystem.emitterShape) {\n            properties.push(\n                <div key={key} className=\"property\">\n                    <label className=\"name\">{key}:</label>\n                    <NumberInput value={(this.props.particleSystem.emitterShape as any)[key]} onChange={(value) => this.onChangeKeyValue(key, value)}/>\n                </div>\n            );\n        }\n        return properties;\n    }\n\n    render() {\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Shape</label>\n                            <select className=\"editor-select\" onChange={this.onChangeShape} value={this.getValueOfShape(this.props.particleSystem.emitterShape)}>\n                                <option key={0} value=\"PointEmitter\" >PointEmitter</option>\n                                <option key={1} value=\"ConeEmitter\" >ConeEmitter</option>\n                                <option key={2} value=\"SphereEmitter\" >SphereEmitter</option>\n                                <option key={3} value=\"DonutEmitter\" >DonutEmitter</option>\n                            </select>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context && this.renderShapeProperties()}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {\n    ParticleSystem,\n    ParticleEmitter\n} from \"three.quarks\";\nimport {Object3D} from \"three\";\nimport {ButtonGroup} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\ninterface ParticleSystemControllerProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ParticleSystemControllerState {\n\n}\n\nexport class ParticleSystemController extends React.PureComponent<ParticleSystemControllerProps, ParticleSystemControllerState> {\n    constructor(props: Readonly<ParticleSystemControllerProps>) {\n        super(props);\n    }\n\n    getSystems = () => {\n        const systems: Array<ParticleSystem> = [];\n        if (this.props.object3d instanceof ParticleEmitter) {\n            systems.push(this.props.object3d.system);\n        }\n        this.props.object3d.traverse(object => {\n            if (object instanceof ParticleEmitter) {\n                systems.push(object.system);\n            }\n        });\n        return systems;\n    };\n\n    checkPause = (systems: Array<ParticleSystem>) => {\n        let paused = true;\n        systems.forEach(system => {\n            if (!system.paused) {\n                paused = false;\n            }\n        });\n        return paused;\n    };\n\n    togglePause = () => {\n        const systems: Array<ParticleSystem> = this.getSystems();\n        const paused = this.checkPause(systems);\n\n        if (paused) {\n            systems.forEach(system => {\n                system.play();\n            });\n        } else {\n            systems.forEach(system => {\n                system.pause();\n            });\n        }\n        this.props.updateProperties();\n    };\n\n    onRestart = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n        });\n        this.props.updateProperties();\n    };\n\n    onStop = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n            system.pause();\n        });\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ToggleButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                </ToggleButtonGroup>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                        <Button disabled={!this.checkPause(this.getSystems())} onClick={this.togglePause}>Play</Button>\n                        <Button disabled={this.checkPause(this.getSystems())} onClick={this.togglePause}>Pause</Button>\n                        <Button onClick={this.onRestart}>Restart</Button>\n                        <Button onClick={this.onStop}>Stop</Button>\n                    </ButtonGroup>}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {\n    Behavior, Bezier,\n    ColorOverLife, ColorRange,\n    FrameOverLife, Gradient,\n    OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    RotationOverLife,\n    SizeOverLife, SpeedOverLife\n} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\nimport {ListItem, List, Theme, createStyles, Typography, Toolbar, ListItemIcon} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {memo} from \"react\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport {Vector4} from \"three\";\n\ninterface BehaviorsPropertiesProps {\n    behaviors: Array<Behavior>,\n    updateProperties: Function,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        listRoot: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        }\n    }),\n);\n\n/*\n<GeneratorEditor name=\"Start Speed\"\n                 allowedType={valueFunctionTypes}\n                 generator={this.props.particleSystem.startSpeed}\n                 updateGenerator={this.onChangeStartSpeed}/>*/\n\nfunction BehaviorsPropertiesFunc(props: BehaviorsPropertiesProps) {\n    const classes = useStyles();\n\n\n\n    const [checked, setChecked] = React.useState([0, 1, 2, 3]);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const handleListItemClick = (event: any, index: number) => {\n        setSelectedIndex(index);\n    };\n\n    const handleToggle = (value: number) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n\n    const deleteBehavior = () => {\n        props.behaviors.splice(selectedIndex, 1);\n        props.updateProperties();\n    }\n\n    const onAddNewBehavior = (type: string) => () => {\n        let behavior;\n        switch (type) {\n            case 'ColorOverLife':\n                behavior = new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0)));\n                break;\n            case 'RotationOverLife':\n                behavior = new RotationOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SizeOverLife':\n                behavior = new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'FrameOverLife':\n                behavior = new FrameOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'OrbitOverLife':\n                behavior = new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SpeedOverLife':\n                behavior = new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.6667, 0.3333, 0.0), 0]]));\n                break;\n            default:\n                break;\n        }\n        if (behavior) {\n            props.behaviors.push(behavior);\n            props.updateProperties();\n        }\n        setAnchorEl(null);\n    }\n\n    const onChangeBehaviorFunc = (index: number) => (generator: GenericGenerator) => {\n        const behavior = props.behaviors[index];\n        switch (behavior.type) {\n            case 'ColorOverLife':\n                (behavior as ColorOverLife).func = generator as FunctionColorGenerator;\n                break;\n            case 'RotationOverLife':\n                (behavior as RotationOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            case 'SizeOverLife':\n                (behavior as SizeOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'FrameOverLife':\n                (behavior as FrameOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'OrbitOverLife':\n                (behavior as OrbitOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            default:\n                break;\n        }\n        console.log(\"changing\")\n        props.updateProperties();\n    }\n\n    return (\n        <div className={classes.root}>\n            <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                <Button color=\"inherit\" aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\" onClick={handleClick} id=\"new-button\">\n                    New\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={onAddNewBehavior('SizeOverLife')}>SizeOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('ColorOverLife')}>ColorOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('RotationOverLife')}>RotationOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('FrameOverLife')}>FrameOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('OrbitOverLife')}>OrbitOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('SpeedOverLife')}>SpeedOverLife</MenuItem>\n                </Menu>\n                <Button onClick={deleteBehavior}>Remove</Button>\n            </ButtonGroup>\n            <List dense className={classes.listRoot}>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    props.behaviors.map((behavior, index) => {\n                        const labelId = `behavior-list-label-${index}`;\n                        let valueTypes: Array<ValueType>;\n                        let func: FunctionColorGenerator | FunctionValueGenerator | ValueGenerator | null = null;\n                        switch (behavior.type) {\n                            case 'ColorOverLife':\n                                valueTypes = ['functionColor'];\n                                func = (behavior as ColorOverLife).func;\n                                break;\n                            case 'RotationOverLife':\n                                valueTypes = ['functionValue', 'value'];\n                                func = (behavior as RotationOverLife).angularVelocityFunc;\n                                break;\n                            case 'SizeOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SizeOverLife).func;\n                                break;\n                            case 'FrameOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as FrameOverLife).func;\n                                break;\n                            case 'OrbitOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as OrbitOverLife).angularVelocityFunc;\n                                break;\n                            case 'SpeedOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SpeedOverLife).func;\n                                break;\n                            default:\n                                valueTypes = ['functionValue'];\n                                break;\n                        }\n\n                        let editor;\n                        if (func) {\n                            editor = <GeneratorEditor name=\"Func\"\n                                                      allowedType={valueTypes}\n                                                      generator={func!}\n                                                      updateGenerator={onChangeBehaviorFunc(index)}/>;\n                        }\n\n                        return (\n                            <ListItem key={index}\n                                      selected={selectedIndex === index}\n                                      onClick={(event) => handleListItemClick(event, index)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"end\"\n                                        onChange={handleToggle(index)}\n                                        checked={checked.indexOf(index) !== -1}\n                                        inputProps={{'aria-labelledby': labelId}}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={behavior.type}\n                                              secondary={editor}/>\n                            </ListItem>\n                        );\n                    })\n                }\n                </ApplicationContextConsumer>\n            </List>\n        </div>\n    );\n}\n\nexport const BehaviorsProperties = React.memo(BehaviorsPropertiesFunc);","import * as React from \"react\";\nimport {ConstantValue} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {Object3D, Vector4} from \"three\";\nimport {ObjectProperties} from \"./ObjectProperties\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {ParticleSystemProperties} from \"./ParticleSystemProperties\";\nimport {ParticleRendererProperties} from \"./ParticleRendererProperties\";\nimport {ScriptProperties} from \"./ScriptProperties\";\nimport {EmitterShapeProperties} from \"./EmitterShapeProperties\";\nimport {ParticleSystemController} from \"./ParticleSystemController\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport MuiAccordion from \"@material-ui/core/Accordion\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport \"./PropertiesEditor.scss\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {BehaviorsProperties} from \"./BehaviorsProperties\";\n\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 32,\n        '&$expanded': {\n            minHeight: 32,\n        },\n    },\n    content: {\n        margin: 0,\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expandIcon: {\n        padding: 0\n    },\n    expanded: {},\n})(MuiAccordionSummary);\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\ninterface PropertiesEditorProps {\n    object3d: Object3D\n}\n\nexport default function PropertiesEditor(props: PropertiesEditorProps) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(['Object', 'EmitterShape', 'ParticleRenderer','ParticleEmitter','Behaviors','Script']);\n\n    const handleChange = (panel: string) => (event: any, isExpanded: boolean) => {\n        if (isExpanded) {\n            expanded.push(panel);\n        } else {\n            expanded.splice(expanded.indexOf(panel), 1);\n        }\n        setExpanded(expanded);\n    };\n\n    return (\n        <div className={classes.root}>\n            <ApplicationContextConsumer>\n                {context => context &&\n                    <ParticleSystemController object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                }\n            </ApplicationContextConsumer>\n            <Accordion expanded={(expanded.indexOf('Object') !== -1)} onChange={handleChange('Object')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"object-content\"\n                    id=\"object-header\"\n                >\n                    <Typography className={classes.heading}>Object</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ObjectProperties object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('EmitterShape') !== -1)} onChange={handleChange('EmitterShape')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"emitter-shape-content\"\n                    id=\"emitter-shape-header\">\n                    <Typography className={classes.heading}>Emitter Shape</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <EmitterShapeProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                    updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleRenderer') !== -1)} onChange={handleChange('ParticleRenderer')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-renderer-content\"\n                    id=\"particle-renderer-header\">\n                    <Typography className={classes.heading}>Particle Renderer</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleRendererProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                        context={context}\n                                                        updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleEmitter') !== -1)} onChange={handleChange('ParticleEmitter')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-emitter-content\"\n                    id=\"particle-emitter-header\">\n                    <Typography className={classes.heading}>Particle Emitter</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleSystemProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                      updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('Behaviors') !== -1)} onChange={handleChange('Behaviors')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"behaviors-content\"\n                    id=\"behaviors-header\">\n                    <Typography className={classes.heading}>Behaviors</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <BehaviorsProperties behaviors={(props.object3d as ParticleEmitter).system.behaviors}\n                                                        updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            <Accordion expanded={(expanded.indexOf('Script') !== -1)} onChange={handleChange('Script')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"script-content\"\n                    id=\"script-header\"\n                >\n                    <Typography className={classes.heading}>Script</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ScriptProperties object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}","import {Object3D, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorGenerator, ColorRange, ConstantColor, ConstantValue,\n    FunctionColorGenerator,\n    FunctionValueGenerator, IntervalValue,\n    ParticleEmitter, PiecewiseBezier, RandomColor,\n    RenderMode,\n    ValueGenerator\n} from \"three.quarks\";\n\n\nexport class CodeExporter {\n    /*static traverseObject(parent: Object3D): string {\n        for (let i = 0; i < parent.children.length; i ++) {\n\n        }\n    }*/\n\n    static camelize(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return index === 0 ? word.toLowerCase() : word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static camelizeClass(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static exportBezier(func: Bezier) {\n        return `new Bezier(${func.p[0]}, ${func.p[1]}, ${func.p[2]}, ${func.p[3]})`;\n    }\n    static exportColor(color: Vector4) {\n        return `new Vector4(${color.x}, ${color.y}, ${color.z}, ${color.w})`;\n    }\n    static exportFunction(func: ValueGenerator | ColorGenerator | FunctionValueGenerator | FunctionColorGenerator, indent: number = 0): string {\n        if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        } else if (func instanceof ConstantColor) {\n            return `new ConstantColor(${CodeExporter.exportColor(func.color)})`;\n        } else if (func instanceof IntervalValue) {\n            return `new IntervalValue(${func.a}, ${func.b})`;\n        } else if (func instanceof ColorRange) {\n            return `new ColorRange(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof RandomColor) {\n            return `new RandomColor(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof PiecewiseBezier) {\n            let code = `new PiecewiseBezier(\\n`;\n            for (let i = 0; i < func.functions.length - 1; i ++) {\n                code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[i][0])}, ${func.functions[i][1]}], `;\n            }\n            code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[func.functions.length - 1][0])}, ${func.functions[func.functions.length - 1][1]}]`;\n            code += ' '.repeat(indent) + `)`;\n            return code;\n        } else if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        }\n        throw new Error();\n    }\n\n    static exportParticleEmitter(emitter: ParticleEmitter): string {\n\n        let name = CodeExporter.camelize(emitter.name);\n        let system = emitter.system;\n        let code = `        this.${name} = new ParticleSystem({\\n`;\n        code += `            duration: ${system.duration},\\n`;\n        code += `            looping: ${system.looping},\\n`;\n        code += `            startLife: ${CodeExporter.exportFunction(system.startLife)},\\n`;\n        code += `            startSpeed: ${CodeExporter.exportFunction(system.startSpeed)},\\n`;\n        code += `            startSize: ${CodeExporter.exportFunction(system.startSize)},\\n`;\n        code += `            startColor: ${CodeExporter.exportFunction(system.startColor)},\\n`;\n        code += `            worldSpace: ${system.worldSpace},\\n`;\n        code += `            maxParticle: ${system.maxParticle},\\n`;\n        code += `            emissionOverTime: ${CodeExporter.exportFunction(system.emissionOverTime)},\\n`;\n        code += `            emissionBursts: ${system.emissionBursts},\\n`;\n        code += `            shape: ${system.emitterShape},\\n`;\n        code += `            texture: texture,\\n`;\n        code += `            blending: ${system.blending},\\n`;\n        code += `            startTileIndex: ${system.startTileIndex},\\n`;\n        code += `            uTileCount: ${system.uTileCount},\\n`;\n        code += `            vTileCount: ${system.vTileCount},\\n`;\n        code += `            renderMode: ${system.renderMode},\\n`;\n        if (system.renderMode == RenderMode.StretchedBillBoard) {\n            code += `            speedFactor: ${system.speedFactor},\\n`;\n        }\n        code += '        }\\n';\n\n        for (let i = 0; i < system.behaviors.length; i ++) {\n            code += `        this.${name}.addBehavior(${system.behaviors[i]});\\n`;\n        }\n        code += `        this.${name}.emitter.renderOrder = ${system.emitter.renderOrder};\\n`\n        code += `        this.${name}.emitter.name = '${name}';\\n`\n        code += `        this.${name}.emitter.rotation.set(${system.emitter.rotation.x}, ${system.emitter.rotation.y}, ${system.emitter.rotation.z});\\n`;\n        code += `        this.add(this.${name}.emitter);\\n`\n        code += '\\n';\n        return code;\n    }\n\n    static exportCode(root: Object3D): string {\n\n        let code = `export class ${CodeExporter.camelizeClass(root.name)} extends Group {\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `    private ${CodeExporter.camelize(root.children[i].name)}: ParticleSystem;\\n`\n            }\n        }\n\n        code += '\\n';\n        code += `    constructor() {\\n`;\n        code += `        super();\\n`;\n        code += `        this.name = '${root.name}';\\n`;\n        code += `        let texture = new TextureLoader().load( \"textures/texture1.png\");\\n`;\n        code += `        texture.name = \"textures/texture1.png\";\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += CodeExporter.exportParticleEmitter(root.children[i] as ParticleEmitter);\n            }\n        }\n\n        code += '    }\\n';\n        code += '\\n';\n\n        code += '    update(delta: number) {\\n';\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `        ${CodeExporter.camelize(root.children[i].name)}.update(delta);\\n`\n            }\n        }\n        code += '    }\\n';\n        code += '}';\n        return code;\n    }\n}","import React from \"react\";\nimport Dialog, {DialogProps} from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScrollDialogProps {\n    content: string,\n    open: boolean,\n    handleClose: () =>void,\n}\n\nexport function ScrollDialog(props: ScrollDialogProps) {\n\n    const descriptionElementRef = React.useRef<HTMLElement>(null);\n    /*React.useEffect(() => {\n        if (props.open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [props.open]);\n    <DialogContentText\n        id=\"scroll-dialog-description\"\n        ref={descriptionElementRef}\n        tabIndex={-1}\n    >\n        {props.content}\n    </DialogContentText>*/\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={props.handleClose}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Particle System Code</DialogTitle>\n                <DialogContent dividers={true}>\n                    <ScriptEditor value={props.content} onChange={()=>{}}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {Object3D, Scene} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport './SceneGraphView.scss';\nimport {Item, Menu, MenuProvider, Separator, Submenu} from \"react-contexify\";\nimport {MenuItemEventHandler} from \"react-contexify/lib/types\";\nimport 'react-contexify/dist/ReactContexify.min.css';\nimport {TreeView} from \"@material-ui/lab\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {makeStyles, createStyles} from \"@material-ui/core\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport {Theme, Typography} from \"@material-ui/core\";\nimport {CodeExporter} from \"../util/CodeExporter\";\nimport {ScrollDialog} from \"./ScrollDialog\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\ninterface SceneGraphViewMaterialProps {\n    context: AppContext;\n    scene: Scene;\n}\n\nexport function SceneGraphViewMaterial(props: SceneGraphViewMaterialProps) {\n    const classes = useStyles();\n\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [expanded, setExpanded] = React.useState<string[]>(['1']);\n\n    const [code, setCode] = React.useState<string>('');\n\n    const countIndex = (index: number, object3d: Object3D): [Object3D | null, number] => {\n        if (index == 0)\n            return [object3d, 0];\n        index --;\n        for (const child of object3d.children) {\n            const [res, newIndex] = countIndex(index, child);\n            if (res)\n                return [res, newIndex];\n            index = newIndex;\n        }\n        return [null, index];\n    }\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\n        if (nodeIds.length > 0) {\n            const index = parseInt(nodeIds[0]);\n            const [object3d, ] = countIndex(index, props.scene);\n            if (object3d)\n                props.context.actions.select(object3d);\n        }\n        setSelected(nodeIds);\n    };\n    const handleToggle = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\n        //console.log(event.target);\n        if ((event.target as HTMLElement).tagName === 'svg') {\n            setExpanded(nodeIds);\n        }\n    };\n\n    const getObjectName = (object3d: Object3D) => {\n        let type = 'object';\n        if (object3d instanceof ParticleEmitter) {\n            type = 'ParticleSystem';\n        } else {\n            type =  object3d.type;\n        }\n        let name = 'unnamed';\n        if (object3d.name) {\n            name = object3d.name;\n        }\n        return `[${type}] ${name}`;\n    };\n\n    const renderObject = (context: AppContext, object3d: THREE.Object3D, index: number): [React.ReactNode, number] => {\n        const items = [];\n        const originIndex = index;\n        index ++;\n        for (const child of object3d.children) {\n            const result = renderObject(context, child, index);\n            items.push(result[0]);\n            index = result[1];\n        }\n        //selected={context.selection.indexOf(object3d) !== -1}\n        if (originIndex !== 0) {\n            return [<TreeItem key={object3d.uuid} nodeId={\"\" + originIndex}\n                              label={<MenuProvider id=\"scene-graph-menu\" data={{object3d: object3d}}>{getObjectName(object3d) + \" \" + originIndex}</MenuProvider>}>\n                {items}\n            </TreeItem>, index];\n        } else {\n            return [<React.Fragment>{items}</React.Fragment>, index];\n        }\n    }\n\n    const onContextMenuClick = ({event, props}: MenuItemEventHandler) => console.log(event,props);\n\n    const onContextMenuAddParticleSystem = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.addObject3d('particle', (contextProps! as any).object3d);\n        }\n    };\n    const onContextMenuRemove = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.removeObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuDuplicate = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.duplicateObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuExport = ({event, props: contextProps}: MenuItemEventHandler) => {\n        console.log(contextProps);\n        if ((contextProps! as any).object3d) {\n            const a = document.createElement(\"a\");\n            const json = (contextProps! as any).object3d.toJSON();\n            //json.images.forEach((image: any) => image.url = \"http://localhost:3000/textures/texture1.png\");\n            const file = new Blob([JSON.stringify(json)], {type: \"application/json\"});\n            a.href = URL.createObjectURL(file);\n            a.download = \"scene.json\";\n            a.click();\n        }\n    };\n\n    const onContextMenuCopyCode = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps! as any).object3d) {\n            setCode(CodeExporter.exportCode((contextProps! as any).object3d));\n        }\n    }\n\n    const renderScene = (context: AppContext, scene: THREE.Scene) => {\n        return <TreeView\n            className={classes.root}\n            selected={selected}\n            expanded={expanded}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n        >\n            {renderObject(context, scene, 0)[0]}\n        </TreeView>;\n    }\n\n    return <div>\n        <Typography className={classes.heading}> Scene Graph </Typography>\n        {renderScene(props.context, props.scene)}\n        <Menu id=\"scene-graph-menu\">\n            <Submenu label=\"Add\">\n                <Item onClick={onContextMenuAddParticleSystem}>Particle System</Item>\n                <Item onClick={onContextMenuClick}>Ball</Item>\n            </Submenu>\n            <Separator />\n            <Item onClick={onContextMenuDuplicate}>Duplicate</Item>\n            <Item onClick={onContextMenuRemove}>Remove</Item>\n            <Separator />\n            <Item onClick={onContextMenuExport}>Export</Item>\n            <Item onClick={onContextMenuCopyCode}>Copy JS Code</Item>\n        </Menu>\n        <ScrollDialog content={code} open={code !== ''} handleClose={()=>{setCode('')}} />\n    </div>;\n}\n","import * as React from \"react\";\nimport MainMenu from \"./MainMenu\";\nimport {ThreejsViewport} from \"./ThreejsViewport\";\nimport PropertiesEditor from \"./PropertiesEditor\";\nimport {SceneGraphView} from \"./SceneGraphView\";\n\nimport './layout.scss';\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {SceneGraphViewMaterial} from \"./SceneGraphViewMaterial\";\n\nexport class Application extends React.Component<{}> {\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n    }\n\n    render() {\n        console.log(\"render application\");\n        return (\n            <ApplicationContextProvider>\n                <div className=\"application\">\n                    <div className=\"main-menu\">\n                        <ApplicationContextConsumer>\n                            {context => context &&\n                                <MainMenu onSaveAs={context.actions.onSaveAs}\n                                            onImport={context.actions.onImport}\n                                            onOpenDemo={context.actions.onOpenDemo}/>\n                            }\n                        </ApplicationContextConsumer>\n                    </div>\n                    <div className=\"main\">\n                        <div className=\"viewport\">\n                            <ThreejsViewport width={600} height={600}/>\n                        </div>\n                        <div className=\"sidebar\">\n                            <ApplicationContextConsumer>\n                                {\n                                    context => context && <SceneGraphViewMaterial context={context} scene={context.scene} />\n                                }\n                            </ApplicationContextConsumer>\n                            <ApplicationContextConsumer>\n                                { context => context && context.selection.length > 0 &&\n                                    <PropertiesEditor object3d={context.selection[0]}/>\n                                }\n                            </ApplicationContextConsumer>\n                        </div>\n                    </div>\n                </div>\n            </ApplicationContextProvider>);\n    }\n}\n","import React, {useState} from 'react';\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {Application} from \"./components/Application\";\nimport {Bezier} from \"three.quarks\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { ThemeProvider } from '@material-ui/core';\nimport {BezierCurvesEditor} from \"./components/editors/bezier/BezierCurvesEditor\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: red[500],\n        },\n    },\n    typography: {\n        fontSize: 12,\n    }\n});\n\nconst App: React.FC = () => {\n\n  /*const [bezierCurves, setBezierCurves] = useState(\n      new PiecewiseBezier([\n        [new Bezier(0, 0.5 / 3, 0.5 / 3 * 2, 0.5), 0],\n        [new Bezier(0.5, 0.5, 0.5, 0.5), 0.5],\n      ])\n  );return <div className=\"App\">\n        <header className=\"App-header\">\n            <BezierCurvesEditor width={200} height={100} value={bezierCurves} onChange={(bezierCurves) => {setBezierCurves(bezierCurves)}}/>\n        </header>\n    </div>;*/\n\n    return (<ThemeProvider theme={theme}><Application /></ThemeProvider>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}