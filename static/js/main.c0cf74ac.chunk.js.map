{"version":3,"sources":["components/MainMenu.tsx","WebGL.ts","example/ToonProjectile.ts","example/BulletMuzzle.ts","example/BulletProjectile.ts","example/ToonExplosion.ts","example/Explosion.ts","example/LevelUp.ts","example/PickUp.ts","example/ShipSmoke.ts","example/ElectricBall.ts","example/ShipTrail.ts","example/Explosion2.ts","components/ApplicationContext.tsx","components/ThreejsViewport.tsx","components/editors/NumberInput.tsx","components/editors/Vector3Editor.tsx","components/editors/StringInput.tsx","components/ObjectProperties.tsx","components/editors/ColorEditor.tsx","components/editors/bezier/TransformComponent.tsx","components/editors/bezier/CurveComponent.tsx","components/editors/bezier/HandleComponent.tsx","components/editors/bezier/BezierCurvesEditor.tsx","components/editors/GeneratorEditor.tsx","components/ParticleSystemProperties.tsx","components/editors/FileInput.tsx","components/TexturePicker.tsx","components/ParticleRendererProperties.tsx","components/editors/ScriptEditor.tsx","components/ScriptProperties.tsx","components/EmitterShapeProperties.tsx","components/ParticleSystemController.tsx","components/BehaviorsProperties.tsx","components/PropertiesEditor.tsx","util/CodeExporter.ts","components/ScrollDialog.tsx","components/SceneGraphViewMaterial.tsx","components/Application.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styles","createStyles","theme","root","flexGrow","menuIcon","marginRight","spacing","menuButton","title","MainMenu","props","fileRef","openFileDialog","e","current","click","importFile","target","files","onImport","openDemo","demoIndex","onOpenDemo","handleMenuClick","event","console","log","currentTarget","setState","anchorEl","handleMenuClose","undefined","state","React","classes","this","className","AppBar","position","Toolbar","variant","IconButton","edge","color","aria-label","Typography","Button","aria-controls","aria-haspopup","onClick","id","Menu","keepMounted","open","Boolean","onClose","MenuItem","onSaveAs","ref","type","multiple","accept","style","display","onChange","withStyles","withTheme","WEBGL","isWebGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","isWebGL2Available","WebGL2RenderingContext","getWebGLErrorMessage","getErrorMessage","getWebGL2ErrorMessage","version","contexts","1","2","message","element","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","replace","innerHTML","ToonProjectile","textures","particles","smoke","glowBeam","mainBeam","texture","ParticleSystem","duration","looping","startLife","IntervalValue","startSpeed","ConstantValue","startSize","startColor","ConstantColor","Vector4","worldSpace","maxParticle","emissionOverTime","shape","SphereEmitter","radius","thickness","arc","Math","PI","blending","AdditiveBlending","startTileIndex","uTileCount","vTileCount","addBehavior","SizeOverLife","PiecewiseBezier","Bezier","emitter","renderOrder","name","add","RandomColor","ConeEmitter","angle","renderMode","RenderMode","StretchedBillBoard","speedFactor","NormalBlending","rotateY","startRotation","ColorOverLife","ColorRange","RotationOverLife","userData","script","func","Function","delta","update","Group","BulletMuzzle","beam","muzzle1","muzzle2","flash","emissionBursts","time","count","cycle","interval","probability","PointEmitter","muzzle","LocalSpaceBillBoard","FrameOverLife","x","rotation","BillBoard","y","BulletProjectile","hProjectile","vProjectile","TextureLoader","load","projectileParam","instancingGeometry","Gradient","ToonExplosion","circle","Explosion","gatherParticles","mainColor","yellowColor","secColor","yellowColor2","z","LevelUp","glow","glow2","particle","yellow","glowParam","glow2Param","particleParam","OrbitOverLife","PickUp","upflow","darkOrangeColor","redColor","ShipSmoke","grey","ElectricBall","beamWorld","electricity","electricBall","texture2","ShipTrail","Explosion2","circle2","SpeedOverLife","ApplicationContext","ApplicationContextConsumer","Consumer","ApplicationContextProvider","removeObject3d","object3D","parent","remove","duplicateObject3d","clone","addObject3d","object","scene","Mesh","BoxBufferGeometry","MeshStandardMaterial","actions","select","animate","updateProperties","texture1","Scene","selection","img","index","createScene","a","file","Blob","JSON","stringify","toJSON","href","URL","createObjectURL","download","nFiles","length","nFileId","jsonURL","loader","QuarksLoader","setCrossOrigin","selectAddition","indexOf","push","updateParticleSystem","addTexture","textureImage","demoObject","THREE","Color","axisHelper","AxesHelper","light","PointLight","set","ambientLight","AmbientLight","Provider","value","children","ThreejsViewport","container","stats","camera","renderer","clock","controls","appContext","onResize","domElement","parentElement","clientWidth","clientHeight","height","newWidth","newHeight","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","renderScene","init","prevProps","prevState","snapshot","body","appendChild","WebGLRenderer","Clock","PerspectiveCamera","OrbitControls","enableKeys","enableDamping","dampingFactor","rotateSpeed","setPixelRatio","devicePixelRatio","Stats","dom","left","right","getDelta","traverse","call","ParticleEmitter","system","render","context","NumberInput","inputValue","setInputValue","focus","setFocus","size","onBlur","parseFloat","onFocus","onKeyDown","key","Vector3Editor","unitConversion","StringInput","ObjectProperties","onChangeName","object3d","onChangePosition","onChangeScale","scale","onChangeRotation","ConvertToColor","w","ColorEditor","setOpen","backgroundColor","r","g","b","colorResult","min","rgb","interp","TransformComponent","xFrom","xTo","yFrom","yTo","nextProps","Component","CurveComponent","curveColor","curveWidth","p","segments","floor","curve","genValue","i","fill","stroke","strokeWidth","d","HandleComponent","xstart","ystart","handleRadius","handleColor","hover","down","handleStroke","xval","yval","onMouseEnter","onMouseLeave","onMouseDown","sx","sy","cx","cy","atan2","cxs","cos","cys","sin","x1","y1","x2","y2","BezierCurvesEditor","rootRef","createRef","positionForEvent","rect","getBoundingClientRect","clientX","clientY","top","inversex","inversey","onDownLeave","onDownMove","preventDefault","functions","curveIndex","getFunction","old","setStartX","pCurve","setFunction","setEndX","numOfFunctions","nCurve","onDownUp","h","defaultP","curves","getStartX","getEndX","slope0","getSlope","slope1","onDownHandle","onEnterHandle","onLeaveHandle","onMouseMove","onMouseUp","ValueToEditor","GeneratorEditor","changeEditor","generator","updateGenerator","changeValue","changeColor","changeValueA","changeValueB","changeColorRangeA","colorRange","changeColorRangeB","changeRandomColorA","randomColor","changeRandomColorB","changeCurve","allowedType","editorTypes","valueType","editorType","editor","currentEditor","getEditorType","map","ParticleSystemProperties","onChangeStartSpeed","particleSystem","onChangeStartLife","onChangeStartSize","onChangeStartColor","OnChangeStartRotation","OnChangeEmissionOverTime","valueFunctionTypes","colorValueFunctionTypes","FileInput","handleChange","htmlFor","component","useStyles","makeStyles","flexWrap","justifyContent","overflow","palette","paper","gridList","DialogTitle","closeButton","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","TexturePicker","useState","selected","setSelected","Dialog","handleClose","aria-labelledby","dividers","GridList","cellHeight","cols","GridListTile","src","alt","GridListTileBar","subtitle","handleUpload","handleSelect","ParticleRendererProperties","onChangeStartTile","onChangeUTileCount","u","onChangeVTileCount","v","onChangeBlending","material","onChangeWorldSpace","getValueOfBlending","getValueOfBoolean","onUploadTexture","image","Texture","onload","needsUpdate","reader","FileReader","result","readAsDataURL","onChangeTexture","closeTexturePicker","texturePickerOpen","openTexturePicker","gridWidth","gridHeight","objectPosition","ScriptEditor","onValueChange","highlight","code","languages","javascript","ScriptProperties","onChangeScript","EmitterShapeProperties","getValueOfShape","emitterShape","DonutEmitter","onChangeShape","onChangeKeyValue","k","properties","renderShapeProperties","PureComponent","ParticleSystemController","getSystems","systems","checkPause","paused","forEach","togglePause","play","pause","onRestart","restart","onStop","ToggleButtonGroup","ButtonGroup","disabled","listRoot","BehaviorsProperties","checked","setChecked","selectedIndex","setSelectedIndex","setAnchorEl","onAddNewBehavior","behavior","behaviors","onChangeBehaviorFunc","angularVelocityFunc","splice","List","dense","valueTypes","labelId","ListItem","handleListItemClick","ListItemIcon","Checkbox","currentIndex","newChecked","inputProps","ListItemText","primary","secondary","Accordion","border","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","marginBottom","minHeight","content","expandIcon","MuiAccordionSummary","heading","typography","pxToRem","fontWeightRegular","PropertiesEditor","setExpanded","panel","isExpanded","AccordionDetails","CodeExporter","str","word","toLowerCase","toUpperCase","indent","exportColor","repeat","exportBezier","Error","camelize","exportFunction","camelizeClass","exportParticleEmitter","ScrollDialog","useRef","scroll","aria-describedby","SceneGraphViewMaterial","setCode","nodeIds","countIndex","res","newIndex","parseInt","handleToggle","tagName","getObjectName","TreeView","onNodeToggle","onNodeSelect","defaultCollapseIcon","defaultExpandIcon","renderObject","items","originIndex","TreeItem","uuid","nodeId","label","data","Fragment","contextProps","json","exportCode","Application","createMuiTheme","main","blue","red","App","ThemeProvider","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0cf74ac.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {createStyles, Theme, Typography, Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface MainMenuProps {\n    onSaveAs: () => void;\n    onImport: (files: FileList) => void;\n    onOpenDemo: (demoIndex: number) => void;\n    classes: any\n}\n\ninterface MainMenuState {\n    anchorEl?: Element\n}\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuIcon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        marginRight: theme.spacing(1),\n        //flexGrow: 1,\n    },\n}));\n\nclass MainMenu extends React.PureComponent<MainMenuProps, MainMenuState> {\n    private fileRef: React.RefObject<HTMLInputElement>;\n\n    constructor(props: Readonly<MainMenuProps>) {\n        super(props);\n        this.state = {\n            anchorEl: undefined\n        }\n\n        this.fileRef = React.createRef();\n    }\n\n    openFileDialog = (e: React.MouseEvent<Element, MouseEvent>) => {\n        if (this.fileRef.current)\n            this.fileRef.current.click();\n    };\n\n    importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onImport(e.target.files);\n    };\n\n    openDemo = (demoIndex: number) => {\n        this.props.onOpenDemo(demoIndex);\n    };\n\n    handleMenuClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n        console.log(event.currentTarget);\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: undefined});\n    };\n\n    render() {\n        //<Image size='mini' src='/logo.png' style={{ marginRight: '1.5em' }} />\n        //<MenuIcon />\n        //<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n        //</IconButton>\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\">\n                        <IconButton edge=\"start\" className={classes.menuIcon} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Three.Quarks\n                        </Typography>\n                        <Button color=\"inherit\" className={classes.menuButton} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"file-button\">\n                            File\n                        </Button>\n                        <Menu\n                            id=\"file-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"file-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem>New</MenuItem>\n                            <MenuItem onClick={this.openFileDialog}>Open</MenuItem>\n                            <MenuItem onClick={this.props.onSaveAs}>Download</MenuItem>\n                            <input ref={this.fileRef} type=\"file\" id=\"fileElem\" multiple accept=\"application/json\"\n                                   style={{display: \"none\"}}\n                                   onChange={this.importFile}/>\n                        </Menu>\n                        <Button color=\"inherit\" className={classes.menuButton} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"demo-button\">\n                            Demo\n                        </Button>\n                        <Menu\n                            id=\"demo-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"demo-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem onClick={() => this.openDemo(0)}>PlasmaProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(1)}>BulletMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(2)}>BulletProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(3)}>ShipSmoke</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(4)}>HitImpact</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(5)}>Explosion</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(6)}>Levelup</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(7)}>Pickup</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(8)}>ElectricBall</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(9)}>ShipTrail</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(10)}>Explosion2</MenuItem>\n                        </Menu>\n                    </Toolbar>\n                </AppBar>\n            </div>);\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(MainMenu);","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport const WEBGL = {\n    isWebGLAvailable: function () {\n\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n        } catch ( e ) {\n            return false;\n        }\n\n    },\n\n    isWebGL2Available: function () {\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n        } catch ( e ) {\n            return false;\n        }\n    },\n\n    getWebGLErrorMessage: function () {\n        return this.getErrorMessage( 1 );\n    },\n\n    getWebGL2ErrorMessage: function () {\n        return this.getErrorMessage( 2 );\n    },\n\n    getErrorMessage: function ( version: number ) {\n        const names :{[version:number]: string} = {\n            1: 'WebGL',\n            2: 'WebGL 2'\n        };\n\n        const contexts :{[version:number]: string} = {\n            // @ts-ignore\n            1: window.WebGLRenderingContext,\n            // @ts-ignore\n            2: window.WebGL2RenderingContext\n        };\n\n        let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n        const element = document.createElement( 'div' );\n        element.id = 'webglmessage';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if ( contexts[ version ] ) {\n            message = message.replace( '$0', 'graphics card' );\n        } else {\n            message = message.replace( '$0', 'browser' );\n        }\n        message = message.replace( '$1', names[ version ] );\n        element.innerHTML = message;\n\n        return element;\n    }\n\n};\n","import {AdditiveBlending, Group, NormalBlending, Texture, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ToonProjectile extends Group {\n    private particles: ParticleSystem;\n    private smoke: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private mainBeam: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n\n        this.mainBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(3.5),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(2, 5),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 4.8423 / 180 * Math.PI,\n                radius: .3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .01,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n\n        this.add(this.particles.emitter);\n\n        this.smoke = new ParticleSystem({\n            startLife: new IntervalValue(0.25, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(.75, 1.25),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new SphereEmitter({\n                radius: .2,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n\n        this.add(this.smoke.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class BulletMuzzle extends Group {\n    private beam: ParticleSystem;\n    private muzzle1: ParticleSystem;\n    private muzzle2: ParticleSystem;\n    private flash: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.585716, 0.1691176, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        let muzzle = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.muzzle1 = new ParticleSystem(muzzle);\n        this.muzzle1.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle1.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle1.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle1.emitter.renderOrder = 2;\n        this.muzzle1.emitter.name = 'muzzle1';\n        this.muzzle1.emitter.position.x = 1;\n        this.add(this.muzzle1.emitter);\n\n        this.muzzle2 = new ParticleSystem(muzzle);\n        this.muzzle2.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle2.emitter.renderOrder = 2;\n        this.muzzle2.emitter.name = 'muzzle2';\n        this.muzzle2.emitter.position.x = 1;\n        this.muzzle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.muzzle2.emitter);\n\n        this.flash = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.flash.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.95, 0.82, 1), new Vector4(1, 0.38, 0.12, 1))));\n        this.flash.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(81, 84.333, 87.666, 91), 0]])));\n        this.flash.emitter.renderOrder = 2;\n        this.flash.emitter.name = 'flash';\n        this.add(this.flash.emitter);\n\n        this.smoke = new ParticleSystem({\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.smoke.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.rotation.y = Math.PI / 2;\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(1, 15),\n            startSize: new IntervalValue(0.1, 0.3),\n            startColor: new RandomColor(new Vector4(1, 0.91, 0.51, 1), new Vector4(1, 0.44, 0.16, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.emitter.renderOrder = 1;\n        this.particles.emitter.name = 'particles';\n        this.particles.emitter.rotation.y = Math.PI / 2;\n        this.add(this.particles.emitter);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.muzzle1.update(delta);\n        this.muzzle2.update(delta);\n        this.flash.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\nexport class BulletProjectile extends Group {\n    private hProjectile: ParticleSystem;\n    private vProjectile: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/projectile.png\");\n        texture.name = \"textures/projectile.png\";\n\n        let projectileParam = {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(4),\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 1,\n            vTileCount: 1,\n            instancingGeometry: [\n                -2, -0.5, 0, 0, 0,\n                2, -0.5, 0, 1, 0,\n                2, 0.5, 0, 1, 1,\n                -2, 0.5, 0, 0, 1\n            ],\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.hProjectile = new ParticleSystem(projectileParam);\n        this.hProjectile.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));\n        this.hProjectile.emitter.renderOrder = 2;\n        this.hProjectile.emitter.name = 'hProjectile';\n        this.add(this.hProjectile.emitter);\n\n        this.vProjectile = new ParticleSystem(projectileParam);\n        this.vProjectile.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));\n        this.vProjectile.emitter.renderOrder = 2;\n        this.vProjectile.emitter.name = 'vProjectile';\n        this.vProjectile.emitter.rotation.x = Math.PI / 2;\n        this.add(this.vProjectile.emitter);\n    }\n\n    update(delta: number) {\n        this.hProjectile.update(delta);\n        this.vProjectile.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ToonExplosion extends Group {\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n        this.mainBeam = new ParticleSystem({\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(5, 15),\n            startSize: new IntervalValue(1.5, 1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 25 * Math.PI / 180,\n                radius: 0.2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(0.7, 1.5),\n            startSize: new IntervalValue(0.4, 0.8),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 80 * Math.PI / 180,\n                radius: 0.25,\n                thickness: 0.5,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n        this.beam.update(delta);\n        this.circle.update(delta);\n    }\n}","import {AdditiveBlending, Group, NormalBlending, Scene, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier, ColorOverLife, ColorRange, ConstantColor,\n    ConstantValue, FrameOverLife,\n    IntervalValue,\n    ParticleSystem,\n    PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, RotationOverLife,\n    SizeOverLife,\n    SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Explosion extends Group {\n\n    static yellowColor = new Vector4(0.9, 0.60, 0.25, 1);\n    static yellowColor2 = new Vector4(1, 0.95, 0.4, 1);\n\n    private gatherParticles: ParticleSystem;\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n        let mainColor = Explosion.yellowColor;\n        let secColor = Explosion.yellowColor2;\n\n        this.gatherParticles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 3),\n            startColor: new ConstantColor(new Vector4(1,1,1,1)),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n            shape: new SphereEmitter({\n                radius: 40,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(mainColor.x, mainColor.y, mainColor.z, .2), new Vector4(mainColor.x, mainColor.y, mainColor.z, 1))));\n        this.gatherParticles.emitter.renderOrder = 2;\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.add(this.gatherParticles.emitter);\n\n        this.mainBeam = new ParticleSystem({\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(100, 300),\n            startSize: new IntervalValue(1.5, 12.5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(20, 45),\n            startSize: new IntervalValue(4, 8),\n            startColor: new ConstantColor(mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new IntervalValue(10, 15),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 7.5,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(mainColor, new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(40, 200),\n            startSize: new IntervalValue(1, 4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.35,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.beam.emitter.renderOrder = -2;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n    }\n\n    update(delta: number) {\n        //delta /= 1000;\n        this.gatherParticles.update(delta);\n        this.beam.update(delta);\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.circle.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class LevelUp extends Group {\n\n    private gatherParticles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glow2: ParticleSystem;\n    private particle: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n        this.name = 'levelUp';\n\n        let texture = textures[0].texture;\n\n        let yellow = new Vector4(.8,.8,.2, 1);\n\n        this.gatherParticles = new ParticleSystem({\n            duration: 0.5,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(100),\n            shape: new SphereEmitter({\n                radius: 60,\n                thickness: .8,\n                arc: Math.PI\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.05\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(.2, .2, .2, 1), new Vector4(1, 1, 1, 1))));\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.gatherParticles.emitter.renderOrder = 2;\n        this.add(this.gatherParticles.emitter);\n\n        let glowParam = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            instancingGeometry: [\n                -1, -1, 0, 0, 0,\n                1, -1, 0, 1, 0,\n                1, 1, 0, 1, 1,\n                -1, 1, 0, 0, 1\n            ],\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.glow = new ParticleSystem(glowParam);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.glow.emitter.renderOrder = 0;\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.glow.emitter);\n\n\n        let glow2Param = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        };\n\n        this.glow2 = new ParticleSystem(glow2Param);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1), 0], [new Bezier(1, 0.90, 0.75, 0), 0.2]])));\n        this.glow2.emitter.renderOrder = 0;\n        this.glow2.emitter.name = 'glow2';\n        this.add(this.glow2.emitter);\n\n        let particleParam = {\n            duration: 1.0,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(120, 180),\n            startSize: new IntervalValue(2, 4),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new PiecewiseBezier([[new Bezier(0, 0, 0, 0), 0], [new Bezier(50, 80, 80, 50), 0.4]]),\n            /*emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],*/\n            shape: new ConeEmitter({\n                radius: 25,\n                thickness: 0.2,\n                angle: Math.PI / 100\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            //speedFactor: 0.1,\n            renderMode: RenderMode.BillBoard\n        };\n\n        this.particle = new ParticleSystem(particleParam);\n        this.particle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.particle.addBehavior(new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, Math.PI * 4* 0.75, Math.PI * 4 * 0.90, Math.PI * 4),0]])));\n        this.particle.emitter.renderOrder = 2;\n        this.particle.emitter.name = 'particle';\n        this.particle.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.particle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.gatherParticles.update(delta);\n        this.glow.update(delta);\n        this.glow2.update(delta);\n        this.particle.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, FrameOverLife, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter, RandomColor,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class PickUp extends Group {\n\n    static yellowColor = new Vector4(1, 1, 0.3, 1);\n    static darkOrangeColor = new Vector4(1, 0.7, 0.1, 1);\n    static redColor = new Vector4(1, 0, 0, 1);\n\n    private particles: ParticleSystem;\n    private circle: ParticleSystem;\n    private upflow: ParticleSystem;\n    private beam: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.6),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(2, 10),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: false,\n\n            maxParticle: 2000,\n            emissionOverTime: new ConstantValue(40),\n\n            emissionBursts: [{\n                time: 0,\n                count: 100,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n            shape: new ConeEmitter({\n                radius: 30,\n                thickness: 2,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.circle.addBehavior(new OrbitOverLife(new IntervalValue(6, 8)));\n\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.88, 0.88, 0), 0]])));\n        this.circle.addBehavior(new ColorOverLife(new ColorRange(new Vector4(0.2, 0.6, 1, 1), new Vector4(0.2, 0.2, 1, 1))))\n        this.circle.emitter.renderOrder = 3;\n        this.circle.emitter.name = 'mainBeam';\n\n        this.add(this.circle.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.6),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(PickUp.yellowColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.5, 0.6666, 1), 0]])));\n        this.add(this.beam.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(20, 30),\n            startSize: new IntervalValue(2, 6),\n            startColor: new RandomColor(PickUp.darkOrangeColor, PickUp.redColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 20,\n                thickness: 3,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.3, 0.25, 0.1), 0]])));\n        this.particles.emitter.renderOrder = 2;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.upflow = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.6),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(60),\n            startColor: new RandomColor(new Vector4(1, 0.2, 0, 1), PickUp.redColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard\n        });\n        this.upflow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.9, 0.6, 0.3), 0]])));\n        this.upflow.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(38, 39, 40, 46), 0]])));\n        this.upflow.emitter.renderOrder = 1;\n        this.upflow.emitter.name = 'upflow';\n        this.add(this.upflow.emitter);\n\n    }\n\n    update(delta: number) {\n        this.circle.update(delta);\n        this.beam.update(delta);\n        this.upflow.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipSmoke extends Group {\n\n    private smoke: ParticleSystem;\n    constructor(textures: TextureImage[]) {\n        super();\n        this.name = 'shipSmoke';\n\n        let texture = textures[0].texture;\n\n        let grey = new Vector4(.5, .5, .5, 1);\n\n        this.smoke = new ParticleSystem({\n            duration: 5,\n            looping: true,\n            startLife: new IntervalValue(1.5, 3),\n            startSpeed: new IntervalValue(20, 30),\n            startSize: new IntervalValue(10, 15),\n            startColor: new ConstantColor(grey),\n            worldSpace: true,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new ConeEmitter({\n                radius: 10,\n                thickness: 1,\n                angle: 0.2\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(.8, .8, .8, 0))));\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.2, 1, 1, 1), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.renderOrder = 2;\n        this.smoke.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.smoke.emitter);\n    }\n\n    update(delta: number) {\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ElectricBall extends Group {\n    private beam: ParticleSystem;\n    private beamWorld: ParticleSystem;\n    private electricity: ParticleSystem;\n    private electricBall: ParticleSystem;\n    /*private sparks: ParticleSystem;*/\n\n    constructor(textures: TextureImage[]) {\n        super();\n        this.name = 'ElectricBall';\n\n        let texture2 = textures[1].texture;\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(15.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.beamWorld = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(7.5, 15),\n            startColor: new RandomColor(new Vector4(0.1397059 * 0.8, 0.3592291 * 0.8, 1 * 0.8, 1), new Vector4(1 * 0.8, 0.9275356 * 0.8, 0.1029412 * 0.8, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n            shape: new SphereEmitter({\n                radius: 0.01,\n                thickness: 1,\n                arc: Math.PI * 2\n            }),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beamWorld.emitter.renderOrder = 0;\n        this.beamWorld.emitter.name = 'beamWorld';\n        this.beamWorld.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0))));\n        this.add(this.beamWorld.emitter);\n\n        this.electricity = new ParticleSystem({\n            duration: 0.5,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(3, 6),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        //this.electricity.addBehavior(new ColorOverLife(([[new Bezier(61, 64, 67, 70), 0]])));\n        this.electricity.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(53, 56, 59, 62), 0]])));\n        this.electricity.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1.0, 1.0, 0.75, 0), 0]])));\n        this.electricity.emitter.renderOrder = 2;\n        this.electricity.emitter.name = 'electricity';\n        this.add(this.electricity.emitter);\n\n        this.electricBall = new ParticleSystem({\n            duration: 0.4,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(5, 10),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(3),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.electricBall.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(62, 65, 68, 71), 0]])));\n        this.electricBall.emitter.renderOrder = 1;\n        this.electricBall.emitter.name = 'electricBall';\n        this.add(this.electricBall.emitter);\n        /*\n        this.sparks = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n*/\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.beamWorld.update(delta);\n        this.electricity.update(delta);\n        this.electricBall.update(delta);\n        /*this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.circle.update(delta);*/\n    }\n}","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipTrail extends Group {\n    private particles: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private beam: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(20.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.add(this.beam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(10),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: true,\n\n            maxParticle: 500,\n            emissionOverTime: new ConstantValue(120),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 1.0, 0.8, 0.5), 0]])));\n        this.glowBeam.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1,1,1,1), new Vector4(0,0,0,0))));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(20, 40),\n            startSize: new IntervalValue(1, 2),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(0.5220588, 0.6440161, 1, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 80 / 180 * Math.PI,\n                radius: 1,\n                thickness: 0.3,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .2,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 200;\\n\" +\n                \"    if (this.position.x > 200)\\n\" +\n                \"        this.position.x = -200;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, Scene, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier, ColorOverLife, ColorRange, ConstantColor,\n    ConstantValue, FrameOverLife,\n    IntervalValue,\n    ParticleSystem,\n    PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, RotationOverLife,\n    SizeOverLife, SpeedOverLife,\n    SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Explosion2 extends Group {\n\n    static yellowColor = new Vector4(0.9, 0.60, 0.25, 1);\n    static yellowColor2 = new Vector4(1, 0.95, 0.4, 1);\n\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private circle: ParticleSystem;\n    private circle2: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n        let mainColor = Explosion2.yellowColor;\n        let secColor = Explosion2.yellowColor2;\n\n        this.mainBeam = new ParticleSystem({\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(100, 300),\n            startSize: new IntervalValue(1.5, 12.5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(20, 45),\n            startSize: new IntervalValue(4, 8),\n            startColor: new ConstantColor(mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.8, 1.2),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new IntervalValue(10, 15),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 7.5,\n                arc: Math.PI,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(mainColor, new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.addBehavior(new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(40, 200),\n            startSize: new IntervalValue(1, 4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem({\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.beam.emitter.renderOrder = -2;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n\n        this.circle2 = new ParticleSystem({\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard\n        });\n        this.circle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle2.emitter.renderOrder = 2;\n        this.circle2.emitter.name = 'circle';\n        this.circle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.circle2.emitter);\n    }\n\n    update(delta: number) {\n        //delta /= 1000;\n        this.beam.update(delta);\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.circle.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n        this.circle2.update(delta);\n    }\n}\n","import * as React from \"react\";\nimport * as THREE from \"three\";\nimport {Object3D, Scene, Texture} from \"three\";\nimport {ParticleEmitter, QuarksLoader} from \"three.quarks\";\nimport {Application} from \"./Application\";\nimport {TextureLoader} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {AdditiveBlending} from \"three\";\nimport {Mesh} from \"three\";\nimport {BoxBufferGeometry} from \"three\";\nimport {MeshStandardMaterial} from \"three\";\nimport {ToonProjectile} from \"../example/ToonProjectile\";\nimport {Color} from \"three\";\nimport {AxesHelper} from \"three\";\nimport {PointLight} from \"three\";\nimport {AmbientLight} from \"three\";\nimport {BulletMuzzle} from \"../example/BulletMuzzle\";\nimport {BulletProjectile} from \"../example/BulletProjectile\";\nimport {BulletHit} from \"../example/BulletHit\";\nimport {ToonExplosion} from \"../example/ToonExplosion\";\nimport {Explosion} from \"../example/Explosion\";\nimport {LevelUp} from \"../example/LevelUp\";\nimport {PickUp} from \"../example/PickUp\";\nimport {ShipSmoke} from \"../example/ShipSmoke\";\nimport {ElectricBall} from \"../example/ElectricBall\";\nimport {ShipTrail} from \"../example/ShipTrail\";\nimport {Explosion2} from \"../example/Explosion2\";\n\n\nexport interface TextureImage {\n    img: string,\n    texture: Texture,\n}\n\nexport interface AppContext {\n    scene: THREE.Scene;\n    script: (delta: number) => void;\n    selection: Array<Object3D>;\n    textures: Array<TextureImage>;\n    actions: {\n        onOpenDemo: (index: number)=>void;\n        onSaveAs: ()=>void;\n        onImport: (files: FileList)=>void;\n        select: (object: Object3D) => void;\n        selectAddition: (object: Object3D) => void;\n        addObject3d: (type: string, parent: Object3D) => void;\n        removeObject3d: (object: Object3D) => void;\n        duplicateObject3d: (object: Object3D) => void;\n        updateParticleSystem: (object: ParticleEmitter) => void;\n        addTexture: (textureImage: TextureImage) => void;\n        updateProperties: () => void;\n    }\n}\n\nconst ApplicationContext = React.createContext<AppContext | null>(null);\n\nexport const ApplicationContextConsumer = ApplicationContext.Consumer;\n\nexport class ApplicationContextProvider extends React.Component<{ }, AppContext> {\n\n    createScene(demoIndex: number) {\n        const scene = new THREE.Scene();\n\n        scene.background = new Color(0x666666);\n\n        let demoObject;\n        if (demoIndex === 0) {\n            demoObject = new ToonProjectile(this.state.textures);\n            demoObject.name = \"Toon Projectile\";\n        } else if (demoIndex === 1) {\n            demoObject = new BulletMuzzle(this.state.textures);\n            demoObject.name = \"BulletMuzzle\";\n        } else if (demoIndex === 2) {\n            demoObject = new BulletProjectile();\n            demoObject.name = \"BulletProjectile\";\n        } else if (demoIndex === 3) {\n            demoObject = new ShipSmoke(this.state.textures);\n            demoObject.name = \"shipSmoke\";\n        } else if (demoIndex === 4) {\n            demoObject = new ToonExplosion(this.state.textures);\n            demoObject.name = \"ToonExplosion\";\n        } else if (demoIndex === 5) {\n            demoObject = new Explosion(this.state.textures);\n            demoObject.name = \"Explosion\";\n        } else if (demoIndex === 6) {\n            demoObject = new LevelUp(this.state.textures);\n            demoObject.name = \"LevelUp\";\n        } else if (demoIndex === 7) {\n            demoObject = new PickUp(this.state.textures);\n            demoObject.name = \"PickUp\";\n        } else if (demoIndex == 8) {\n            demoObject = new ElectricBall(this.state.textures);\n            demoObject.name = \"ElectricBall\";\n        } else if (demoIndex == 9){\n            demoObject = new ShipTrail(this.state.textures);\n            demoObject.name = \"ShipTrail\";\n        } else if (demoIndex == 10) {\n            demoObject = new Explosion2(this.state.textures);\n            demoObject.name = \"Explosion2\";\n        } else {\n            demoObject = new Explosion2(this.state.textures);\n            demoObject.name = \"Explosion2\";\n        }\n        scene.add(demoObject);\n\n        const axisHelper = new AxesHelper(100);\n        axisHelper.name = \"axisHelper\";\n        scene.add(axisHelper);\n\n        const light = new PointLight(new Color(1, 1, 1), 0.8, 200);\n        light.position.set(50, 50, 50);\n        scene.add(light);\n\n        const ambientLight = new AmbientLight(new Color(1, 1, 1), 0.2);\n        scene.add(ambientLight);\n\n        return scene;\n    }\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        const texture1 = new TextureLoader().load(\"textures/texture1.png\");\n        texture1.name = \"textures/texture1.png\";\n        const texture2 = new TextureLoader().load(\"textures/texture2.png\");\n        texture2.name = \"textures/texture2.png\";\n\n        const state: AppContext = {\n            scene: new Scene(),\n            script: this.animate,\n            selection: [],\n            textures: [\n                {img: './textures/texture1.png', texture: texture1},\n                {img: './textures/texture2.png', texture: texture2},\n            ],\n            actions: {\n                onOpenDemo: (index: number) => {\n                    const scene = this.createScene(index);\n                    this.setState({scene: scene});\n                },\n                onSaveAs: () => {\n                    const a = document.createElement(\"a\");\n                    const file = new Blob([JSON.stringify(this.state.scene.toJSON())], {type: \"application/json\"});\n                    a.href = URL.createObjectURL(file);\n                    a.download = \"scene.json\";\n                    a.click();\n                },\n                onImport: (files: FileList) => {\n                    const nFiles = files.length;\n                    for (let nFileId = 0; nFileId < nFiles; nFileId++) {\n                        const jsonURL = URL.createObjectURL( files[nFileId] );\n\n                        const loader = new QuarksLoader();\n                        loader.setCrossOrigin(\"\");\n                        loader.load(jsonURL, (object3D: Object3D)=>{\n                            this.state.scene.add(object3D);\n                        }, ()=>{}, ()=>{});\n                    }\n                },\n                select: object => {\n                    this.setState({selection: [object]});\n                },\n                selectAddition: object => {\n                    if (this.state.selection.indexOf(object) === -1) {\n                        this.state.selection.push(object);\n                        this.setState({selection: this.state.selection});\n                    }\n                },\n                addObject3d: this.addObject3d,\n                removeObject3d: this.removeObject3d,\n                duplicateObject3d: this.duplicateObject3d,\n                updateParticleSystem: () => {\n                },\n                updateProperties: () => {\n                    this.setState({scene: this.state.scene});\n                },\n                addTexture: (textureImage: TextureImage) => {\n                    this.state.textures.push(textureImage);\n                    this.setState({textures: this.state.textures});\n                }\n            }\n        };\n\n        this.state = state;\n    }\n\n    removeObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.remove(object3D);\n        }\n    };\n\n    duplicateObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.add(object3D.clone());\n        }\n    }\n\n    addObject3d = (type: string, parent: Object3D) => {\n        let object;\n        switch (type) {\n            case 'particle':\n                const texture = this.state.textures[0].texture;\n                const particleSystem = new ParticleSystem({\n                    maxParticle: 10000,\n                    shape: new ConeEmitter(),\n                    emissionOverTime: new ConstantValue(100),\n                    startLife: new ConstantValue(30),\n                    startSpeed: new ConstantValue(10),\n                    startSize: new ConstantValue(1),\n                    startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n                    texture: texture,\n                    blending: AdditiveBlending,\n                    startTileIndex: 0,\n                    uTileCount: 10,\n                    vTileCount: 10,\n                    worldSpace: true,\n                });\n                object = particleSystem.emitter;\n                this.state.scene.add(object);\n                break;\n            case 'box':\n                object = new Mesh(new BoxBufferGeometry(10, 10, 10), new MeshStandardMaterial({color: 0xcccccc}));\n                this.state.scene.add(object);\n                break;\n        }\n        if (object) {\n            parent.add(object);\n            this.state.actions.select(object);\n            this.setState({});\n        }\n    };\n\n\n    update = 0;\n    animate = (delta: number) => {\n        /*this.toonProjectile!.position.x += delta * 30;\n        if (this.toonProjectile!.position.x > 20)\n            this.toonProjectile!.position.x = -20;*/\n\n        this.update += delta;\n        if (this.update > 0.1) {\n            this.state.actions.updateProperties();\n            this.update = 0;\n        }\n    };\n\n    render() {\n        //console.log( \"rendering ApplicationContext \");\n        return (\n            <ApplicationContext.Provider value={this.state}>\n                {this.props.children}\n            </ApplicationContext.Provider>\n        )\n    }\n}\n/*\n        this.particleSystem = new ParticleSystem({\n            maxParticle: 10000,\n            shape: new ConeEmitter(),\n            emissionOverTime: new ConstantValue(100),\n            startLife: new ConstantValue(30),\n            startSpeed: new ConstantValue(10),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(1,1,1, 1)),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            worldSpace: true,\n        });*/\n//this.particleSystem.emitter.position.set(10, 0, 0);\n//scene.add(this.particleSystem.emitter);","import * as React from \"react\";\nimport Stats from \"stats.js\";\nimport {WEBGL} from \"../WebGL\";\nimport {\n    PerspectiveCamera,\n    WebGLRenderer,\n    Clock,\n} from \"three\";\nimport {RefObject} from \"react\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\n\ninterface ThreejsViewportProps {\n    width: number;\n    height: number;\n}\n\nexport class ThreejsViewport extends React.PureComponent<ThreejsViewportProps> {\n    container: RefObject<HTMLDivElement>;\n    stats?: Stats;\n    camera?: PerspectiveCamera;\n    renderer?: WebGLRenderer;\n    private clock?: Clock;\n    private controls?: OrbitControls;\n\n    private appContext?: AppContext;\n\n    constructor(props: Readonly<ThreejsViewportProps>) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    componentDidMount(): void {\n        if ( this.init() ) {\n            this.animate();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ThreejsViewportProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        this.camera!.aspect = this.props.width / this.props.height;\n        this.camera!.updateProjectionMatrix();\n        this.renderer!.setSize( this.props.width, this.props.height );\n    }\n\n    init() {\n        if (!this.container.current) {\n            return false;\n        }\n\n        if ( !WEBGL.isWebGLAvailable() ) {\n            document.body.appendChild( WEBGL.getWebGLErrorMessage() );\n            return false;\n        }\n\n        this.renderer = new WebGLRenderer();\n\n        /*if ( this.renderer.extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n            document.getElementById( 'notSupported' )!.style.display = '';\n            return false;\n        }*/\n\n        const width = this.props.width;\n        const height = this.props.height;\n\n        this.clock = new Clock();\n\n        this.camera = new PerspectiveCamera( 50, width / height, 1, 1000 );\n        this.camera.position.set(50, 50, 50);\n\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.controls.enableKeys = false;\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.1;\n        this.controls.rotateSpeed = 0.2;\n        this.controls.update();\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( width, height );\n        this.container.current!.appendChild( this.renderer.domElement );\n\n        this.stats = new Stats();\n        this.stats.dom.style.position = \"absolute\";\n        this.stats.dom.style.left = \"\";\n        this.stats.dom.style.right = \"0\";\n        this.container.current!.appendChild( this.stats.dom );\n\n        //window.addEventListener( 'resize', this.onWindowResize, false );\n\n        this.onResize(null);\n\n        return true;\n\n    }\n\n    onResize = (event: any ) => {\n\n        if (this.renderer!.domElement.parentElement!.clientWidth - 10 !== this.renderer!.domElement.width ||\n            this.renderer!.domElement.parentElement!.clientHeight - 10 !== this.renderer!.domElement.height) {\n\n            const newWidth = this.renderer!.domElement.parentElement!.clientWidth - 10;\n            const newHeight = this.renderer!.domElement.parentElement!.clientHeight - 10;\n\n            this.camera!.aspect = newWidth / newHeight;\n            this.camera!.updateProjectionMatrix();\n            this.renderer!.domElement.style.width = '100%';\n            this.renderer!.domElement.style.height = '100%';\n            this.renderer!.setSize(newWidth, newHeight);\n        }\n    };\n\n    animate = () => {\n        requestAnimationFrame( this.animate );\n\n        this.onResize(null);\n        this.renderScene();\n        this.stats!.update();\n    };\n\n    renderScene() {\n        if (this.appContext) {\n            this.controls!.update();\n            const delta = this.clock!.getDelta();\n            //console.log(delta);\n            //let time = performance.now() * 0.0005;\n            //this.particleSystem!.update(this.clock!.getDelta());\n            this.appContext.script(delta);\n            //this.particleSystem!.emitter.rotation.y = this.clock!.getElapsedTime();\n            //this.particleSystem!.emitter.position.set(Math.cos(this.clock!.getElapsedTime()) * 20, 0, Math.sin(this.clock!.getElapsedTime()) * 20);\n            //console.log(this.particleSystem!.emitter.modelViewMatrix);\n\n            this.appContext.scene.traverse(object => {\n                if (object.userData && object.userData.func) {\n                    object.userData.func.call(object, delta);\n                }\n                if (object instanceof ParticleEmitter) {\n                    /*if (object.name === 'muzzle1' && object.system.particleNum > 0) {\n                        console.log(object.system.particles);\n                    }*/\n                    object.system.update(delta);\n                }\n            });\n\n            this.renderer!.render(this.appContext.scene, this.camera!);\n        }\n    }\n\n    render() {\n        console.log( \"rendering ThreejsViewPort\");\n        return (\n        <ApplicationContextConsumer>\n            { context => {\n                    if (context) {\n                        this.appContext = context;\n                        return <div ref={this.container} style={{width: '100%', height: '100%'}}></div>;\n                    }\n                }\n            }\n        </ApplicationContextConsumer>);\n    }\n}\n","import * as React from 'react';\nimport \"./NumberInput.scss\";\n\ninterface NumberInputProps{\n    value: number;\n    onChange: (value: number)=>void;\n}\n\nexport const NumberInput : React.FC<NumberInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value + '');\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        const x = parseFloat(inputValue);\n        if (x !== props.value)\n            props.onChange(x);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value + '') {\n            setInputValue(props.value + '');\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            const x = parseFloat(inputValue);\n            if (x !== props.value)\n                props.onChange(x);\n        }\n    };\n\n    return <input className=\"number-input\" value={focus? inputValue: props.value} size={5}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {NumberInput} from \"./NumberInput\";\n\ninterface Vector3Props {\n    name: string;\n    x: number;\n    y: number;\n    z: number;\n    onChange: (x: number, y: number, z: number)=>void;\n    unitConversion?: number;\n}\n\nexport class Vector3Editor extends React.PureComponent<Vector3Props> {\n    render() {\n        console.log('rendered Vector3');\n        const {x, y, z, unitConversion = 1, onChange, name} = this.props;\n        return(<div className=\"property\">\n                <label className=\"name\">{name}</label>\n                <label>X:</label><NumberInput value={x * unitConversion} onChange={value => {onChange(value / unitConversion, y, z)}}/>\n                <label>Y:</label><NumberInput value={y * unitConversion} onChange={value => {onChange(x, value / unitConversion, z)}}/>\n                <label>Z:</label><NumberInput value={z * unitConversion} onChange={value => {onChange(x, y, value / unitConversion)}}/>\n            </div>\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringInputProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const StringInput : React.FC<StringInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return <input className=\"string-input\" value={focus? inputValue: props.value} size={20}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\n\n\ninterface ObjectPropertiesProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ObjectPropertiesState {\n\n}\n\nexport class ObjectProperties extends React.PureComponent<ObjectPropertiesProps, ObjectPropertiesState> {\n    constructor(props: Readonly<ObjectPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeName = (name: string) => {\n        this.props.object3d.name = name;\n        this.props.updateProperties();\n    };\n    onChangePosition = (x: number, y: number, z: number) => {\n        this.props.object3d.position.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeScale = (x: number, y: number, z: number) => {\n        this.props.object3d.scale.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeRotation = (x: number, y: number, z: number) => {\n        this.props.object3d.rotation.set(x, y, z);\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Name:</label>\n                            <StringInput value={this.props.object3d.name} onChange={this.onChangeName}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Position\" x={this.props.object3d.position.x}\n                                       y={this.props.object3d.position.y} z={this.props.object3d.position.z}\n                                       onChange={this.onChangePosition}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Rotation\" x={this.props.object3d.rotation.x}\n                                       y={this.props.object3d.rotation.y} z={this.props.object3d.rotation.z}\n                                       onChange={this.onChangeRotation} unitConversion={180 / Math.PI}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Scale\" x={this.props.object3d.scale.x}\n                                       y={this.props.object3d.scale.y} z={this.props.object3d.scale.z}\n                                       onChange={this.onChangeScale}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport {ColorResult, SketchPicker} from \"react-color\";\nimport {Vector4} from \"three\";\nimport \"./ColorEditor.scss\";\n\ninterface ColorEditorProps {\n    color: Vector4;\n    onChange: (color: Vector4) => void;\n}\n\nfunction ConvertToColor(color: Vector4) {\n    return `rgba(${((color.x * 255) | 0)},${((color.y * 255) | 0)},${((color.z * 255) | 0)},${color.w})`;\n}\n\nexport const ColorEditor: React.FC<ColorEditorProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const togglePicker = () => {\n        setOpen(!open);\n    };\n\n    const closePicker = () => {\n        setOpen(false);\n    };\n\n    const colorChange = (colorResult: ColorResult) => {\n        const color = new Vector4();\n        color.x = Math.min(255, colorResult.rgb.r) / 255;\n        color.y = Math.min(255, colorResult.rgb.g) / 255;\n        color.z = Math.min(255, colorResult.rgb.b) / 255;\n        color.w = colorResult.rgb.a!;\n        onChange(color);\n    };\n\n    const {color, onChange} = props;\n\n    return (\n        <div className=\"color-editor\">\n            <button style={{backgroundColor: ConvertToColor(color), height: '20px'}} onClick={togglePicker}/>\n            {ConvertToColor(color)}\n            {\n                open ? <div className=\"popover\">\n                    <div className=\"cover\" onClick={closePicker}/>\n                    <SketchPicker\n                        color={{\n                            r: ((color.x * 255) | 0),\n                            g: ((color.y * 255) | 0),\n                            b: ((color.z * 255) | 0),\n                            a: color.w\n                        }}\n                        onChange={colorChange}/>\n                </div> : null\n            }\n        </div>);\n};\n","import React from \"react\";\n\nfunction interp(a: number, b: number, x: number) {\n    return a * (1 - x) + b * x;\n}\n\nexport interface TransformProps {\n    xFrom: number;\n    yFrom: number;\n    xTo: number;\n    yTo: number;\n}\n\nexport class TransformComponent<T extends TransformProps = TransformProps, K = {}> extends React.Component<T, K> {\n\n    x = (value: number) => interp(this.props.xFrom, this.props.xTo, value);\n    y = (value: number) => interp(this.props.yFrom, this.props.yTo, value);\n\n    shouldComponentUpdate(nextProps: TransformProps) {\n        const { xFrom, yFrom, xTo, yTo } = this.props;\n        return (\n            nextProps.xFrom !== xFrom ||\n            nextProps.yFrom !== yFrom ||\n            nextProps.xTo !== xTo ||\n            nextProps.yTo !== yTo\n        );\n    }\n}","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\nimport {Bezier} from \"three.quarks\";\n\nexport interface CurveProps extends TransformProps {\n    curveColor: string;\n    curveWidth: number;\n    value: Bezier;\n}\n\nexport class CurveComponent extends TransformComponent<CurveProps> {\n    shouldComponentUpdate(nextProps: CurveProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const [p0, p1, p2, p3] = value.p;\n        return nextProps.curveColor !== curveColor ||\n            nextProps.curveWidth !== curveWidth ||\n            nextProps.value !== value;\n    }\n\n    render() {\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const {x, y} = this;\n\n        const segments = Math.floor((x(1) - x(0)) / 5);\n\n        let curve = `M${x(0)},${y(value.genValue(0))} `;\n        if (segments > 0) {\n            for (let i = 1 / segments; i <= 1; i += 1 / segments) {\n                curve += `L${x(i)},${y(value.genValue(i))} `;\n            }\n        }\n        curve += `L${x(1)},${y(value.genValue(1))} `;\n\n        return (<path\n            fill=\"none\"\n            stroke={curveColor}\n            strokeWidth={curveWidth}\n            d={curve} />);\n    }\n}\n","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\n\ninterface HandleProps extends TransformProps {\n    handleRadius: number,\n    handleColor: string,\n    hover: boolean,\n    down: boolean,\n    background: string,\n    handleStroke: number,\n    xstart: number,\n    ystart: number,\n    xval: number,\n    yval: number,\n    onMouseEnter: (event: React.MouseEvent)=>void,\n    onMouseLeave: (event: React.MouseEvent)=>void,\n    onMouseDown: (event: React.MouseEvent)=>void,\n}\n\nexport class HandleComponent extends TransformComponent<HandleProps> {\n    shouldComponentUpdate(nextProps: HandleProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n        return nextProps.xstart !== xstart ||\n            nextProps.ystart !== ystart ||\n            nextProps.handleRadius !== handleRadius ||\n            nextProps.handleColor !== handleColor ||\n            nextProps.hover !== hover ||\n            nextProps.down !== down ||\n            nextProps.background !== background ||\n            nextProps.handleStroke !== handleStroke ||\n            nextProps.xval !== xval ||\n            nextProps.yval !== yval ||\n            nextProps.onMouseDown !== onMouseDown ||\n            nextProps.onMouseLeave !== onMouseLeave ||\n            nextProps.onMouseEnter !== onMouseEnter;\n    }\n\n    render() {\n        const { x, y } = this;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n\n        const sx = x(xstart);\n        const sy = y(ystart);\n        const cx = x(xval);\n        const cy = y(yval);\n        const a = Math.atan2(cy-sy, cx-sx);\n        const cxs = cx - handleRadius * Math.cos(a);\n        const cys = cy - handleRadius * Math.sin(a);\n\n        return <g>\n            <line\n                stroke={handleColor}\n                strokeWidth={hover||down ? 1 + handleStroke : handleStroke}\n                x1={cxs}\n                y1={cys}\n                x2={sx}\n                y2={sy} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={handleRadius}\n                stroke={handleColor}\n                strokeWidth={down ? 2 * handleStroke : handleStroke}\n                fill={down ? background: handleColor}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseDown={onMouseDown} />\n        </g>;\n    }\n}","import * as React from \"react\";\nimport {CurveComponent} from \"./CurveComponent\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {HandleComponent} from \"./HandleComponent\";\nimport {createRef} from \"react\";\n\ninterface BezierCurvesEditorProps {\n    value: PiecewiseBezier\n    onChange?: (value:PiecewiseBezier) => void,\n    width: number,\n    height: number,\n    padding?: Array<number>,\n    className?: string,\n    background?: string,\n    gridColor?: string,\n    curveColor?: string,\n    handleColor?: string,\n    curveWidth?: number,\n    handleRadius?: number,\n    handleStroke?: number,\n    readOnly?: boolean,\n    style?: React.CSSProperties,\n    pointers?: React.CSSProperties,\n    textStyle?: React.CSSProperties,\n}\n\ninterface BezierCurvesEditorState {\n    curve: number,\n    hover: number,\n    down: number,\n}\n\nexport class BezierCurvesEditor extends React.PureComponent<BezierCurvesEditorProps, BezierCurvesEditorState> {\n\n\n    static defaultP = {\n        padding: [0, 0, 0, 0],\n        handleRadius: 4,\n    }; //[25, 5, 25, 18]\n\n    constructor(props: Readonly<BezierCurvesEditorProps>) {\n        super(props);\n        this.state = {\n            curve: -1,\n            down: -1,\n            hover: -1,\n        };\n    }\n\n    rootRef = createRef<HTMLDivElement>();\n\n    positionForEvent = (e: React.MouseEvent) => {\n        if (this.rootRef.current) {\n            const rect = this.rootRef.current.getBoundingClientRect();\n            return [e.clientX - rect.left, e.clientY - rect.top];\n        } else {\n            return [0, 0];\n        }\n    };\n\n    x = (value:number) => {\n    };\n\n    y = (value:number) => {\n    };\n\n    inversex = (x:number) => {\n    };\n\n    inversey = (y:number) => {\n    };\n\n    onDownLeave = (e: React.MouseEvent) => {\n        if (this.state.down) {\n            this.onDownMove(e);\n            this.setState({\n                down: -1,\n                hover: -1\n            });\n        }\n    };\n    onDownMove = (e: React.MouseEvent) => {\n        if (this.state.down >= 0) {\n            e.preventDefault();\n            const [x, y] = this.positionForEvent(e);\n            const value = new PiecewiseBezier(this.props.value.functions);\n\n            const valueX = x / this.props.width;\n            const curveIndex = this.state.curve;\n            const curve = value.getFunction(curveIndex);\n\n            if (this.state.down === 0) {\n                const old = curve.p[0];\n                curve.p[0] = (this.props.height - y) / this.props.height;\n                curve.p[1] += curve.p[0] - old;\n                value.setStartX(curveIndex, x / this.props.width);\n                if (curveIndex - 1 >= 0) {\n                    const pCurve = value.getFunction(curveIndex - 1);\n                    pCurve.p[3] = (this.props.height - y) / this.props.height;\n                    pCurve.p[2] += curve.p[0] - old;\n                    value.setFunction(curveIndex - 1, value.getFunction(curveIndex - 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 3) {\n                const old = curve.p[3];\n                curve.p[3] = (this.props.height - y) / this.props.height;\n                curve.p[2] += curve.p[3] - old;\n                value.setEndX(curveIndex, x / this.props.width);\n                if (curveIndex + 1 < value.numOfFunctions) {\n                    const nCurve = value.getFunction(curveIndex + 1);\n                    nCurve.p[0] = (this.props.height - y) / this.props.height;\n                    nCurve.p[1] += curve.p[3] - old;\n                    value.setFunction(curveIndex + 1, value.getFunction(curveIndex + 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 1) {\n                curve.p[1] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 2) {\n                curve.p[2] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            //value[i] = this.inversex(x);\n            //value[i + 1] = this.inversey(y);\n            if (this.props.onChange)\n                this.props.onChange(value);\n        }\n    };\n\n    onDownUp = () => {\n        // this.onDownMove(e);\n        this.setState({\n            down: -1,\n        });\n    };\n\n\n    onEnterHandle(curve: number, h: number) {\n        if (!this.state.down) {\n            this.setState({\n                hover: h,\n                curve: curve,\n            });\n        }\n    }\n    onDownHandle(curve: number, h: number, e: React.MouseEvent) {\n        e.preventDefault();\n        this.setState({\n            hover: -1,\n            down: h,\n            curve: curve,\n        });\n    }\n\n    onLeaveHandle() {\n        if (!this.state.down) {\n            this.setState({\n                hover: -1,\n            });\n        }\n    }\n\n    render() {\n\n        const {\n            width,\n            height,\n            value,\n            curveWidth = 1,\n            curveColor = \"#000\",\n            handleRadius = BezierCurvesEditor.defaultP.handleRadius,\n            handleColor = \"#f00\",\n            handleStroke = 1,\n            background = \"#fff\",\n        } = this.props;\n\n        const {\n            curve: curveIndex,\n            down,\n            hover\n        } = this.state;\n\n        const curves = [];\n        for (let i = 0; i < value.numOfFunctions; i ++) {\n            const x1 = value.getStartX(i);\n            const x2 = value.getEndX(i);\n            const curve = value.getFunction(i);\n            const slope0 = curve.getSlope(0);\n            const slope1 = curve.getSlope(1);\n\n            curves.push(\n                <g key={i}>\n                    <CurveComponent xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        curveColor={curveColor} curveWidth={curveWidth} value={curve}/>\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 0, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 0)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={0}\n                        yval={curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 0}\n                        hover={curveIndex === i && hover === 0}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 1, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 1)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={1.0 / 3}\n                        yval={1.0 / 3 * slope0 + curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 1}\n                        hover={curveIndex === i && hover === 1}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 2, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 2)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1 - 1.0 / 3}\n                        yval={curve.p[3] - 1.0 / 3 * slope1}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 2}\n                        hover={curveIndex === i && hover === 2}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 3, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 3)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1}\n                        yval={curve.p[3]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 3}\n                        hover={curveIndex === i && hover === 3}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                </g>);\n        }\n        return <div ref={this.rootRef}\n                    onMouseMove={this.onDownMove}\n                    onMouseUp={this.onDownUp}\n                    onMouseLeave={this.onDownLeave}>\n            <svg width={width} height={height}>\n                {curves}\n            </svg>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {IntervalValue} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {NumberInput} from \"./NumberInput\";\nimport {ColorEditor} from \"./ColorEditor\";\nimport \"./GeneratorEditor.scss\";\nimport {BezierCurvesEditor} from \"./bezier/BezierCurvesEditor\";\n\ntype EditorType =\n    'constant'\n    | 'intervalValue'\n    | 'piecewiseBezier'\n    | 'color'\n    | 'randomColor'\n    | 'colorRange'\n    | 'gradient';\nexport type ValueType = 'value' | 'functionValue' | 'color' | 'functionColor';\n\nconst ValueToEditor: { [a: string]: Array<EditorType> } = {\n    'value': ['constant', 'intervalValue'],\n    'functionValue': ['piecewiseBezier'],\n    'color': ['color', 'randomColor'],\n    'functionColor': ['colorRange', 'gradient'],\n};\n\nexport type GenericGenerator = ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator;\n\ninterface GeneratorEditorProps {\n    allowedType: Array<ValueType>;\n    name: string;\n    generator: GenericGenerator;\n    updateGenerator: (generator: GenericGenerator) => void;\n}\n\ninterface GeneratorEditorState {\n    open: boolean;\n}\n\nexport class GeneratorEditor extends React.PureComponent<GeneratorEditorProps, GeneratorEditorState> {\n\n    constructor(props: Readonly<GeneratorEditorProps>) {\n        super(props);\n        const currentEditor = ValueToEditor[props.allowedType[0]][0];\n        this.state = {\n            open: false,\n        }\n    }\n    changeEditor = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const editorType = e.target.value;\n        let generator: GenericGenerator | null = null;\n        switch(editorType) {\n            case \"constant\":\n                generator = new ConstantValue(0);\n                break;\n            case \"color\":\n                generator = new ConstantColor(new Vector4(1,1,1,1));\n                break;\n            case \"intervalValue\":\n                generator = new IntervalValue(0, 1);\n                break;\n            case \"colorRange\":\n                generator = new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"randomColor\":\n                generator = new RandomColor(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"piecewiseBezier\":\n                generator = new PiecewiseBezier();\n                break;\n        }\n        if (generator)\n            this.props.updateGenerator(generator);\n    }\n\n    changeValue = (x: number) => {\n        this.props.updateGenerator(new ConstantValue(x));\n    };\n\n    changeColor = (x: Vector4) => {\n        this.props.updateGenerator(new ConstantColor(x));\n    };\n\n    changeValueA = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(x, interval.b));\n    };\n\n    changeValueB = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(interval.a, x));\n    };\n\n    changeColorRangeA = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(x, colorRange.b));\n    };\n    changeColorRangeB = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(colorRange.a, x));\n    };\n    changeRandomColorA = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(x, randomColor.b));\n    };\n    changeRandomColorB = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(randomColor.a, x));\n    };\n\n    changeCurve = (x: PiecewiseBezier) => {\n        this.props.updateGenerator(new PiecewiseBezier(x.functions));\n    }\n\n    getEditorType(generator: GenericGenerator): EditorType {\n        if (generator instanceof ConstantValue) {\n            return 'constant';\n        } else if (generator instanceof IntervalValue) {\n            return 'intervalValue';\n        } else if (generator instanceof PiecewiseBezier) {\n            return 'piecewiseBezier';\n        } else if (generator instanceof ConstantColor) {\n            return 'color';\n        } else if (generator instanceof RandomColor) {\n            return 'randomColor';\n        } else if (generator instanceof ColorRange) {\n            return 'colorRange';\n        } else if (generator instanceof Gradient) {\n            return 'gradient';\n        }\n        return 'constant';\n    }\n\n    render() {\n        //console.log('render GeneratorEditor');\n        const {name, generator, allowedType} = this.props;\n\n        const editorTypes = [];\n        for (const valueType of allowedType) {\n            for (const editorType of ValueToEditor[valueType]) {\n                editorTypes.push(editorType);\n            }\n        }\n\n        const currentEditor = this.getEditorType(generator);\n        //console.log(currentEditor);\n\n        let editor;\n        switch (currentEditor) {\n            case \"constant\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as ConstantValue).value}\n                                 onChange={this.changeValue}/></React.Fragment>;\n                break;\n            case \"color\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ConstantColor).color} onChange={this.changeColor}/>\n                </React.Fragment>);\n                break;\n            case \"intervalValue\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as IntervalValue).a}\n                                 onChange={this.changeValueA}/>-<NumberInput\n                    value={(generator as IntervalValue).b} onChange={this.changeValueB}/></React.Fragment>;\n                break;\n            case \"piecewiseBezier\":\n                editor = <React.Fragment>\n                    <BezierCurvesEditor height={40} width={240} value={(generator as PiecewiseBezier)} onChange={this.changeCurve}/>\n                </React.Fragment>;\n                break;\n            case \"colorRange\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ColorRange).a} onChange={this.changeColorRangeA}/>-\n                    <ColorEditor color={(generator as ColorRange).b} onChange={this.changeColorRangeB}/>\n                </React.Fragment>);\n                break;\n            case \"randomColor\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as RandomColor).a} onChange={this.changeRandomColorA}/>-\n                    <ColorEditor color={(generator as RandomColor).b} onChange={this.changeRandomColorB}/>\n                </React.Fragment>);\n                break;\n        }\n        return <div className=\"property\">\n            <label className=\"name\">{name}</label>\n            {editor}\n            <select className=\"editor-select\" onChange={this.changeEditor} value={currentEditor}>\n                {editorTypes.map(editorType => <option key={editorType} value={editorType}>{editorType}</option>)}\n            </select>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\n\ninterface ParticleSystemPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface ParticleSystemPropertiesState {\n\n}\n\nexport class ParticleSystemProperties extends React.PureComponent<ParticleSystemPropertiesProps, ParticleSystemPropertiesState> {\n    constructor(props: Readonly<ParticleSystemPropertiesProps>) {\n        super(props);\n    }\n    onChangeStartSpeed = (g: GenericGenerator) => {\n        console.log(\"change start speed\");\n        this.props.particleSystem.startSpeed = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartLife = (g: GenericGenerator) => {\n        console.log(\"change start life\");\n        this.props.particleSystem.startLife = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartSize = (g: GenericGenerator) => {\n        console.log(\"change start size\");\n        this.props.particleSystem.startSize = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartColor = (g: GenericGenerator) => {\n        console.log(\"change start color\");\n        this.props.particleSystem.startColor = g as ColorGenerator | FunctionColorGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeStartRotation = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.startRotation = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeEmissionOverTime = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.emissionOverTime = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        const valueFunctionTypes = ['value', 'functionValue'] as Array<ValueType>;\n        const colorValueFunctionTypes = ['color', 'functionColor'] as Array<ValueType>;\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Life\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startLife}\n                                         updateGenerator={this.onChangeStartLife}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Size\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSize}\n                                         updateGenerator={this.onChangeStartSize}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Speed\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSpeed}\n                                         updateGenerator={this.onChangeStartSpeed}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Color\"\n                                         allowedType={colorValueFunctionTypes}\n                                         generator={this.props.particleSystem.startColor}\n                                         updateGenerator={this.onChangeStartColor}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Rotation\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startRotation}\n                                         updateGenerator={this.OnChangeStartRotation}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Emission Over Time\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.emissionOverTime}\n                                         updateGenerator={this.OnChangeEmissionOverTime}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\n\ninterface FileInputProps {\n    onChange: (files: FileList) => void;\n}\n\nexport class FileInput extends React.Component<FileInputProps>\n{\n    constructor(props: any)\n    {\n        super(props);\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onChange(e.target.files);\n    };\n\n    render ()\n    {\n        return <div>\n            <input\n                accept=\"image/*\"\n                type=\"file\"\n                id=\"contained-button-file\"\n                style={{display: 'none'}}\n                onChange={this.handleChange} />\n            <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload\n                </Button>\n            </label>\n        </div>;\n    }\n}","\nimport { Theme, createStyles, makeStyles, withStyles, WithStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {Button, Dialog, GridList, GridListTile, GridListTileBar} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Texture} from \"three\";\nimport {TextureImage} from \"./ApplicationContext\";\nimport {FileInput} from \"./editors/FileInput\";\nimport \"./TexturePicker.scss\";\n\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[500],\n        },\n    });\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            width: 500,\n            height: 450,\n        },\n    }),\n);\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n    id: string;\n    children: React.ReactNode;\n    onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport interface TexturePickerProps {\n    textures: Array<TextureImage>,\n    open: boolean,\n    handleSelect: (texture: TextureImage)=>void,\n    handleUpload: (files: FileList)=>void,\n    handleClose: ()=>void,\n}\n\nexport const TexturePicker: React.FC<TexturePickerProps> = (props) => {\n    const classes = useStyles();\n    const [selected, setSelected] = useState(0);\n\n    return (\n        <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n                Picker Texture\n            </DialogTitle>\n            <DialogContent dividers>\n                <div className={classes.root}>\n                    <GridList cellHeight={160} className={classes.gridList} cols={3}>\n                        {props.textures.map((texture, index) => (\n                            <GridListTile key={texture.img} cols={1} onClick={() => {setSelected(index)}} className={ index === selected ? 'selected-tile': ''}>\n                                <img src={texture.img} alt={texture.texture.name} />\n                                <GridListTileBar\n                                    title={texture.texture.name}\n                                    subtitle={<span>by: {texture.texture.name}</span>}\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <FileInput onChange={props.handleUpload} />\n                <Button variant={'contained'} onClick={() => {props.handleSelect(props.textures[selected]); props.handleClose(); }}>Confirm</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import * as React from \"react\";\nimport {AdditiveBlending, Blending, NormalBlending, Texture} from \"three\";\nimport {AppContext, ApplicationContextConsumer, TextureImage} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {FileInput} from \"./editors/FileInput\";\nimport {TexturePicker} from \"./TexturePicker\";\nimport Button from \"@material-ui/core/Button\";\nimport {GridListTile} from \"@material-ui/core\";\n\n\ninterface ParticleRendererPropertiesProps {\n    particleSystem: ParticleSystem,\n    context: AppContext,\n    updateProperties: Function,\n}\n\ninterface ParticleRendererPropertiesState {\n    texturePickerOpen: boolean,\n}\n\nexport class ParticleRendererProperties extends React.PureComponent<ParticleRendererPropertiesProps, ParticleRendererPropertiesState> {\n    constructor(props: Readonly<ParticleRendererPropertiesProps>) {\n        super(props);\n        this.state = {\n            texturePickerOpen: false,\n        };\n    }\n    onChangeStartTile = (index: number) => {\n        this.props.particleSystem.startTileIndex = index;\n        this.props.updateProperties();\n    };\n    onChangeUTileCount = (u: number) => {\n        this.props.particleSystem.uTileCount = u;\n        this.props.updateProperties();\n    };\n    onChangeVTileCount = (v: number) => {\n        this.props.particleSystem.vTileCount = v;\n        this.props.updateProperties();\n    };\n    onChangeBlending = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"Normal\":\n                this.props.particleSystem.blending = NormalBlending;\n                this.props.particleSystem.emitter.material.blending = NormalBlending;\n                break;\n            case \"Additive\":\n                this.props.particleSystem.blending = AdditiveBlending;\n                this.props.particleSystem.emitter.material.blending = AdditiveBlending;\n                break;\n        }\n        this.props.updateProperties();\n    }\n    onChangeWorldSpace = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"True\":\n                this.props.particleSystem.worldSpace = true;\n                break;\n            case \"False\":\n                this.props.particleSystem.worldSpace = false;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBlending = (blending: Blending) => {\n        switch (blending) {\n            case NormalBlending:\n                return \"Normal\"\n            case AdditiveBlending:\n                return \"Additive\";\n        }\n    }\n\n    getValueOfBoolean = (worldSpace: boolean) => {\n        return worldSpace ? 'True': 'False';\n    }\n\n    onUploadTexture = (files: FileList) => {\n        console.log(\"upload texture\");\n        const image = document.createElement( 'img' );\n        const texture = new Texture( image );\n        image.onload = function()  {\n            texture.needsUpdate = true;\n        };\n        if (files && files[0]) {\n            const reader = new FileReader();\n            reader.onload = function (e) {\n                image.src = reader.result as string;\n            };\n            reader.readAsDataURL(files[0]);\n\n            texture.name = files[0].name;\n            const textureImage = {\n                img: URL.createObjectURL(files[0]),\n                texture: texture\n            };\n            this.props.context.actions.addTexture(textureImage);\n        }\n\n    }\n\n    onChangeTexture = (textureImage: TextureImage) => {\n        console.log(\"change texture\");\n        this.props.particleSystem.texture = textureImage.texture;\n        this.props.updateProperties();\n    };\n\n    closeTexturePicker = () => {\n        this.setState({texturePickerOpen: false});\n    }\n\n    openTexturePicker = () => {\n        this.setState({texturePickerOpen: true});\n    }\n\n    render() {\n        console.log('rendered particleRendererProperties');\n        return (\n            <div className=\"property-container\">\n                <div className=\"property\">\n                    <label className=\"name\">World Space</label>\n                    <select className=\"editor-select\" onChange={this.onChangeWorldSpace} value={this.getValueOfBoolean(this.props.particleSystem.worldSpace)}>\n                        <option key={0} value=\"True\" >True</option>\n                        <option key={1} value=\"False\" >False</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Blend Mode</label>\n                    <select className=\"editor-select\" onChange={this.onChangeBlending} value={this.getValueOfBlending(this.props.particleSystem.blending)}>\n                        <option key={0} value=\"Normal\" >Normal</option>\n                        <option key={1} value=\"Additive\" >Additive</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">UVTile</label>\n                    <label>Column:</label><NumberInput value={this.props.particleSystem.uTileCount} onChange={this.onChangeUTileCount}/>\n                    <label>Row:</label><NumberInput value={this.props.particleSystem.vTileCount} onChange={this.onChangeVTileCount}/>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Start Tile Index</label><NumberInput value={this.props.particleSystem.startTileIndex} onChange={this.onChangeStartTile}/>\n                </div>\n                <ApplicationContextConsumer>\n                    {context => {\n                        let texture;\n                        for (let i = 0; i < context!.textures.length; i ++) {\n                            if (context!.textures[i].texture === this.props.particleSystem.texture) {\n                                texture = context!.textures[i];\n                            }\n                        }\n                        let gridWidth=1, gridHeight=1;\n                        if (texture) {\n                            gridWidth = texture.texture.image.width / this.props.particleSystem.uTileCount;\n                            gridHeight = texture.texture.image.height / this.props.particleSystem.vTileCount;\n                        }\n                        return <div className=\"property\">\n                            <label className=\"name\">Texture</label>\n                            {texture && <img className=\"texture-preview\" src={texture.img} alt={texture.texture.name}\n                                             style={{objectPosition: `-${(this.props.particleSystem.startTileIndex % this.props.particleSystem.uTileCount) * gridWidth}px -${Math.floor(this.props.particleSystem.startTileIndex / this.props.particleSystem.uTileCount) * gridHeight}px`,\n                                                 width: gridWidth,\n                                                 height: gridHeight}}/>}\n                            {/*this.props.particleSystem.texture ? this.props.particleSystem.texture.name : \"..\"*/}\n                            <Button onClick={this.openTexturePicker} variant={'contained'}>Pick</Button>\n                        </div>;\n                    }}\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <TexturePicker handleClose={this.closeTexturePicker} handleSelect={this.onChangeTexture} handleUpload={this.onUploadTexture} open={this.state.texturePickerOpen} textures={context.textures}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport \"./ScriptEditor.scss\";\n\ninterface ScriptEditorProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const ScriptEditor : React.FC<ScriptEditorProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (value: string) => {\n        if (focus) {\n            setInputValue(value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return(\n        <Editor\n            value={focus? inputValue: props.value}\n            onValueChange={onInputChange}\n            highlight={code => highlight(code, languages.javascript, \"javascript\")}\n            padding={10}\n            onBlur={onInputBlur} onFocus={onInputFocus} //onKeyDown={onKeyDown}\n            style={{\n                fontFamily: '\"Consolas\", monospace',\n                fontSize: 12,\n            }}\n        />);\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScriptPropertiesProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ScriptPropertiesState {\n\n}\n\nexport class ScriptProperties extends React.PureComponent<ScriptPropertiesProps, ScriptPropertiesState> {\n    constructor(props: Readonly<ScriptPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeScript = (script: string) => {\n        if (this.props.object3d.userData === null) {\n            this.props.object3d.userData = {};\n        }\n        this.props.object3d.userData.script = script;\n        this.props.object3d.userData.func = new Function(\"delta\", script);\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                        <label className=\"script\">Script:</label>\n                        <ScriptEditor value={this.props.object3d.userData.script || \"\"} onChange={this.onChangeScript}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import {Blending, Texture} from \"three\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ConeEmitter, DonutEmitter, EmitterShape, ParticleSystem, PointEmitter, SphereEmitter} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {FileInput} from \"./editors/FileInput\";\nimport React, {ChangeEvent} from \"react\";\n\n\ninterface EmitterShapePropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface EmitterShapePropertiesState {\n\n}\n\nexport class EmitterShapeProperties extends React.PureComponent<EmitterShapePropertiesProps, EmitterShapePropertiesState> {\n    constructor(props: Readonly<EmitterShapePropertiesProps>) {\n        super(props);\n    }\n\n    getValueOfShape = (shape: EmitterShape) => {\n        if (this.props.particleSystem.emitterShape instanceof PointEmitter) {\n            return \"PointEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof ConeEmitter) {\n            return \"ConeEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof SphereEmitter) {\n            return \"SphereEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof DonutEmitter) {\n            return \"DonutEmitter\";\n        } else\n            return \"\";\n    };\n\n    onChangeShape = (e: ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"PointEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof PointEmitter)) {\n                    this.props.particleSystem.emitterShape = new PointEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"ConeEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof ConeEmitter)) {\n                    this.props.particleSystem.emitterShape = new ConeEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"SphereEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof SphereEmitter)) {\n                    this.props.particleSystem.emitterShape = new SphereEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"DonutEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof DonutEmitter)) {\n                    this.props.particleSystem.emitterShape = new DonutEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n        }\n    };\n\n    onChangeKeyValue = (k: string, v: number) => {\n        (this.props.particleSystem.emitterShape as any)[k] = v;\n        this.props.updateProperties();\n    };\n\n    renderShapeProperties() {\n        const properties = [];\n        for (const key in this.props.particleSystem.emitterShape) {\n            properties.push(\n                <div key={key} className=\"property\">\n                    <label className=\"name\">{key}:</label>\n                    <NumberInput value={(this.props.particleSystem.emitterShape as any)[key]} onChange={(value) => this.onChangeKeyValue(key, value)}/>\n                </div>\n            );\n        }\n        return properties;\n    }\n\n    render() {\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Shape</label>\n                            <select className=\"editor-select\" onChange={this.onChangeShape} value={this.getValueOfShape(this.props.particleSystem.emitterShape)}>\n                                <option key={0} value=\"PointEmitter\" >PointEmitter</option>\n                                <option key={1} value=\"ConeEmitter\" >ConeEmitter</option>\n                                <option key={2} value=\"SphereEmitter\" >SphereEmitter</option>\n                                <option key={3} value=\"DonutEmitter\" >DonutEmitter</option>\n                            </select>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context && this.renderShapeProperties()}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {\n    ParticleSystem,\n    ParticleEmitter\n} from \"three.quarks\";\nimport {Object3D} from \"three\";\nimport {ButtonGroup} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\ninterface ParticleSystemControllerProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ParticleSystemControllerState {\n\n}\n\nexport class ParticleSystemController extends React.PureComponent<ParticleSystemControllerProps, ParticleSystemControllerState> {\n    constructor(props: Readonly<ParticleSystemControllerProps>) {\n        super(props);\n    }\n\n    getSystems = () => {\n        const systems: Array<ParticleSystem> = [];\n        if (this.props.object3d instanceof ParticleEmitter) {\n            systems.push(this.props.object3d.system);\n        }\n        this.props.object3d.traverse(object => {\n            if (object instanceof ParticleEmitter) {\n                systems.push(object.system);\n            }\n        });\n        return systems;\n    };\n\n    checkPause = (systems: Array<ParticleSystem>) => {\n        let paused = true;\n        systems.forEach(system => {\n            if (!system.paused) {\n                paused = false;\n            }\n        });\n        return paused;\n    };\n\n    togglePause = () => {\n        const systems: Array<ParticleSystem> = this.getSystems();\n        const paused = this.checkPause(systems);\n\n        if (paused) {\n            systems.forEach(system => {\n                system.play();\n            });\n        } else {\n            systems.forEach(system => {\n                system.pause();\n            });\n        }\n        this.props.updateProperties();\n    };\n\n    onRestart = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n        });\n        this.props.updateProperties();\n    };\n\n    onStop = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n            system.pause();\n        });\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ToggleButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                </ToggleButtonGroup>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                        <Button disabled={!this.checkPause(this.getSystems())} onClick={this.togglePause}>Play</Button>\n                        <Button disabled={this.checkPause(this.getSystems())} onClick={this.togglePause}>Pause</Button>\n                        <Button onClick={this.onRestart}>Restart</Button>\n                        <Button onClick={this.onStop}>Stop</Button>\n                    </ButtonGroup>}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {\n    Behavior, Bezier,\n    ColorOverLife, ColorRange,\n    FrameOverLife, Gradient,\n    OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    RotationOverLife,\n    SizeOverLife, SpeedOverLife\n} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\nimport {ListItem, List, Theme, createStyles, Typography, Toolbar, ListItemIcon} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {memo} from \"react\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport {Vector4} from \"three\";\n\ninterface BehaviorsPropertiesProps {\n    behaviors: Array<Behavior>,\n    updateProperties: Function,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        listRoot: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        }\n    }),\n);\n\n/*\n<GeneratorEditor name=\"Start Speed\"\n                 allowedType={valueFunctionTypes}\n                 generator={this.props.particleSystem.startSpeed}\n                 updateGenerator={this.onChangeStartSpeed}/>*/\n\nfunction BehaviorsPropertiesFunc(props: BehaviorsPropertiesProps) {\n    const classes = useStyles();\n\n\n\n    const [checked, setChecked] = React.useState([0, 1, 2, 3]);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const handleListItemClick = (event: any, index: number) => {\n        setSelectedIndex(index);\n    };\n\n    const handleToggle = (value: number) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n\n    const deleteBehavior = () => {\n        props.behaviors.splice(selectedIndex, 1);\n        props.updateProperties();\n    }\n\n    const onAddNewBehavior = (type: string) => () => {\n        let behavior;\n        switch (type) {\n            case 'ColorOverLife':\n                behavior = new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0)));\n                break;\n            case 'RotationOverLife':\n                behavior = new RotationOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SizeOverLife':\n                behavior = new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'FrameOverLife':\n                behavior = new FrameOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'OrbitOverLife':\n                behavior = new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SpeedOverLife':\n                behavior = new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.6667, 0.3333, 0.0), 0]]));\n                break;\n            default:\n                break;\n        }\n        if (behavior) {\n            props.behaviors.push(behavior);\n            props.updateProperties();\n        }\n        setAnchorEl(null);\n    }\n\n    const onChangeBehaviorFunc = (index: number) => (generator: GenericGenerator) => {\n        const behavior = props.behaviors[index];\n        switch (behavior.type) {\n            case 'ColorOverLife':\n                (behavior as ColorOverLife).func = generator as FunctionColorGenerator;\n                break;\n            case 'RotationOverLife':\n                (behavior as RotationOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            case 'SizeOverLife':\n                (behavior as SizeOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'FrameOverLife':\n                (behavior as FrameOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'OrbitOverLife':\n                (behavior as OrbitOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            default:\n                break;\n        }\n        console.log(\"changing\")\n        props.updateProperties();\n    }\n\n    return (\n        <div className={classes.root}>\n            <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                <Button color=\"inherit\" aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\" onClick={handleClick} id=\"new-button\">\n                    New\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={onAddNewBehavior('SizeOverLife')}>SizeOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('ColorOverLife')}>ColorOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('RotationOverLife')}>RotationOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('FrameOverLife')}>FrameOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('OrbitOverLife')}>OrbitOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('SpeedOverLife')}>SpeedOverLife</MenuItem>\n                </Menu>\n                <Button onClick={deleteBehavior}>Remove</Button>\n            </ButtonGroup>\n            <List dense className={classes.listRoot}>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    props.behaviors.map((behavior, index) => {\n                        const labelId = `behavior-list-label-${index}`;\n                        let valueTypes: Array<ValueType>;\n                        let func: FunctionColorGenerator | FunctionValueGenerator | ValueGenerator | null = null;\n                        switch (behavior.type) {\n                            case 'ColorOverLife':\n                                valueTypes = ['functionColor'];\n                                func = (behavior as ColorOverLife).func;\n                                break;\n                            case 'RotationOverLife':\n                                valueTypes = ['functionValue', 'value'];\n                                func = (behavior as RotationOverLife).angularVelocityFunc;\n                                break;\n                            case 'SizeOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SizeOverLife).func;\n                                break;\n                            case 'FrameOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as FrameOverLife).func;\n                                break;\n                            case 'OrbitOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as OrbitOverLife).angularVelocityFunc;\n                                break;\n                            case 'SpeedOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SpeedOverLife).func;\n                                break;\n                            default:\n                                valueTypes = ['functionValue'];\n                                break;\n                        }\n\n                        let editor;\n                        if (func) {\n                            editor = <GeneratorEditor name=\"Func\"\n                                                      allowedType={valueTypes}\n                                                      generator={func!}\n                                                      updateGenerator={onChangeBehaviorFunc(index)}/>;\n                        }\n\n                        return (\n                            <ListItem key={index}\n                                      selected={selectedIndex === index}\n                                      onClick={(event) => handleListItemClick(event, index)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"end\"\n                                        onChange={handleToggle(index)}\n                                        checked={checked.indexOf(index) !== -1}\n                                        inputProps={{'aria-labelledby': labelId}}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={behavior.type}\n                                              secondary={editor}/>\n                            </ListItem>\n                        );\n                    })\n                }\n                </ApplicationContextConsumer>\n            </List>\n        </div>\n    );\n}\n\nexport const BehaviorsProperties = React.memo(BehaviorsPropertiesFunc);","import * as React from \"react\";\nimport {ConstantValue} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {Object3D, Vector4} from \"three\";\nimport {ObjectProperties} from \"./ObjectProperties\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {ParticleSystemProperties} from \"./ParticleSystemProperties\";\nimport {ParticleRendererProperties} from \"./ParticleRendererProperties\";\nimport {ScriptProperties} from \"./ScriptProperties\";\nimport {EmitterShapeProperties} from \"./EmitterShapeProperties\";\nimport {ParticleSystemController} from \"./ParticleSystemController\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport MuiAccordion from \"@material-ui/core/Accordion\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport \"./PropertiesEditor.scss\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {BehaviorsProperties} from \"./BehaviorsProperties\";\n\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 32,\n        '&$expanded': {\n            minHeight: 32,\n        },\n    },\n    content: {\n        margin: 0,\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expandIcon: {\n        padding: 0\n    },\n    expanded: {},\n})(MuiAccordionSummary);\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\ninterface PropertiesEditorProps {\n    object3d: Object3D\n}\n\nexport default function PropertiesEditor(props: PropertiesEditorProps) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(['Object', 'EmitterShape', 'ParticleRenderer','ParticleEmitter','Behaviors','Script']);\n\n    const handleChange = (panel: string) => (event: any, isExpanded: boolean) => {\n        if (isExpanded) {\n            expanded.push(panel);\n        } else {\n            expanded.splice(expanded.indexOf(panel), 1);\n        }\n        setExpanded(expanded);\n    };\n\n    return (\n        <div className={classes.root}>\n            <ApplicationContextConsumer>\n                {context => context &&\n                    <ParticleSystemController object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                }\n            </ApplicationContextConsumer>\n            <Accordion expanded={(expanded.indexOf('Object') !== -1)} onChange={handleChange('Object')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"object-content\"\n                    id=\"object-header\"\n                >\n                    <Typography className={classes.heading}>Object</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ObjectProperties object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('EmitterShape') !== -1)} onChange={handleChange('EmitterShape')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"emitter-shape-content\"\n                    id=\"emitter-shape-header\">\n                    <Typography className={classes.heading}>Emitter Shape</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <EmitterShapeProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                    updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleRenderer') !== -1)} onChange={handleChange('ParticleRenderer')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-renderer-content\"\n                    id=\"particle-renderer-header\">\n                    <Typography className={classes.heading}>Particle Renderer</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleRendererProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                        context={context}\n                                                        updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleEmitter') !== -1)} onChange={handleChange('ParticleEmitter')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-emitter-content\"\n                    id=\"particle-emitter-header\">\n                    <Typography className={classes.heading}>Particle Emitter</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleSystemProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                      updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('Behaviors') !== -1)} onChange={handleChange('Behaviors')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"behaviors-content\"\n                    id=\"behaviors-header\">\n                    <Typography className={classes.heading}>Behaviors</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <BehaviorsProperties behaviors={(props.object3d as ParticleEmitter).system.behaviors}\n                                                        updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            <Accordion expanded={(expanded.indexOf('Script') !== -1)} onChange={handleChange('Script')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"script-content\"\n                    id=\"script-header\"\n                >\n                    <Typography className={classes.heading}>Script</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ScriptProperties object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}","import {Object3D, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorGenerator, ColorRange, ConstantColor, ConstantValue,\n    FunctionColorGenerator,\n    FunctionValueGenerator, IntervalValue,\n    ParticleEmitter, PiecewiseBezier, RandomColor,\n    RenderMode,\n    ValueGenerator\n} from \"three.quarks\";\n\n\nexport class CodeExporter {\n    /*static traverseObject(parent: Object3D): string {\n        for (let i = 0; i < parent.children.length; i ++) {\n\n        }\n    }*/\n\n    static camelize(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return index === 0 ? word.toLowerCase() : word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static camelizeClass(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static exportBezier(func: Bezier) {\n        return `new Bezier(${func.p[0]}, ${func.p[1]}, ${func.p[2]}, ${func.p[3]})`;\n    }\n    static exportColor(color: Vector4) {\n        return `new Vector4(${color.x}, ${color.y}, ${color.z}, ${color.w})`;\n    }\n    static exportFunction(func: ValueGenerator | ColorGenerator | FunctionValueGenerator | FunctionColorGenerator, indent: number = 0): string {\n        if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        } else if (func instanceof ConstantColor) {\n            return `new ConstantColor(${CodeExporter.exportColor(func.color)})`;\n        } else if (func instanceof IntervalValue) {\n            return `new IntervalValue(${func.a}, ${func.b})`;\n        } else if (func instanceof ColorRange) {\n            return `new ColorRange(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof RandomColor) {\n            return `new RandomColor(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof PiecewiseBezier) {\n            let code = `new PiecewiseBezier(\\n`;\n            for (let i = 0; i < func.functions.length - 1; i ++) {\n                code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[i][0])}, ${func.functions[i][1]}], `;\n            }\n            code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[func.functions.length - 1][0])}, ${func.functions[func.functions.length - 1][1]}]`;\n            code += ' '.repeat(indent) + `)`;\n            return code;\n        } else if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        }\n        throw new Error();\n    }\n\n    static exportParticleEmitter(emitter: ParticleEmitter): string {\n\n        let name = CodeExporter.camelize(emitter.name);\n        let system = emitter.system;\n        let code = `        this.${name} = new ParticleSystem({\\n`;\n        code += `            duration: ${system.duration},\\n`;\n        code += `            looping: ${system.looping},\\n`;\n        code += `            startLife: ${CodeExporter.exportFunction(system.startLife)},\\n`;\n        code += `            startSpeed: ${CodeExporter.exportFunction(system.startSpeed)},\\n`;\n        code += `            startSize: ${CodeExporter.exportFunction(system.startSize)},\\n`;\n        code += `            startColor: ${CodeExporter.exportFunction(system.startColor)},\\n`;\n        code += `            worldSpace: ${system.worldSpace},\\n`;\n        code += `            maxParticle: ${system.maxParticle},\\n`;\n        code += `            emissionOverTime: ${CodeExporter.exportFunction(system.emissionOverTime)},\\n`;\n        code += `            emissionBursts: ${system.emissionBursts},\\n`;\n        code += `            shape: ${system.emitterShape},\\n`;\n        code += `            texture: texture,\\n`;\n        code += `            blending: ${system.blending},\\n`;\n        code += `            startTileIndex: ${system.startTileIndex},\\n`;\n        code += `            uTileCount: ${system.uTileCount},\\n`;\n        code += `            vTileCount: ${system.vTileCount},\\n`;\n        code += `            renderMode: ${system.renderMode},\\n`;\n        if (system.renderMode == RenderMode.StretchedBillBoard) {\n            code += `            speedFactor: ${system.speedFactor},\\n`;\n        }\n        code += '        }\\n';\n\n        for (let i = 0; i < system.behaviors.length; i ++) {\n            code += `        this.${name}.addBehavior(${system.behaviors[i]});\\n`;\n        }\n        code += `        this.${name}.emitter.renderOrder = ${system.emitter.renderOrder};\\n`\n        code += `        this.${name}.emitter.name = '${name}';\\n`\n        code += `        this.${name}.emitter.rotation.set(${system.emitter.rotation.x}, ${system.emitter.rotation.y}, ${system.emitter.rotation.z});\\n`;\n        code += `        this.add(this.${name}.emitter);\\n`\n        code += '\\n';\n        return code;\n    }\n\n    static exportCode(root: Object3D): string {\n\n        let code = `export class ${CodeExporter.camelizeClass(root.name)} extends Group {\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `    private ${CodeExporter.camelize(root.children[i].name)}: ParticleSystem;\\n`\n            }\n        }\n\n        code += '\\n';\n        code += `    constructor() {\\n`;\n        code += `        super();\\n`;\n        code += `        this.name = '${root.name}';\\n`;\n        code += `        let texture = new TextureLoader().load( \"textures/texture1.png\");\\n`;\n        code += `        texture.name = \"textures/texture1.png\";\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += CodeExporter.exportParticleEmitter(root.children[i] as ParticleEmitter);\n            }\n        }\n\n        code += '    }\\n';\n        code += '\\n';\n\n        code += '    update(delta: number) {\\n';\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `        ${CodeExporter.camelize(root.children[i].name)}.update(delta);\\n`\n            }\n        }\n        code += '    }\\n';\n        code += '}';\n        return code;\n    }\n}","import React from \"react\";\nimport Dialog, {DialogProps} from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScrollDialogProps {\n    content: string,\n    open: boolean,\n    handleClose: () =>void,\n}\n\nexport function ScrollDialog(props: ScrollDialogProps) {\n\n    const descriptionElementRef = React.useRef<HTMLElement>(null);\n    /*React.useEffect(() => {\n        if (props.open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [props.open]);\n    <DialogContentText\n        id=\"scroll-dialog-description\"\n        ref={descriptionElementRef}\n        tabIndex={-1}\n    >\n        {props.content}\n    </DialogContentText>*/\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={props.handleClose}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Particle System Code</DialogTitle>\n                <DialogContent dividers={true}>\n                    <ScriptEditor value={props.content} onChange={()=>{}}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {Object3D, Scene} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport './SceneGraphView.scss';\nimport {Item, Menu, MenuProvider, Separator, Submenu} from \"react-contexify\";\nimport {MenuItemEventHandler} from \"react-contexify/lib/types\";\nimport 'react-contexify/dist/ReactContexify.min.css';\nimport {TreeView} from \"@material-ui/lab\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {makeStyles, createStyles} from \"@material-ui/core\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport {Theme, Typography} from \"@material-ui/core\";\nimport {CodeExporter} from \"../util/CodeExporter\";\nimport {ScrollDialog} from \"./ScrollDialog\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\ninterface SceneGraphViewMaterialProps {\n    context: AppContext;\n    scene: Scene;\n}\n\nexport function SceneGraphViewMaterial(props: SceneGraphViewMaterialProps) {\n    const classes = useStyles();\n\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [expanded, setExpanded] = React.useState<string[]>(['1']);\n\n    const [code, setCode] = React.useState<string>('');\n\n    const countIndex = (index: number, object3d: Object3D): [Object3D | null, number] => {\n        if (index == 0)\n            return [object3d, 0];\n        index --;\n        for (const child of object3d.children) {\n            const [res, newIndex] = countIndex(index, child);\n            if (res)\n                return [res, newIndex];\n            index = newIndex;\n        }\n        return [null, index];\n    }\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\n        if (nodeIds.length > 0) {\n            const index = parseInt(nodeIds[0]);\n            const [object3d, ] = countIndex(index, props.scene);\n            if (object3d)\n                props.context.actions.select(object3d);\n        }\n        setSelected(nodeIds);\n    };\n    const handleToggle = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\n        //console.log(event.target);\n        if ((event.target as HTMLElement).tagName === 'svg') {\n            setExpanded(nodeIds);\n        }\n    };\n\n    const getObjectName = (object3d: Object3D) => {\n        let type = 'object';\n        if (object3d instanceof ParticleEmitter) {\n            type = 'ParticleSystem';\n        } else {\n            type =  object3d.type;\n        }\n        let name = 'unnamed';\n        if (object3d.name) {\n            name = object3d.name;\n        }\n        return `[${type}] ${name}`;\n    };\n\n    const renderObject = (context: AppContext, object3d: THREE.Object3D, index: number): [React.ReactNode, number] => {\n        const items = [];\n        const originIndex = index;\n        index ++;\n        for (const child of object3d.children) {\n            const result = renderObject(context, child, index);\n            items.push(result[0]);\n            index = result[1];\n        }\n        //selected={context.selection.indexOf(object3d) !== -1}\n        if (originIndex !== 0) {\n            return [<TreeItem key={object3d.uuid} nodeId={\"\" + originIndex}\n                              label={<MenuProvider id=\"scene-graph-menu\" data={{object3d: object3d}}>{getObjectName(object3d) + \" \" + originIndex}</MenuProvider>}>\n                {items}\n            </TreeItem>, index];\n        } else {\n            return [<React.Fragment>{items}</React.Fragment>, index];\n        }\n    }\n\n    const onContextMenuClick = ({event, props}: MenuItemEventHandler) => console.log(event,props);\n\n    const onContextMenuAddParticleSystem = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.addObject3d('particle', (contextProps! as any).object3d);\n        }\n    };\n    const onContextMenuRemove = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.removeObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuDuplicate = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.duplicateObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuExport = ({event, props: contextProps}: MenuItemEventHandler) => {\n        console.log(contextProps);\n        if ((contextProps! as any).object3d) {\n            const a = document.createElement(\"a\");\n            const json = (contextProps! as any).object3d.toJSON();\n            //json.images.forEach((image: any) => image.url = \"http://localhost:3000/textures/texture1.png\");\n            const file = new Blob([JSON.stringify(json)], {type: \"application/json\"});\n            a.href = URL.createObjectURL(file);\n            a.download = \"scene.json\";\n            a.click();\n        }\n    };\n\n    const onContextMenuCopyCode = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps! as any).object3d) {\n            setCode(CodeExporter.exportCode((contextProps! as any).object3d));\n        }\n    }\n\n    const renderScene = (context: AppContext, scene: THREE.Scene) => {\n        return <TreeView\n            className={classes.root}\n            selected={selected}\n            expanded={expanded}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n        >\n            {renderObject(context, scene, 0)[0]}\n        </TreeView>;\n    }\n\n    return <div>\n        <Typography className={classes.heading}> Scene Graph </Typography>\n        {renderScene(props.context, props.scene)}\n        <Menu id=\"scene-graph-menu\">\n            <Submenu label=\"Add\">\n                <Item onClick={onContextMenuAddParticleSystem}>Particle System</Item>\n                <Item onClick={onContextMenuClick}>Ball</Item>\n            </Submenu>\n            <Separator />\n            <Item onClick={onContextMenuDuplicate}>Duplicate</Item>\n            <Item onClick={onContextMenuRemove}>Remove</Item>\n            <Separator />\n            <Item onClick={onContextMenuExport}>Export</Item>\n            <Item onClick={onContextMenuCopyCode}>Copy JS Code</Item>\n        </Menu>\n        <ScrollDialog content={code} open={code !== ''} handleClose={()=>{setCode('')}} />\n    </div>;\n}\n","import * as React from \"react\";\nimport MainMenu from \"./MainMenu\";\nimport {ThreejsViewport} from \"./ThreejsViewport\";\nimport PropertiesEditor from \"./PropertiesEditor\";\nimport {SceneGraphView} from \"./SceneGraphView\";\n\nimport './layout.scss';\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {SceneGraphViewMaterial} from \"./SceneGraphViewMaterial\";\n\nexport class Application extends React.Component<{}> {\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n    }\n\n    render() {\n        console.log(\"render application\");\n        return (\n            <ApplicationContextProvider>\n                <div className=\"application\">\n                    <div className=\"main-menu\">\n                        <ApplicationContextConsumer>\n                            {context => context &&\n                                <MainMenu onSaveAs={context.actions.onSaveAs}\n                                            onImport={context.actions.onImport}\n                                            onOpenDemo={context.actions.onOpenDemo}/>\n                            }\n                        </ApplicationContextConsumer>\n                    </div>\n                    <div className=\"main\">\n                        <div className=\"viewport\">\n                            <ThreejsViewport width={600} height={600}/>\n                        </div>\n                        <div className=\"sidebar\">\n                            <ApplicationContextConsumer>\n                                {\n                                    context => context && <SceneGraphViewMaterial context={context} scene={context.scene} />\n                                }\n                            </ApplicationContextConsumer>\n                            <ApplicationContextConsumer>\n                                { context => context && context.selection.length > 0 &&\n                                    <PropertiesEditor object3d={context.selection[0]}/>\n                                }\n                            </ApplicationContextConsumer>\n                        </div>\n                    </div>\n                </div>\n            </ApplicationContextProvider>);\n    }\n}\n","import React, {useState} from 'react';\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {Application} from \"./components/Application\";\nimport {Bezier} from \"three.quarks\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { ThemeProvider } from '@material-ui/core';\nimport {BezierCurvesEditor} from \"./components/editors/bezier/BezierCurvesEditor\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: red[500],\n        },\n    },\n    typography: {\n        fontSize: 12,\n    }\n});\n\nconst App: React.FC = () => {\n\n  /*const [bezierCurves, setBezierCurves] = useState(\n      new PiecewiseBezier([\n        [new Bezier(0, 0.5 / 3, 0.5 / 3 * 2, 0.5), 0],\n        [new Bezier(0.5, 0.5, 0.5, 0.5), 0.5],\n      ])\n  );return <div className=\"App\">\n        <header className=\"App-header\">\n            <BezierCurvesEditor width={200} height={100} value={bezierCurves} onChange={(bezierCurves) => {setBezierCurves(bezierCurves)}}/>\n        </header>\n    </div>;*/\n\n    return (<ThemeProvider theme={theme}><Application /></ThemeProvider>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}