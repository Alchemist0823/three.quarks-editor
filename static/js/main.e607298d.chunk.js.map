{"version":3,"sources":["components/MainMenu.tsx","WebGL.ts","../../three.quarks-core/dist/three.quarks.esm.js","example/ToonProjectile.ts","example/BulletMuzzle.ts","example/BulletProjectile.ts","example/ToonExplosion.ts","example/LevelUp.ts","example/ShipSmoke.ts","example/ElectricBall.ts","example/ShipTrail.ts","example/Explosion2.ts","example/EnergyRifleMuzzle.ts","example/Blackhole.ts","components/ApplicationContext.tsx","components/ThreejsViewport.tsx","components/editors/NumberInput.tsx","components/editors/Vector3Editor.tsx","components/editors/StringInput.tsx","components/ObjectProperties.tsx","components/editors/ColorEditor.tsx","components/editors/bezier/TransformComponent.tsx","components/editors/bezier/CurveComponent.tsx","components/editors/bezier/HandleComponent.tsx","components/editors/bezier/BezierCurvesEditor.tsx","components/editors/GeneratorEditor.tsx","components/ParticleSystemProperties.tsx","components/editors/FileInput.tsx","components/TexturePicker.tsx","components/ParticleRendererProperties.tsx","components/editors/ScriptEditor.tsx","components/ScriptProperties.tsx","components/EmitterShapeProperties.tsx","components/ParticleSystemController.tsx","components/BehaviorsProperties.tsx","components/PropertiesEditor.tsx","util/CodeExporter.ts","components/ScrollDialog.tsx","components/SceneGraphTreeView.tsx","components/Application.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MainMenu","props","fileRef","openFileDialog","e","current","click","importFile","target","files","onImport","openDemo","demoIndex","onOpenDemo","handleMenuClick","event","console","log","currentTarget","setState","anchorEl","handleMenuClose","undefined","state","React","Box","sx","flexGrow","AppBar","position","Toolbar","variant","IconButton","edge","marginRight","theme","spacing","color","Typography","Button","onClick","this","id","Menu","keepMounted","open","Boolean","onClose","MenuItem","onSaveAs","ref","type","multiple","accept","style","display","onChange","WEBGL","isWebGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","isWebGL2Available","WebGL2RenderingContext","getWebGLErrorMessage","getErrorMessage","getWebGL2ErrorMessage","version","contexts","message","element","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","replace","innerHTML","_classCallCheck","instance","Constructor","TypeError","_defineProperties","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","result","Super","NewTarget","arguments","apply","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","len","arr2","_createForOfIteratorHelper","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","return","ParticleEmitter","_Object3D","_super","system","_this","visible","clone","emitter","cache","values","data","metadata","meta","isRootObject","output","geometries","materials","textures","images","shapes","generator","object","uuid","castShadow","receiveShadow","frustumCulled","renderOrder","JSON","stringify","userData","layers","mask","matrix","toArray","matrixAutoUpdate","ps","toJSON","children","extractFromCache","Object3D","Particle","Vector4","Vector3","ConstantValue","json","IntervalValue","a","b","MathUtils","lerp","Math","random","PiecewiseFunction","functions","t","mid","left","right","floor","getStartX","getEndX","index","x","func","get","Bezier","p1","p2","p3","p4","t2","t3","mt","mt2","mt3","points","dpoints","c","list","j","dpt","derivativeCoefficients","d0","d1","pt","_p","q","idx","l","hull","span","p0","PiecewiseBezier","_PiecewiseFunction","curves","findFunction","error","genValue","segments","join","map","_ref","_ref2","bezier","start","_ref3","_ref4","piecewiseFunction","fromJSON","ValueGeneratorFromJSON","ColorToJSON","r","g","y","z","w","JSONToColor","RandomColor","rand","copy","ColorRange","ConstantColor","ColorGeneratorFromJSON","ColorOverLife","particle","delta","genColor","age","life","startColor","RotationOverLife","angularVelocityFunc","angularVelocity","rotation","SizeOverLife","size","startSize","SpeedOverLife","velocity","normalize","multiplyScalar","startSpeed","FrameOverLife","uvTile","OrbitOverLife","atan2","sqrt","cos","sin","RenderMode","ConeEmitter","parameters","radius","arc","PI","thickness","angle","u","theta","sinTheta","cosTheta","set","addScaledVector","SphereEmitter","v","phi","acos","cbrt","sinPhi","cosPhi","setScalar","PointEmitter","DonutEmitter","particle_frag","DEFAULT_MAX_PARTICLE","ParticleSystemBatch","_Mesh","settings","systems","Set","geometry","InstancedBufferGeometry","setIndex","instancingGeometry","getIndex","setAttribute","getAttribute","offsetBuffer","InstancedBufferAttribute","Float32Array","setUsage","DynamicDrawUsage","colorBuffer","rotationBuffer","sizeBuffer","uvTileBuffer","rebuildMaterial","add","uniforms","defines","Uniform","texture","Matrix3","uTileCount","vTileCount","Vector2","renderMode","BillBoard","LocalSpaceBillBoard","vertexShader","side","DoubleSide","FrontSide","material","ShaderMaterial","fragmentShader","transparent","depthWrite","blending","AdditiveBlending","StretchedBillBoard","Error","velocityBuffer","_this2","forEach","particles","particleNum","worldSpace","setXYZ","vector_","applyMatrix4","matrixWorld","setXYZW","setX","speedFactor","instanceCount","updateRange","count","needsUpdate","dispose","Mesh","DEFAULT_GEOMETRY","PlaneBufferGeometry","ParticleSystem","renderer","_parameters$duration","_parameters$maxPartic","_parameters$startLife","_parameters$startSpee","_parameters$startRota","_parameters$startSize","_parameters$startColo","_parameters$emissionO","_parameters$emissionO2","_parameters$emissionB","_parameters$shape","_parameters$behaviors","_parameters$worldSpac","_parameters$speedFact","_parameters$blending","_parameters$instancin","_parameters$renderMod","_parameters$renderOrd","_parameters$uTileCoun","_parameters$vTileCoun","Matrix4","autoDestroy","duration","maxParticle","looping","startLife","startRotation","emissionOverTime","emissionOverDistance","emissionBursts","emitterShape","shape","behaviors","rendererSettings","NormalBlending","neededToUpdateRender","startTileIndex","burstIndex","burstWaveIndex","time","paused","waitEmiting","emitEnded","markForDestroy","addSystem","initialize","applyMatrix3","normalMatrix","deleteSystem","parent","remove","endEmit","updateSystem","getNormalMatrix","totalSpawn","ceil","spawn","probability","_particle","update","oldWorldMatrix","image","url","behavior","_step","newEmissionBursts","_iterator","emissionBurst","newEmissionBurst","assign","_step2","newBehaviors","_iterator2","BehaviorFromJSON","BatchedParticleRenderer","getRendererSettings","batches","equals","batch","removeSystem","TEXTURE_MAPPING","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","TEXTURE_WRAPPING","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","TEXTURE_FILTER","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","QuarksLoader","manager","DefaultLoadingManager","resourcePath","path","crossOrigin","onLoad","onProgress","onError","scope","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","load","text","parse","toLowerCase","itemStart","itemEnd","itemError","LoadingManager","ImageLoader","setCrossOrigin","il","jl","currentUrl","loadImage","parseConstant","warn","CubeTexture","Texture","mapping","offset","fromArray","repeat","center","wrap","wrapS","wrapT","format","encoding","minFilter","magFilter","anisotropy","flipY","premultiplyAlpha","unpackAlignment","Group","decompose","quaternion","scale","parseObject","parseImages","parseTextures","Gradient","getFunction","range","ToonProjectile","smoke","glowBeam","mainBeam","addBehavior","rotateY","script","Function","BulletMuzzle","beam","muzzle1","muzzle2","flash","cycle","interval","muzzle","BulletProjectile","hProjectile","vProjectile","TextureLoader","projectileParam","ToonExplosion","circle","LevelUp","gatherParticles","glow","glow2","yellow","glowParam","glow2Param","particleParam","ShipSmoke","grey","ElectricBall","beamWorld","electricity","electricBall","texture2","ShipTrail","Explosion2","circle2","mainColor","yellowColor","secColor","yellowColor2","EnergyRifleMuzzle","glowTop","ringBase","coneBufferGeometry","CylinderBufferGeometry","rotateX","Blackhole","ring","ApplicationContext","ApplicationContextConsumer","Consumer","ApplicationContextProvider","textureLoader","updateProperties1","updateProperties","updateProperties2","removeObject3d","object3D","duplicateObject3d","addObject3d","batchedRenderer","scene","BoxBufferGeometry","MeshStandardMaterial","actions","select","animate","texture1","process","Scene","selection","img","addDemo","file","Blob","href","URL","createObjectURL","download","nFiles","nFileId","jsonURL","selectAddition","indexOf","updateParticleSystem","addTexture","textureImage","setBatchedRenderer","demoObject","Provider","ThreejsViewport","container","stats","camera","clock","controls","appContext","onResize","domElement","parentElement","clientWidth","clientHeight","height","newWidth","newHeight","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","renderScene","init","prevProps","prevState","snapshot","body","appendChild","WebGLRenderer","Color","axisHelper","AxesHelper","light","PointLight","ambientLight","AmbientLight","Clock","PerspectiveCamera","OrbitControls","enableKeys","enableDamping","dampingFactor","rotateSpeed","setPixelRatio","devicePixelRatio","Stats","dom","getDelta","traverse","render","context","NumberInput","inputValue","setInputValue","focus","setFocus","className","onBlur","parseFloat","onFocus","onKeyDown","Vector3Editor","unitConversion","StringInput","ObjectProperties","onChangeName","object3d","onChangePosition","onChangeScale","onChangeRotation","ConvertToColor","ColorEditor","setOpen","backgroundColor","colorResult","min","rgb","interp","TransformComponent","xFrom","xTo","yFrom","yTo","nextProps","Component","CurveComponent","curveColor","curveWidth","curve","fill","stroke","strokeWidth","d","HandleComponent","xstart","ystart","handleRadius","handleColor","hover","down","handleStroke","xval","yval","onMouseEnter","onMouseLeave","onMouseDown","sy","cx","cy","cxs","cys","x1","y1","x2","y2","BezierCurvesEditor","rootRef","createRef","positionForEvent","rect","getBoundingClientRect","clientX","clientY","top","inversex","inversey","onDownLeave","onDownMove","preventDefault","curveIndex","old","setStartX","pCurve","setFunction","setEndX","numOfFunctions","nCurve","onDownUp","h","defaultP","slope0","getSlope","slope1","onDownHandle","onEnterHandle","onLeaveHandle","onMouseMove","onMouseUp","ValueToEditor","GeneratorEditor","changeEditor","updateGenerator","changeValue","changeColor","changeValueA","changeValueB","changeColorRangeA","colorRange","changeColorRangeB","changeRandomColorA","randomColor","changeRandomColorB","changeCurve","allowedType","editorTypes","valueType","editorType","editor","currentEditor","getEditorType","ParticleSystemProperties","onChangeStartSpeed","particleSystem","onChangeStartLife","onChangeStartSize","onChangeStartColor","OnChangeStartRotation","OnChangeEmissionOverTime","valueFunctionTypes","colorValueFunctionTypes","FileInput","handleChange","htmlFor","component","DialogTitle","other","palette","DialogContent","styled","MuiDialogContent","root","DialogActions","MuiDialogActions","TexturePicker","useState","selected","setSelected","Dialog","handleClose","dividers","flexWrap","justifyContent","overflow","paper","ImageList","rowHeight","cols","ImageListItem","src","alt","ImageListItemBar","title","subtitle","handleUpload","handleSelect","ParticleRendererProperties","onChangeSpeedFactor","order","onChangeRenderOrder","onChangeStartTile","onChangeUTileCount","onChangeVTileCount","onChangeBlending","getValueOfBlending","onChangeRenderMode","getValueOfRenderMode","onChangeWorldSpace","getValueOfBoolean","onUploadTexture","onload","reader","FileReader","readAsDataURL","onChangeTexture","closeTexturePicker","texturePickerOpen","openTexturePicker","gridWidth","gridHeight","objectPosition","ScriptEditor","onValueChange","highlight","code","languages","javascript","ScriptProperties","onChangeScript","EmitterShapeProperties","getValueOfShape","onChangeShape","onChangeKeyValue","k","properties","renderShapeProperties","PureComponent","ParticleSystemController","getSystems","checkPause","togglePause","play","pause","onRestart","restart","onStop","ToggleButtonGroup","ButtonGroup","disabled","BehaviorsPropertiesFunc","checked","setChecked","selectedIndex","setSelectedIndex","setAnchorEl","onAddNewBehavior","onChangeBehaviorFunc","splice","List","dense","valueTypes","labelId","ListItem","handleListItemClick","ListItemIcon","Checkbox","currentIndex","newChecked","inputProps","ListItemText","primary","secondary","BehaviorsProperties","Accordion","disableGutters","elevation","square","border","divider","borderBottom","AccordionSummary","expandIcon","minHeight","mode","flexDirection","marginLeft","marginTop","marginBottom","transform","AccordionDetails","MuiAccordionDetails","borderTop","StyledHeading","typography","fontWeightRegular","PropertiesEditor","expanded","setExpanded","panel","isExpanded","CodeExporter","str","word","toUpperCase","indent","exportColor","exportFunction","exportBezier","camelize","exportShape","exportBehavior","unquoted","camelizeClass","exportParticleEmitter","ScrollDialog","useRef","scroll","content","SceneGraphTreeView","setCode","countIndex","res","newIndex","nodeIds","parseInt","handleToggle","tagName","getObjectName","renderObject","items","originIndex","TreeItem","nodeId","label","Fragment","pxToRem","TreeView","onNodeToggle","onNodeSelect","defaultCollapseIcon","defaultExpandIcon","multiSelect","contextProps","exportCode","Application","createTheme","main","blue","red","App","ThemeProvider","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e607298d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport {createStyles, Theme, Typography, Toolbar, Box} from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AppBar from \"@mui/material/AppBar\";\nimport withStyles from \"@mui/material/styles/withStyles\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport {Blackhole} from \"../example/Blackhole\";\n\ninterface MainMenuProps {\n    onSaveAs: () => void;\n    onImport: (files: FileList) => void;\n    onOpenDemo: (demoIndex: number) => void;\n}\n\ninterface MainMenuState {\n    anchorEl?: Element\n}\n\nexport default class MainMenu extends React.PureComponent<MainMenuProps, MainMenuState> {\n    private fileRef: React.RefObject<HTMLInputElement>;\n\n    constructor(props: Readonly<MainMenuProps>) {\n        super(props);\n        this.state = {\n            anchorEl: undefined\n        }\n\n        this.fileRef = React.createRef();\n    }\n\n    openFileDialog = (e: React.MouseEvent<Element, MouseEvent>) => {\n        if (this.fileRef.current)\n            this.fileRef.current.click();\n    };\n\n    importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onImport(e.target.files);\n    };\n\n    openDemo = (demoIndex: number) => {\n        this.props.onOpenDemo(demoIndex);\n    };\n\n    handleMenuClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n        console.log(event.currentTarget);\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: undefined});\n    };\n\n    render() {\n        //<Image size='mini' src='/logo.png' style={{ marginRight: '1.5em' }} />\n        //<MenuIcon />\n        //<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n        //</IconButton>\n        return (\n            <Box sx={{flexGrow: 1}}>\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\">\n                        <IconButton edge=\"start\" sx={{marginRight: theme => theme.spacing(2)}} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" sx={{marginRight: theme => theme.spacing(1)}}>\n                            Three.Quarks\n                        </Typography>\n                        <Button color=\"inherit\" sx={{marginRight: theme => theme.spacing(1)}} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"file-button\">\n                            File\n                        </Button>\n                        <Menu\n                            id=\"file-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"file-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem>New</MenuItem>\n                            <MenuItem onClick={this.openFileDialog}>Open</MenuItem>\n                            <MenuItem onClick={this.props.onSaveAs}>Download</MenuItem>\n                            <input ref={this.fileRef} type=\"file\" id=\"fileElem\" multiple accept=\"application/json\"\n                                   style={{display: \"none\"}}\n                                   onChange={this.importFile}/>\n                        </Menu>\n                        <Button color=\"inherit\" sx={{marginRight: theme => theme.spacing(1)}} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"demo-button\">\n                            Demo\n                        </Button>\n                        <Menu\n                            id=\"demo-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"demo-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem onClick={() => this.openDemo(0)}>PlasmaProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(1)}>BulletMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(2)}>BulletProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(3)}>ShipSmoke</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(4)}>HitImpact</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(5)}>BlackHole</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(6)}>Levelup</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(7)}>EnergyMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(8)}>ElectricBall</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(9)}>ShipTrail</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(10)}>Explosion2</MenuItem>\n                        </Menu>\n                    </Toolbar>\n                </AppBar>\n            </Box>);\n    }\n}\n\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport const WEBGL = {\n    isWebGLAvailable: function () {\n\n        try {\n            const canvas = document.createElement( 'canvas' );\n            return !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n        } catch ( e ) {\n            return false;\n        }\n\n    },\n\n    isWebGL2Available: function () {\n        try {\n            const canvas = document.createElement( 'canvas' );\n            return !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n        } catch ( e ) {\n            return false;\n        }\n    },\n\n    getWebGLErrorMessage: function () {\n        return this.getErrorMessage( 1 );\n    },\n\n    getWebGL2ErrorMessage: function () {\n        return this.getErrorMessage( 2 );\n    },\n\n    getErrorMessage: function ( version: number ) {\n        const names :{[version:number]: string} = {\n            1: 'WebGL',\n            2: 'WebGL 2'\n        };\n\n        const contexts :{[version:number]: any} = {\n            1: window.WebGLRenderingContext,\n            2: window.WebGL2RenderingContext\n        };\n\n        let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n        const element = document.createElement( 'div' );\n        element.id = 'webglmessage';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if ( contexts[ version ] ) {\n            message = message.replace( '$0', 'graphics card' );\n        } else {\n            message = message.replace( '$0', 'browser' );\n        }\n        message = message.replace( '$1', names[ version ] );\n        element.innerHTML = message;\n\n        return element;\n    }\n\n};\n","/**\n * three.quarks v0.4.0 build Sat Oct 16 2021\n * https://github.com/Alchemist0823/three.quarks#readme\n * Copyright 2021 undefined, MIT\n */\nimport { Object3D, Vector4, Vector3, MathUtils, InstancedBufferGeometry, InstancedBufferAttribute, DynamicDrawUsage, Uniform, Matrix3, Vector2, ShaderMaterial, AdditiveBlending, Mesh, DoubleSide, FrontSide, PlaneBufferGeometry, Matrix4, NormalBlending, DefaultLoadingManager, LoaderUtils, FileLoader, LoadingManager, ImageLoader, CubeTexture, Texture, Group, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter } from 'three';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar ParticleEmitter = /*#__PURE__*/function (_Object3D) {\n  _inherits(ParticleEmitter, _Object3D);\n\n  var _super = _createSuper(ParticleEmitter);\n\n  //interleavedBuffer: InterleavedBuffer;\n  function ParticleEmitter(system) {\n    var _this;\n\n    _classCallCheck(this, ParticleEmitter);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"ParticleEmitter\");\n\n    _defineProperty(_assertThisInitialized(_this), \"system\", void 0);\n\n    _this.system = system;\n    _this.visible = false; // TODO: implement boundingVolume\n\n    return _this;\n  }\n\n  _createClass(ParticleEmitter, [{\n    key: \"clone\",\n    value: function clone() {\n      var system = this.system.clone();\n      return system.emitter;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {} // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n  }, {\n    key: \"extractFromCache\",\n    value: function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n      if (this.system !== null) object.ps = this.system.toJSON(meta);\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = this.extractFromCache(meta.geometries);\n        var materials = this.extractFromCache(meta.materials);\n        var textures = this.extractFromCache(meta.textures);\n        var images = this.extractFromCache(meta.images);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n      }\n\n      output.object = object;\n      return output;\n    }\n  }]);\n\n  return ParticleEmitter;\n}(Object3D);\n\nvar Particle = function Particle() {\n  _classCallCheck(this, Particle);\n\n  _defineProperty(this, \"startSpeed\", 0);\n\n  _defineProperty(this, \"startColor\", new Vector4());\n\n  _defineProperty(this, \"startSize\", 1);\n\n  _defineProperty(this, \"velocity\", new Vector3());\n\n  _defineProperty(this, \"age\", 0);\n\n  _defineProperty(this, \"life\", 1);\n\n  _defineProperty(this, \"angularVelocity\", void 0);\n\n  _defineProperty(this, \"position\", new Vector3());\n\n  _defineProperty(this, \"rotation\", 0);\n\n  _defineProperty(this, \"size\", 1);\n\n  _defineProperty(this, \"color\", new Vector4());\n\n  _defineProperty(this, \"uvTile\", 0);\n};\n\nvar ConstantValue = /*#__PURE__*/function () {\n  function ConstantValue(value) {\n    _classCallCheck(this, ConstantValue);\n\n    this.value = value;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return this.value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantValue\",\n        value: this.value\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantValue(this.value);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantValue(json.value);\n    }\n  }]);\n\n  return ConstantValue;\n}();\n\nvar IntervalValue = /*#__PURE__*/function () {\n  function IntervalValue(a, b) {\n    _classCallCheck(this, IntervalValue);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(IntervalValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return MathUtils.lerp(this.a, this.b, Math.random());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"IntervalValue\",\n        a: this.a,\n        b: this.b\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new IntervalValue(this.a, this.b);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new IntervalValue(json.a, json.b);\n    }\n  }]);\n\n  return IntervalValue;\n}();\n\nvar PiecewiseFunction = /*#__PURE__*/function () {\n  function PiecewiseFunction() {\n    _classCallCheck(this, PiecewiseFunction);\n\n    _defineProperty(this, \"functions\", void 0);\n\n    this.functions = new Array();\n  }\n\n  _createClass(PiecewiseFunction, [{\n    key: \"findFunction\",\n    value: function findFunction(t) {\n      var mid = 0;\n      var left = 0,\n          right = this.functions.length - 1;\n\n      while (left + 1 < right) {\n        mid = Math.floor((left + right) / 2);\n        if (t < this.getStartX(mid)) right = mid - 1;else if (t > this.getEndX(mid)) left = mid + 1;else return mid;\n      }\n\n      for (var i = left; i <= right; i++) {\n        if (t >= this.functions[i][1] && t <= this.getEndX(i)) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"getStartX\",\n    value: function getStartX(index) {\n      return this.functions[index][1];\n    }\n  }, {\n    key: \"setStartX\",\n    value: function setStartX(index, x) {\n      if (index > 0) this.functions[index][1] = x;\n    }\n  }, {\n    key: \"getEndX\",\n    value: function getEndX(index) {\n      if (index + 1 < this.functions.length) return this.functions[index + 1][1];\n      return 1;\n    }\n  }, {\n    key: \"setEndX\",\n    value: function setEndX(index, x) {\n      if (index + 1 < this.functions.length) this.functions[index + 1][1] = x;\n    }\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(index) {\n      return this.functions[index][0];\n    }\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(index, func) {\n      this.functions[index][0] = func;\n    }\n  }, {\n    key: \"numOfFunctions\",\n    get: function get() {\n      return this.functions.length;\n    }\n  }]);\n\n  return PiecewiseFunction;\n}();\n\nvar Bezier = /*#__PURE__*/function () {\n  function Bezier(p1, p2, p3, p4) {\n    _classCallCheck(this, Bezier);\n\n    _defineProperty(this, \"p\", void 0);\n\n    this.p = [p1, p2, p3, p4];\n  }\n\n  _createClass(Bezier, [{\n    key: \"genValue\",\n    value: function genValue(t) {\n      var t2 = t * t;\n      var t3 = t * t * t;\n      var mt = 1 - t;\n      var mt2 = mt * mt;\n      var mt3 = mt2 * mt;\n      return this.p[0] * mt3 + this.p[1] * mt2 * t * 3 + this.p[2] * mt * t2 * 3 + this.p[3] * t3;\n    } // get the coefficients of the polynomial's derivatives\n\n  }, {\n    key: \"derivativeCoefficients\",\n    value: function derivativeCoefficients(points) {\n      var dpoints = [];\n\n      for (var p = points, c = p.length - 1; c > 0; c--) {\n        var list = [];\n\n        for (var j = 0; j < c; j++) {\n          var dpt = c * (p[j + 1] - p[j]);\n          list.push(dpt);\n        }\n\n        dpoints.push(list);\n        p = list;\n      }\n\n      return dpoints;\n    } // calculate the slope\n\n  }, {\n    key: \"getSlope\",\n    value: function getSlope(t) {\n      var p = this.derivativeCoefficients(this.p)[0];\n      var mt = 1 - t;\n      var a = mt * mt;\n      var b = mt * t * 2;\n      var c = t * t;\n      return a * p[0] + b * p[1] + c * p[2]; //return  a * (p[1] - p[0]) * 3 + b * (p[2] - p[1]) * 3 + c * (p[3] - p[2]) * 3;\n    } // derivative(0) = (p[1] - p[0]) * 3\n    // derivative(1) = (p[3] - p[2]) * 3\n\n  }, {\n    key: \"controlCurve\",\n    value: function controlCurve(d0, d1) {\n      this.p[1] = d0 / 3 + this.p[0];\n      this.p[2] = this.p[3] - d1 / 3;\n    }\n  }, {\n    key: \"hull\",\n    value: function hull(t) {\n      var p = this.p;\n      var _p = [],\n          pt,\n          q = [],\n          idx = 0,\n          i = 0,\n          l = 0;\n      q[idx++] = p[0];\n      q[idx++] = p[1];\n      q[idx++] = p[2];\n      q[idx++] = p[3]; // we lerp between all points at each iteration, until we have 1 point left.\n\n      while (p.length > 1) {\n        _p = [];\n\n        for (i = 0, l = p.length - 1; i < l; i++) {\n          pt = t * p[i] + (1 - t) * p[i + 1];\n          q[idx++] = pt;\n\n          _p.push(pt);\n        }\n\n        p = _p;\n      }\n\n      return q;\n    }\n  }, {\n    key: \"split\",\n    value: function split(t) {\n      // no shortcut: use \"de Casteljau\" iteration.\n      var q = this.hull(t);\n      var result = {\n        left: new Bezier(q[0], q[4], q[7], q[9]),\n        right: new Bezier(q[9], q[8], q[6], q[3]),\n        span: q\n      };\n      return result;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Bezier(this.p[0], this.p[1], this.p[2], this.p[3]);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        p0: this.p[0],\n        p1: this.p[1],\n        p2: this.p[2],\n        p3: this.p[3]\n      };\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Bezier(json.p0, json.p1, json.p2, json.p3);\n    }\n  }]);\n\n  return Bezier;\n}();\n\nvar PiecewiseBezier = /*#__PURE__*/function (_PiecewiseFunction) {\n  _inherits(PiecewiseBezier, _PiecewiseFunction);\n\n  var _super = _createSuper(PiecewiseBezier);\n\n  // default linear bezier\n  function PiecewiseBezier() {\n    var _this;\n\n    var curves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new Bezier(0, 1.0 / 3, 1.0 / 3 * 2, 1), 0]];\n\n    _classCallCheck(this, PiecewiseBezier);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _this.type = \"function\";\n    _this.functions = curves;\n    return _this;\n  }\n\n  _createClass(PiecewiseBezier, [{\n    key: \"genValue\",\n    value: function genValue() {\n      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return 0;\n      }\n\n      return this.functions[index][0].genValue((t - this.getStartX(index)) / (this.getEndX(index) - this.getStartX(index)));\n    }\n  }, {\n    key: \"toSVG\",\n    value: function toSVG(length, segments) {\n      if (segments < 1) return \"\";\n      var result = [\"M\", 0, this.functions[0][0].p[0]].join(\" \");\n\n      for (var i = 1.0 / segments; i <= 1; i += 1.0 / segments) {\n        result = [result, \"L\", i * length, this.genValue(i)].join(\" \");\n      }\n\n      return result;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"PiecewiseBezier\",\n        functions: this.functions.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              bezier = _ref2[0],\n              start = _ref2[1];\n\n          return {\n            \"function\": bezier.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PiecewiseBezier(this.functions.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            bezier = _ref4[0],\n            start = _ref4[1];\n\n        return [bezier.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new PiecewiseBezier(json.functions.map(function (piecewiseFunction) {\n        return [Bezier.fromJSON(piecewiseFunction[\"function\"]), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return PiecewiseBezier;\n}(PiecewiseFunction);\n\nfunction ValueGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantValue':\n      return ConstantValue.fromJSON(json);\n\n    case 'IntervalValue':\n      return IntervalValue.fromJSON(json);\n\n    case 'PiecewiseBezier':\n      return PiecewiseBezier.fromJSON(json);\n\n    default:\n      return new ConstantValue(0);\n  }\n}\n\nvar ColorToJSON = function ColorToJSON(color) {\n  return {\n    r: color.x,\n    g: color.y,\n    b: color.z,\n    a: color.w\n  };\n};\nvar JSONToColor = function JSONToColor(json) {\n  return new Vector4(json.r, json.g, json.b, json.a);\n};\n\nvar RandomColor = /*#__PURE__*/function () {\n  function RandomColor(a, b) {\n    _classCallCheck(this, RandomColor);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(RandomColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      var rand = Math.random();\n      return color.copy(this.a).lerp(this.b, rand);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"RandomColor\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RandomColor(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new RandomColor(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return RandomColor;\n}();\n\nvar ColorRange = /*#__PURE__*/function () {\n  function ColorRange(a, b) {\n    _classCallCheck(this, ColorRange);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"function\";\n  }\n\n  _createClass(ColorRange, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      return color.copy(this.a).lerp(this.b, t);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ColorRange\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorRange(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ColorRange(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return ColorRange;\n}();\n\nvar ConstantColor = /*#__PURE__*/function () {\n  function ConstantColor(color) {\n    _classCallCheck(this, ConstantColor);\n\n    this.color = color;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      return color.copy(this.color);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantColor\",\n        color: ColorToJSON(this.color)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantColor(this.color.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantColor(JSONToColor(json.color));\n    }\n  }]);\n\n  return ConstantColor;\n}();\nfunction ColorGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantColor':\n      return ConstantColor.fromJSON(json);\n\n    case 'ColorRange':\n      return ColorRange.fromJSON(json);\n\n    case 'RandomColor':\n      return RandomColor.fromJSON(json);\n\n    default:\n      return new ConstantColor(new Vector4(1, 1, 1, 1));\n  }\n}\n\nvar ColorOverLife = /*#__PURE__*/function () {\n  function ColorOverLife(func) {\n    _classCallCheck(this, ColorOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'ColorOverLife');\n  }\n\n  _createClass(ColorOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      this.func.genColor(particle.color, particle.age / particle.life);\n      particle.color.x *= particle.startColor.x;\n      particle.color.y *= particle.startColor.y;\n      particle.color.z *= particle.startColor.z;\n      particle.color.w *= particle.startColor.w;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorOverLife(this.func.clone());\n    }\n  }]);\n\n  return ColorOverLife;\n}();\n\nvar RotationOverLife = /*#__PURE__*/function () {\n  function RotationOverLife(angularVelocityFunc) {\n    _classCallCheck(this, RotationOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'RotationOverLife');\n  }\n\n  _createClass(RotationOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.rotation += delta * particle.angularVelocity;\n      } else {\n        particle.rotation += delta * this.angularVelocityFunc.genValue(particle.age / particle.life);\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RotationOverLife(this.angularVelocityFunc);\n    }\n  }]);\n\n  return RotationOverLife;\n}();\n\nvar SizeOverLife = /*#__PURE__*/function () {\n  function SizeOverLife(func) {\n    _classCallCheck(this, SizeOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SizeOverLife');\n  }\n\n  _createClass(SizeOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle) {\n      particle.size = particle.startSize * this.func.genValue(particle.age / particle.life);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SizeOverLife(this.func.clone());\n    }\n  }]);\n\n  return SizeOverLife;\n}();\n\nvar SpeedOverLife = /*#__PURE__*/function () {\n  function SpeedOverLife(func) {\n    _classCallCheck(this, SpeedOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SpeedOverLife');\n  }\n\n  _createClass(SpeedOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle) {\n      particle.velocity.normalize().multiplyScalar(particle.startSpeed * this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SpeedOverLife(this.func.clone());\n    }\n  }]);\n\n  return SpeedOverLife;\n}();\n\nvar FrameOverLife = /*#__PURE__*/function () {\n  function FrameOverLife(func) {\n    _classCallCheck(this, FrameOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'FrameOverLife');\n  }\n\n  _createClass(FrameOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      particle.uvTile = Math.floor(this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new FrameOverLife(this.func.clone());\n    }\n  }]);\n\n  return FrameOverLife;\n}();\n\nnew Vector3();\nvar OrbitOverLife = /*#__PURE__*/function () {\n  function OrbitOverLife(angularVelocityFunc) {\n    _classCallCheck(this, OrbitOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'OrbitOverLife');\n  }\n\n  _createClass(OrbitOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      var rotation = Math.atan2(particle.position.y, particle.position.x);\n      var len = Math.sqrt(particle.position.x * particle.position.x + particle.position.y * particle.position.y);\n      rotation += this.angularVelocityFunc.genValue(particle.age / particle.life) * delta;\n      particle.position.x = Math.cos(rotation) * len;\n      particle.position.y = Math.sin(rotation) * len; //let v1x = particle.position.x\n      //let v1y = particle.position.y;\n\n      /*let v2x = particle.position.y;\n      let v2y = -particle.position.x;\n      v2x /= len;\n      v2y /= len;\n      particle.position.distanceTo(V3_ZERO) * this.angularVelocityFunc.genValue(particle.age / particle.life);*/\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new OrbitOverLife(this.angularVelocityFunc.clone());\n    }\n  }]);\n\n  return OrbitOverLife;\n}();\n\nfunction BehaviorFromJSON(json) {\n  switch (json.type) {\n    case 'ColorOverLife':\n      return new ColorOverLife(ColorGeneratorFromJSON(json.func));\n\n    case 'RotationOverLife':\n      return new RotationOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'SizeOverLife':\n      return new SizeOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'SpeedOverLife':\n      return new SpeedOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'FrameOverLife':\n      return new FrameOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'OrbitOverLife':\n      return new OrbitOverLife(ValueGeneratorFromJSON(json.func));\n\n    default:\n      return new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)));\n  }\n}\n\nvar ConeEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function ConeEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ConeEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(ConeEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"cone\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConeEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return ConeEmitter;\n}();\n\nvar SphereEmitter = /*#__PURE__*/function () {\n  //[0, 1]\n  function SphereEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SphereEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n  }\n\n  _createClass(SphereEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.position.x = r * sinPhi * cosTheta;\n      p.position.y = r * sinPhi * sinTheta;\n      p.position.z = r * cosPhi;\n      p.velocity.setScalar(0).addScaledVector(p.position, p.startSpeed);\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"sphere\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SphereEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      });\n    }\n  }]);\n\n  return SphereEmitter;\n}();\n\nvar PointEmitter = /*#__PURE__*/function () {\n  function PointEmitter() {\n    _classCallCheck(this, PointEmitter);\n  }\n\n  _createClass(PointEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var theta = u * Math.PI * 2;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(Math.random());\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.velocity.x = r * sinPhi * cosTheta;\n      p.velocity.y = r * sinPhi * sinTheta;\n      p.velocity.z = r * cosPhi;\n      p.velocity.multiplyScalar(p.startSpeed);\n      p.position.setScalar(0);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: 'point'\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PointEmitter();\n    }\n  }]);\n\n  return PointEmitter;\n}();\n\nvar DonutEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function DonutEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DonutEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(DonutEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"donut\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new DonutEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return DonutEmitter;\n}();\n\nvar particle_frag = /* glsl */\n\"\\n\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\nvarying vec4 vColor;\\n\\nvoid main() {\\n\\n    #include <clipping_planes_fragment>\\n    \\n    vec3 outgoingLight = vec3( 0.0 );\\n    vec4 diffuseColor = vColor;\\n    \\n    #include <logdepthbuf_fragment>\\n    \\n    #ifdef USE_MAP\\n    vec4 texelColor = texture2D( map, vUv);\\n    diffuseColor *= texelColor;\\n    #endif\\n\\n    outgoingLight = diffuseColor.rgb;\\n\\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n    \\n    #include <tonemapping_fragment>\\n\\n}\\n\";\n/*\n    gl_FragColor = vec4(vUv.x, vUv.y, 1.0, 1.0);\n\n    #ifdef USE_MAP\n    vec4 texelColor = texture2D( map, vUv);\n    diffuseColor *= texelColor;\n    #endif\n\n    outgoingLight = diffuseColor.rgb;\n\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n*/\n\nvar particle_vert = /* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset, 1.0 );\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n\\t#endif\\n\\t\\n    vec2 alignedPosition = ( position.xy ) * size;\\n    \\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n    \\n    mvPosition.xy += rotatedPosition;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar local_particle_vert = /* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n    vec2 alignedPosition = ( position.xy ) * size;\\n    \\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n    \\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset + vec3(rotatedPosition, position.z), 1.0 );\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset + vec3(rotatedPosition, position.z), 1.0 );\\n\\t#endif\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n\nvar stretched_bb_particle_vert = /* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute vec3 velocity;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nuniform float speedFactor;\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset, 1.0 );\\n        vec3 viewVelocity = vec3(viewMatrix * vec4(velocity, 1.0));\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n        vec3 viewVelocity = vec3(modelViewMatrix * vec4(velocity, 1.0));\\n\\t#endif\\n\\n    vec3 scaledPos = vec3(position.xy * size, position.z);\\n    mvPosition.xyz += scaledPos + dot(scaledPos, viewVelocity) * viewVelocity / length(viewVelocity) * speedFactor;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\n    vec3 instancePos = vec3(position.xy * size, position.z);\n    instancePos += dot(instancePos, viewVelocity) * viewVelocity * speedFactor;\n    mvPosition.xyz += instancePos;\n\n\tvColor = color; //vec4(1, 1, 1, 1); //color; //length(viewVelocity) * 0.1\n\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar RenderMode;\n\n(function (RenderMode) {\n  RenderMode[RenderMode[\"BillBoard\"] = 0] = \"BillBoard\";\n  RenderMode[RenderMode[\"StretchedBillBoard\"] = 1] = \"StretchedBillBoard\";\n  RenderMode[RenderMode[\"LocalSpaceBillBoard\"] = 2] = \"LocalSpaceBillBoard\";\n})(RenderMode || (RenderMode = {}));\n\nvar DEFAULT_MAX_PARTICLE = 1000;\nvar ParticleSystemBatch = /*#__PURE__*/function (_Mesh) {\n  _inherits(ParticleSystemBatch, _Mesh);\n\n  var _super = _createSuper(ParticleSystemBatch);\n\n  /*\n  public renderMode: RenderMode;\n  speedFactor: number;\n  uTileCount: number;\n  vTileCount: number;\n  texture: Texture;\n  private blending: Blending\n  instancingGeometry: BufferGeometry;*/\n  function ParticleSystemBatch(settings) {\n    var _this;\n\n    _classCallCheck(this, ParticleSystemBatch);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"ParticleSystemBatch\");\n\n    _defineProperty(_assertThisInitialized(_this), \"systems\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"geometry\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"material\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"sizeBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"colorBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uvTileBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"settings\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"vector_\", new Vector3());\n\n    _this.systems = new Set();\n    _this.geometry = new InstancedBufferGeometry();\n    _this.settings = settings;\n    /*this.renderMode = parameters.renderMode || RenderMode.BillBoard;\n    this.speedFactor = parameters.speedFactor || 1;\n    //this.worldSpace = (parameters.worldSpace !== undefined) ? parameters.worldSpace : false;\n    this.uTileCount = parameters.uTileCount;\n    this.vTileCount = parameters.vTileCount;\n    this.texture = parameters.texture;\n    this.blending = parameters.blending || NormalBlending;\n    this.instancingGeometry = parameters.instancingGeometry || new PlaneBufferGeometry(1, 1, 1, 1);*/\n\n    /*const instancingGeometry = new Float32Array([\n        -0.5, -0.5, 0, 0, 0,\n        0.5, -0.5, 0, 1, 0,\n        0.5, 0.5, 0, 1, 1,\n        -0.5, 0.5, 0, 0, 1\n    ]);*/\n    //this.interleavedBuffer = new InterleavedBuffer(instancingGeometry., 5);\n\n    _this.geometry.setIndex(_this.settings.instancingGeometry.getIndex());\n\n    _this.geometry.setAttribute('position', _this.settings.instancingGeometry.getAttribute('position')); //new InterleavedBufferAttribute(this.interleavedBuffer, 3, 0, false));\n\n\n    _this.geometry.setAttribute('uv', _this.settings.instancingGeometry.getAttribute('uv')); //new InterleavedBufferAttribute(this.interleavedBuffer, 2, 3, false));\n\n\n    _this.offsetBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE * 3), 3);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('offset', _this.offsetBuffer);\n\n    _this.colorBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE * 4), 4);\n\n    _this.colorBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('color', _this.colorBuffer);\n\n    _this.rotationBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE), 1);\n\n    _this.rotationBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('rotation', _this.rotationBuffer);\n\n    _this.sizeBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE), 1);\n\n    _this.sizeBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('size', _this.sizeBuffer);\n\n    _this.uvTileBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE), 1);\n\n    _this.uvTileBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('uvTile', _this.uvTileBuffer);\n\n    _this.rebuildMaterial(); // TODO: implement boundingVolume\n\n\n    _this.frustumCulled = false;\n    _this.renderOrder = _this.settings.renderOrder;\n    return _this;\n  }\n\n  _createClass(ParticleSystemBatch, [{\n    key: \"addSystem\",\n    value: function addSystem(system) {\n      this.systems.add(system);\n    }\n  }, {\n    key: \"removeSystem\",\n    value: function removeSystem(system) {\n      this.systems[\"delete\"](system);\n    }\n  }, {\n    key: \"rebuildMaterial\",\n    value: function rebuildMaterial() {\n      var uniforms = {};\n      var defines = {};\n      defines['USE_MAP'] = '';\n      defines['USE_UV'] = '';\n      uniforms['map'] = new Uniform(this.settings.texture); //@ts-ignore\n\n      uniforms['uvTransform'] = new Uniform(new Matrix3().copy(this.settings.texture.matrix));\n      var uTileCount = this.settings.uTileCount;\n      var vTileCount = this.settings.vTileCount;\n      defines['UV_TILE'] = '';\n      uniforms['tileCount'] = new Uniform(new Vector2(uTileCount, vTileCount));\n\n      if (this.settings.renderMode === RenderMode.BillBoard || this.settings.renderMode === RenderMode.LocalSpaceBillBoard) {\n        var vertexShader;\n        var side;\n\n        if (this.settings.renderMode === RenderMode.LocalSpaceBillBoard) {\n          vertexShader = local_particle_vert;\n          side = DoubleSide;\n        } else {\n          vertexShader = particle_vert;\n          side = FrontSide;\n        }\n\n        this.material = new ShaderMaterial({\n          uniforms: uniforms,\n          defines: defines,\n          vertexShader: vertexShader,\n          fragmentShader: particle_frag,\n          transparent: true,\n          depthWrite: false,\n          blending: this.settings.blending || AdditiveBlending,\n          side: side\n        });\n      } else if (this.settings.renderMode === RenderMode.StretchedBillBoard) {\n        this.velocityBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE * 3), 3);\n        this.velocityBuffer.setUsage(DynamicDrawUsage);\n        this.geometry.setAttribute('velocity', this.velocityBuffer);\n        uniforms['speedFactor'] = new Uniform(1.0);\n        this.material = new ShaderMaterial({\n          uniforms: uniforms,\n          defines: defines,\n          vertexShader: stretched_bb_particle_vert,\n          fragmentShader: particle_frag,\n          transparent: true,\n          depthWrite: false,\n          blending: this.settings.blending || AdditiveBlending\n        });\n      } else {\n        throw new Error(\"render mode unavailable\");\n      }\n    }\n    /*\n    clone() {\n        let system = this.system.clone();\n        return system.emitter as any;\n    }*/\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this2 = this;\n\n      var index = 0;\n      this.systems.forEach(function (system) {\n        var particles = system.particles;\n        var particleNum = system.particleNum;\n\n        for (var j = 0; j < particleNum; j++, index++) {\n          var particle = particles[j];\n\n          if (system.worldSpace) {\n            _this2.offsetBuffer.setXYZ(index, particle.position.x, particle.position.y, particle.position.z);\n          } else {\n            _this2.vector_.copy(particle.position).applyMatrix4(system.emitter.matrixWorld);\n\n            _this2.offsetBuffer.setXYZ(index, _this2.vector_.x, _this2.vector_.y, _this2.vector_.z);\n          }\n\n          _this2.colorBuffer.setXYZW(index, particle.color.x, particle.color.y, particle.color.z, particle.color.w);\n\n          _this2.rotationBuffer.setX(index, particle.rotation);\n\n          _this2.sizeBuffer.setX(index, particle.size);\n\n          _this2.uvTileBuffer.setX(index, particle.uvTile);\n\n          if (_this2.settings.renderMode === RenderMode.StretchedBillBoard) {\n            _this2.velocityBuffer.setXYZ(index, particle.velocity.x * system.speedFactor, particle.velocity.y * system.speedFactor, particle.velocity.z * system.speedFactor);\n          }\n        }\n      });\n      this.geometry.instanceCount = index;\n\n      if (index > 0) {\n        this.offsetBuffer.updateRange.count = index * 3;\n        this.offsetBuffer.needsUpdate = true;\n        this.colorBuffer.updateRange.count = index * 4;\n        this.colorBuffer.needsUpdate = true;\n        this.rotationBuffer.updateRange.count = index;\n        this.rotationBuffer.needsUpdate = true;\n        this.sizeBuffer.updateRange.count = index;\n        this.sizeBuffer.needsUpdate = true;\n        this.uvTileBuffer.updateRange.count = index;\n        this.uvTileBuffer.needsUpdate = true;\n\n        if (this.settings.renderMode === RenderMode.StretchedBillBoard) {\n          this.velocityBuffer.updateRange.count = index * 3;\n          this.velocityBuffer.needsUpdate = true;\n        }\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n    }\n  }]);\n\n  return ParticleSystemBatch;\n}(Mesh);\n\nvar DEFAULT_GEOMETRY = new PlaneBufferGeometry(1, 1, 1, 1);\nvar ParticleSystem = /*#__PURE__*/function () {\n  function ParticleSystem(renderer, parameters) {\n    var _parameters$duration, _parameters$maxPartic, _parameters$startLife, _parameters$startSpee, _parameters$startRota, _parameters$startSize, _parameters$startColo, _parameters$emissionO, _parameters$emissionO2, _parameters$emissionB, _parameters$shape, _parameters$behaviors, _parameters$worldSpac, _parameters$speedFact, _parameters$blending, _parameters$instancin, _parameters$renderMod, _parameters$renderOrd, _parameters$uTileCoun, _parameters$vTileCoun;\n\n    _classCallCheck(this, ParticleSystem);\n\n    _defineProperty(this, \"autoDestroy\", void 0);\n\n    _defineProperty(this, \"looping\", void 0);\n\n    _defineProperty(this, \"duration\", void 0);\n\n    _defineProperty(this, \"maxParticle\", void 0);\n\n    _defineProperty(this, \"startLife\", void 0);\n\n    _defineProperty(this, \"startSpeed\", void 0);\n\n    _defineProperty(this, \"startRotation\", void 0);\n\n    _defineProperty(this, \"startSize\", void 0);\n\n    _defineProperty(this, \"startColor\", void 0);\n\n    _defineProperty(this, \"startTileIndex\", void 0);\n\n    _defineProperty(this, \"emissionOverTime\", void 0);\n\n    _defineProperty(this, \"emissionOverDistance\", void 0);\n\n    _defineProperty(this, \"emissionBursts\", void 0);\n\n    _defineProperty(this, \"worldSpace\", void 0);\n\n    _defineProperty(this, \"speedFactor\", void 0);\n\n    _defineProperty(this, \"particleNum\", void 0);\n\n    _defineProperty(this, \"burstIndex\", void 0);\n\n    _defineProperty(this, \"burstWaveIndex\", void 0);\n\n    _defineProperty(this, \"time\", void 0);\n\n    _defineProperty(this, \"paused\", void 0);\n\n    _defineProperty(this, \"waitEmiting\", void 0);\n\n    _defineProperty(this, \"emitEnded\", void 0);\n\n    _defineProperty(this, \"markForDestroy\", void 0);\n\n    _defineProperty(this, \"behaviors\", void 0);\n\n    _defineProperty(this, \"particles\", void 0);\n\n    _defineProperty(this, \"emitterShape\", void 0);\n\n    _defineProperty(this, \"emitter\", void 0);\n\n    _defineProperty(this, \"rendererSettings\", void 0);\n\n    _defineProperty(this, \"renderer\", void 0);\n\n    _defineProperty(this, \"neededToUpdateRender\", void 0);\n\n    _defineProperty(this, \"oldWorldMatrix\", new Matrix4());\n\n    _defineProperty(this, \"normalMatrix\", new Matrix3());\n\n    this.renderer = renderer;\n    this.autoDestroy = parameters.autoDestroy === undefined ? false : parameters.autoDestroy;\n    this.duration = (_parameters$duration = parameters.duration) !== null && _parameters$duration !== void 0 ? _parameters$duration : 1;\n    this.maxParticle = (_parameters$maxPartic = parameters.maxParticle) !== null && _parameters$maxPartic !== void 0 ? _parameters$maxPartic : 100;\n    this.looping = parameters.looping === undefined ? true : parameters.looping;\n    this.startLife = (_parameters$startLife = parameters.startLife) !== null && _parameters$startLife !== void 0 ? _parameters$startLife : new ConstantValue(5);\n    this.startSpeed = (_parameters$startSpee = parameters.startSpeed) !== null && _parameters$startSpee !== void 0 ? _parameters$startSpee : new ConstantValue(0);\n    this.startRotation = (_parameters$startRota = parameters.startRotation) !== null && _parameters$startRota !== void 0 ? _parameters$startRota : new ConstantValue(0);\n    this.startSize = (_parameters$startSize = parameters.startSize) !== null && _parameters$startSize !== void 0 ? _parameters$startSize : new ConstantValue(1);\n    this.startColor = (_parameters$startColo = parameters.startColor) !== null && _parameters$startColo !== void 0 ? _parameters$startColo : new ConstantColor(new Vector4(1, 1, 1, 1));\n    this.emissionOverTime = (_parameters$emissionO = parameters.emissionOverTime) !== null && _parameters$emissionO !== void 0 ? _parameters$emissionO : new ConstantValue(10);\n    this.emissionOverDistance = (_parameters$emissionO2 = parameters.emissionOverDistance) !== null && _parameters$emissionO2 !== void 0 ? _parameters$emissionO2 : new ConstantValue(0);\n    this.emissionBursts = (_parameters$emissionB = parameters.emissionBursts) !== null && _parameters$emissionB !== void 0 ? _parameters$emissionB : [];\n    this.emitterShape = (_parameters$shape = parameters.shape) !== null && _parameters$shape !== void 0 ? _parameters$shape : new SphereEmitter();\n    this.behaviors = (_parameters$behaviors = parameters.behaviors) !== null && _parameters$behaviors !== void 0 ? _parameters$behaviors : new Array();\n    this.worldSpace = (_parameters$worldSpac = parameters.worldSpace) !== null && _parameters$worldSpac !== void 0 ? _parameters$worldSpac : false;\n    this.speedFactor = (_parameters$speedFact = parameters.speedFactor) !== null && _parameters$speedFact !== void 0 ? _parameters$speedFact : 0;\n    this.rendererSettings = {\n      blending: (_parameters$blending = parameters.blending) !== null && _parameters$blending !== void 0 ? _parameters$blending : NormalBlending,\n      instancingGeometry: (_parameters$instancin = parameters.instancingGeometry) !== null && _parameters$instancin !== void 0 ? _parameters$instancin : DEFAULT_GEOMETRY,\n      renderMode: (_parameters$renderMod = parameters.renderMode) !== null && _parameters$renderMod !== void 0 ? _parameters$renderMod : RenderMode.BillBoard,\n      renderOrder: (_parameters$renderOrd = parameters.renderOrder) !== null && _parameters$renderOrd !== void 0 ? _parameters$renderOrd : 0,\n      texture: parameters.texture,\n      uTileCount: (_parameters$uTileCoun = parameters.uTileCount) !== null && _parameters$uTileCoun !== void 0 ? _parameters$uTileCoun : 1,\n      vTileCount: (_parameters$vTileCoun = parameters.vTileCount) !== null && _parameters$vTileCoun !== void 0 ? _parameters$vTileCoun : 1\n    };\n    this.neededToUpdateRender = true;\n    this.particles = new Array();\n    this.startTileIndex = parameters.startTileIndex || 0;\n    this.emitter = new ParticleEmitter(this);\n    this.particleNum = 0;\n    this.burstIndex = 0;\n    this.burstWaveIndex = 0;\n    this.time = 0;\n    this.paused = false;\n    this.waitEmiting = 0;\n    this.emitEnded = false;\n    this.markForDestroy = false;\n    this.renderer.addSystem(this);\n  }\n\n  _createClass(ParticleSystem, [{\n    key: \"texture\",\n    get: // parameters\n    // runtime data\n    function get() {\n      return this.rendererSettings.texture;\n    },\n    set: function set(texture) {\n      this.rendererSettings.texture = texture;\n      this.neededToUpdateRender = true; //this.emitter.material.uniforms.map.value = texture;\n    }\n  }, {\n    key: \"uTileCount\",\n    get: function get() {\n      return this.rendererSettings.uTileCount;\n    },\n    set: function set(u) {\n      this.rendererSettings.uTileCount = u;\n      this.neededToUpdateRender = true; //this.emitter.material.uniforms.tileCount.value.x = u;\n    }\n  }, {\n    key: \"vTileCount\",\n    get: function get() {\n      return this.rendererSettings.vTileCount;\n    },\n    set: function set(v) {\n      this.rendererSettings.vTileCount = v;\n      this.neededToUpdateRender = true;\n    }\n  }, {\n    key: \"renderMode\",\n    get: function get() {\n      return this.rendererSettings.renderMode;\n    },\n    set: function set(renderMode) {\n      this.rendererSettings.renderMode = renderMode;\n      this.neededToUpdateRender = true; //this.emitter.rebuildMaterial();\n    }\n  }, {\n    key: \"renderOrder\",\n    get: function get() {\n      return this.rendererSettings.renderOrder;\n    },\n    set: function set(renderOrder) {\n      this.rendererSettings.renderOrder = renderOrder;\n      this.neededToUpdateRender = true; //this.emitter.rebuildMaterial();\n    }\n  }, {\n    key: \"blending\",\n    get: function get() {\n      return this.rendererSettings.blending;\n    },\n    set: function set(blending) {\n      this.rendererSettings.blending = blending;\n      this.neededToUpdateRender = true;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.paused = true;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.paused = false;\n    }\n  }, {\n    key: \"spawn\",\n    value: function spawn(count) {\n      for (var i = 0; i < count && this.particleNum < this.maxParticle; i++) {\n        this.particleNum++;\n\n        while (this.particles.length < this.particleNum) {\n          this.particles.push(new Particle());\n        }\n\n        var particle = this.particles[this.particleNum - 1];\n        this.startColor.genColor(particle.startColor, this.time);\n        particle.color.copy(particle.startColor);\n        particle.startSpeed = this.startSpeed.genValue(this.time);\n        particle.life = this.startLife.genValue(this.time);\n        particle.age = 0;\n        particle.rotation = this.startRotation.genValue(this.time);\n        particle.startSize = particle.size = this.startSize.genValue(this.time);\n        particle.uvTile = this.startTileIndex;\n        this.emitterShape.initialize(particle);\n\n        if (this.worldSpace) {\n          particle.position.applyMatrix4(this.emitter.matrixWorld);\n          particle.velocity.applyMatrix3(this.normalMatrix);\n        }\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].initialize(particle);\n        }\n      }\n    }\n  }, {\n    key: \"endEmit\",\n    value: function endEmit() {\n      this.emitEnded = true;\n\n      if (this.autoDestroy) {\n        this.markForDestroy = true;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderer.deleteSystem(this);\n      this.emitter.dispose();\n      if (this.emitter.parent) this.emitter.parent.remove(this.emitter);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.paused = false;\n      this.particleNum = 0;\n      this.burstIndex = 0;\n      this.burstWaveIndex = 0;\n      this.time = 0;\n      this.waitEmiting = 0;\n      this.emitEnded = false;\n      this.markForDestroy = false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (delta > 0.1) delta = 0.1;\n      if (this.paused) return;\n\n      if (this.emitEnded && this.particleNum === 0) {\n        if (this.markForDestroy && this.emitter.parent) this.dispose();\n        return;\n      }\n\n      if (this.time > this.duration) {\n        if (this.looping) {\n          this.time -= this.duration;\n        } else {\n          if (!this.emitEnded) {\n            this.endEmit();\n          }\n        }\n      }\n\n      if (this.neededToUpdateRender) {\n        this.renderer.updateSystem(this);\n        this.neededToUpdateRender = false;\n      }\n\n      this.normalMatrix.getNormalMatrix(this.emitter.matrixWorld); // particle die\n\n      for (var i = 0; i < this.particleNum; i++) {\n        var particle = this.particles[i];\n\n        if (particle.age >= particle.life) {\n          this.particles[i] = this.particles[this.particleNum - 1];\n          this.particles[this.particleNum - 1] = particle;\n          this.particleNum--;\n          i--;\n        }\n      } // spawn\n\n\n      if (!this.emitEnded) {\n        var totalSpawn = Math.ceil(this.waitEmiting);\n        this.spawn(totalSpawn);\n        this.waitEmiting -= totalSpawn;\n      } // spawn burst\n\n\n      while (this.burstIndex < this.emissionBursts.length && this.emissionBursts[this.burstIndex].time <= this.time) {\n        if (Math.random() < this.emissionBursts[this.burstIndex].probability) {\n          var count = this.emissionBursts[this.burstIndex].count;\n          this.spawn(count);\n        }\n\n        this.burstIndex++;\n      }\n\n      for (var _i = 0; _i < this.particleNum; _i++) {\n        var _particle = this.particles[_i];\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].update(_particle, delta);\n        }\n\n        _particle.position.addScaledVector(_particle.velocity, delta);\n\n        _particle.age += delta;\n      } //this.emitter.update();\n\n\n      this.oldWorldMatrix.copy(this.emitter.matrixWorld);\n\n      if (!this.emitEnded) {\n        this.waitEmiting += delta * this.emissionOverTime.genValue(this.time / this.duration);\n      }\n\n      this.time += delta;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      this.texture.toJSON(meta);\n\n      if (this.texture.image !== undefined) {\n        var image = this.texture.image;\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: this.texture.name\n        };\n      }\n\n      return {\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.toJSON(),\n        startLife: this.startLife.toJSON(),\n        startSpeed: this.startSpeed.toJSON(),\n        startRotation: this.startRotation.toJSON(),\n        startSize: this.startSize.toJSON(),\n        startColor: this.startColor.toJSON(),\n        emissionOverTime: this.emissionOverTime.toJSON(),\n        emissionOverDistance: this.emissionOverDistance.toJSON(),\n        emissionBursts: this.emissionBursts,\n        instancingGeometry: this.rendererSettings.instancingGeometry.toJSON(),\n        //Array.from(this.emitter.interleavedBuffer.array as Float32Array),\n        renderOrder: this.renderOrder,\n        renderMode: this.renderMode,\n        speedFactor: this.renderMode === RenderMode.StretchedBillBoard ? this.speedFactor : 0,\n        texture: this.texture.uuid,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: this.behaviors.map(function (behavior) {\n          return behavior.toJSON();\n        }),\n        worldSpace: this.worldSpace\n      };\n    }\n  }, {\n    key: \"addBehavior\",\n    value: function addBehavior(behavior) {\n      this.behaviors.push(behavior);\n    }\n  }, {\n    key: \"getRendererSettings\",\n    value: function getRendererSettings() {\n      return this.rendererSettings;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newEmissionBursts = [];\n\n      var _iterator = _createForOfIteratorHelper(this.emissionBursts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var emissionBurst = _step.value;\n          var newEmissionBurst = {};\n          Object.assign(newEmissionBurst, emissionBurst);\n          newEmissionBursts.push(newEmissionBurst);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var newBehaviors = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.behaviors),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var behavior = _step2.value;\n          newBehaviors.push(behavior.clone());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return new ParticleSystem(this.renderer, {\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.clone(),\n        startLife: this.startLife.clone(),\n        startSpeed: this.startSpeed.clone(),\n        startRotation: this.startRotation.clone(),\n        startSize: this.startSize.clone(),\n        startColor: this.startColor.clone(),\n        emissionOverTime: this.emissionOverTime.clone(),\n        emissionOverDistance: this.emissionOverDistance.clone(),\n        emissionBursts: newEmissionBursts,\n        instancingGeometry: this.rendererSettings.instancingGeometry,\n        //.interleavedBuffer.array,\n        renderMode: this.renderMode,\n        speedFactor: this.speedFactor,\n        texture: this.texture,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: newBehaviors,\n        worldSpace: this.worldSpace\n      });\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json, textures, renderer) {\n      var shape;\n\n      switch (json.shape.type) {\n        case 'cone':\n          shape = new ConeEmitter(json.shape);\n          break;\n\n        case 'donut':\n          shape = new DonutEmitter(json.shape);\n          break;\n\n        case 'point':\n          shape = new PointEmitter();\n          break;\n\n        case 'sphere':\n          shape = new SphereEmitter(json.shape);\n          break;\n\n        default:\n          shape = new PointEmitter();\n          break;\n      }\n\n      return new ParticleSystem(renderer, {\n        autoDestroy: json.autoDestroy,\n        looping: json.looping,\n        duration: json.duration,\n        maxParticle: json.maxParticle,\n        shape: shape,\n        startLife: ValueGeneratorFromJSON(json.startLife),\n        startSpeed: ValueGeneratorFromJSON(json.startSpeed),\n        startRotation: ValueGeneratorFromJSON(json.startRotation),\n        startSize: ValueGeneratorFromJSON(json.startSize),\n        startColor: ColorGeneratorFromJSON(json.startColor),\n        emissionOverTime: ValueGeneratorFromJSON(json.emissionOverTime),\n        emissionOverDistance: ValueGeneratorFromJSON(json.emissionOverDistance),\n        emissionBursts: json.emissionBursts,\n        //instancingGeometry: json.instancingGeometry, //TODO: Support instancing Geometry in deserialization\n        renderMode: json.renderMode,\n        renderOrder: json.renderOrder,\n        speedFactor: json.speedFactor,\n        texture: textures[json.texture],\n        startTileIndex: json.startTileIndex,\n        uTileCount: json.uTileCount,\n        vTileCount: json.vTileCount,\n        blending: json.blending,\n        behaviors: json.behaviors.map(function (behavior) {\n          return BehaviorFromJSON(behavior);\n        }),\n        worldSpace: json.worldSpace\n      });\n    }\n  }]);\n\n  return ParticleSystem;\n}();\n\nvar BatchedParticleRenderer = /*#__PURE__*/function (_Object3D) {\n  _inherits(BatchedParticleRenderer, _Object3D);\n\n  var _super = _createSuper(BatchedParticleRenderer);\n\n  function BatchedParticleRenderer() {\n    var _this;\n\n    _classCallCheck(this, BatchedParticleRenderer);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"batches\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"BatchedParticleRenderer\");\n\n    return _this;\n  }\n\n  _createClass(BatchedParticleRenderer, [{\n    key: \"addSystem\",\n    value: function addSystem(system) {\n      var settings = system.getRendererSettings();\n\n      for (var i = 0; i < this.batches.length; i++) {\n        if (BatchedParticleRenderer.equals(this.batches[i].settings, settings)) {\n          this.batches[i].addSystem(system);\n          return;\n        }\n      }\n\n      var batch = new ParticleSystemBatch(settings);\n      batch.addSystem(system);\n      this.batches.push(batch);\n      this.add(batch);\n    }\n  }, {\n    key: \"deleteSystem\",\n    value: function deleteSystem(system) {\n      var settings = system.getRendererSettings();\n\n      for (var i = 0; i < this.batches.length; i++) {\n        if (BatchedParticleRenderer.equals(this.batches[i].settings, settings)) {\n          this.batches[i].removeSystem(system);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"updateSystem\",\n    value: function updateSystem(system) {}\n  }, {\n    key: \"update\",\n    value: function update() {\n      for (var i = 0; i < this.batches.length; i++) {\n        this.batches[i].update();\n      }\n    }\n  }], [{\n    key: \"equals\",\n    value: function equals(a, b) {\n      return a.texture === b.texture && a.blending === b.blending && a.renderMode === b.renderMode && a.uTileCount === b.uTileCount && a.vTileCount === b.vTileCount && a.instancingGeometry === b.instancingGeometry && a.renderOrder === b.renderOrder;\n    }\n  }]);\n\n  return BatchedParticleRenderer;\n}(Object3D);\n\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  //SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipMapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipMapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipMapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipMapLinearFilter\n};\nvar QuarksLoader = /*#__PURE__*/function () {\n  function QuarksLoader(manager) {\n    _classCallCheck(this, QuarksLoader);\n\n    _defineProperty(this, \"manager\", void 0);\n\n    _defineProperty(this, \"crossOrigin\", \"anonymous\");\n\n    _defineProperty(this, \"path\", void 0);\n\n    _defineProperty(this, \"resourcePath\", void 0);\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.resourcePath = '';\n  }\n\n  _createClass(QuarksLoader, [{\n    key: \"setPath\",\n    value: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  }, {\n    key: \"setResourcePath\",\n    value: function setResourcePath(value) {\n      this.resourcePath = value;\n      return this;\n    }\n  }, {\n    key: \"setCrossOrigin\",\n    value: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, renderer, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === undefined ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(scope.manager);\n      if (this.path) loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad, renderer);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(loader, url) {\n      var scope = this;\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    }\n  }, {\n    key: \"parseImages\",\n    value: function parseImages(json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n              images[image.uuid].push(this.loadImage(loader, path));\n            }\n          } else {\n            // load single image\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n            images[image.uuid] = this.loadImage(loader, path);\n          }\n        }\n      }\n\n      return images;\n    }\n  }, {\n    key: \"parseTextures\",\n    value: function parseTextures(json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture;\n\n          if (Array.isArray(images[data.image])) {\n            texture = new CubeTexture(images[data.image]);\n          } else {\n            texture = new Texture(images[data.image]);\n          }\n\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.type !== undefined) texture.type = data.type;\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    }\n  }, {\n    key: \"parseObject\",\n    value: function parseObject(data, textures, renderer) {\n      var object;\n\n      switch (data.type) {\n        case 'ParticleEmitter':\n          object = ParticleSystem.fromJSON(data.ps, textures, renderer).emitter;\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], textures, renderer));\n        }\n      }\n\n      return object;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json, onLoad, renderer) {\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var object = this.parseObject(json.object, textures, renderer);\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    }\n  }]);\n\n  return QuarksLoader;\n}();\n\nvar Gradient = /*#__PURE__*/function (_PiecewiseFunction) {\n  _inherits(Gradient, _PiecewiseFunction);\n\n  var _super = _createSuper(Gradient);\n\n  // default linear bezier\n  function Gradient() {\n    var _this;\n\n    var functions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new ColorRange(new Vector4(0, 0, 0, 1), new Vector4(1, 1, 1, 1)), 0]];\n\n    _classCallCheck(this, Gradient);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _this.type = \"function\";\n    _this.functions = functions;\n    return _this;\n  }\n\n  _createClass(Gradient, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return color.copy(this.functions[0][0].a);\n      }\n\n      return this.getFunction(index).genColor(color, (t - this.getStartX(index)) / (this.getEndX(index) - this.getStartX(index)));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"Gradient\",\n        functions: this.functions.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              range = _ref2[0],\n              start = _ref2[1];\n\n          return {\n            \"function\": range.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Gradient(this.functions.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            range = _ref4[0],\n            start = _ref4[1];\n\n        return [range.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Gradient(json.functions.map(function (piecewiseFunction) {\n        return [ColorRange.fromJSON(piecewiseFunction[\"function\"]), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return Gradient;\n}(PiecewiseFunction);\n\nexport { BatchedParticleRenderer, BehaviorFromJSON, Bezier, ColorGeneratorFromJSON, ColorOverLife, ColorRange, ConeEmitter, ConstantColor, ConstantValue, DonutEmitter, FrameOverLife, Gradient, IntervalValue, OrbitOverLife, Particle, ParticleEmitter, ParticleSystem, ParticleSystemBatch, PiecewiseBezier, PiecewiseFunction, PointEmitter, QuarksLoader, RandomColor, RenderMode, RotationOverLife, SizeOverLife, SpeedOverLife, SphereEmitter, ValueGeneratorFromJSON };\n","import {AdditiveBlending, Group, NormalBlending, Texture, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, ColorOverLife, ParticleSystem, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ToonProjectile extends Group {\n    private particles: ParticleSystem;\n    private smoke: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private mainBeam: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.name = 'mainBeam';\n\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(3.5),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(2, 5),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 4.8423 / 180 * Math.PI,\n                radius: .3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .01,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n\n        this.add(this.particles.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            startLife: new IntervalValue(0.25, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(.75, 1.25),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new SphereEmitter({\n                radius: .2,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.name = 'smoke';\n\n        this.add(this.smoke.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    ColorOverLife,\n    ParticleSystem,\n    PointEmitter,\n    RenderMode,\n    RotationOverLife\n} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class BulletMuzzle extends Group {\n    private beam: ParticleSystem;\n    private muzzle1: ParticleSystem;\n    private muzzle2: ParticleSystem;\n    private flash: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.585716, 0.1691176, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        const muzzle = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard,\n            renderOrder: 2,\n        };\n\n        this.muzzle1 = new ParticleSystem(renderer, muzzle);\n        this.muzzle1.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle1.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle1.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle1.emitter.name = 'muzzle1';\n        this.muzzle1.emitter.position.x = 1;\n        this.add(this.muzzle1.emitter);\n\n        this.muzzle2 = new ParticleSystem(renderer, muzzle);\n        this.muzzle2.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle2.emitter.renderOrder = 2;\n        this.muzzle2.emitter.name = 'muzzle2';\n        this.muzzle2.emitter.position.x = 1;\n        this.muzzle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.muzzle2.emitter);\n\n        this.flash = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.flash.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.95, 0.82, 1), new Vector4(1, 0.38, 0.12, 1))));\n        this.flash.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(81, 84.333, 87.666, 91), 0]])));\n        this.flash.emitter.name = 'flash';\n        this.add(this.flash.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.smoke.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.rotation.y = Math.PI / 2;\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(1, 15),\n            startSize: new IntervalValue(0.1, 0.3),\n            startColor: new RandomColor(new Vector4(1, 0.91, 0.51, 1), new Vector4(1, 0.44, 0.16, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.emitter.name = 'particles';\n        this.particles.emitter.rotation.y = Math.PI / 2;\n        this.add(this.particles.emitter);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.muzzle1.update(delta);\n        this.muzzle2.update(delta);\n        this.flash.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\n\nexport class BulletProjectile extends Group {\n    private hProjectile: ParticleSystem;\n    private vProjectile: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer) {\n        super();\n\n        const texture = new TextureLoader().load( \"textures/projectile.png\");\n        texture.name = \"textures/projectile.png\";\n\n        const projectileParam = {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 4),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(1),\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 1,\n            vTileCount: 1,\n            /*instancingGeometry: [\n                -2, -0.5, 0, 0, 0,\n                2, -0.5, 0, 1, 0,\n                2, 0.5, 0, 1, 1,\n                -2, 0.5, 0, 0, 1\n            ],*/\n            renderMode: RenderMode.LocalSpaceBillBoard,\n            renderOrder: 2,\n        };\n\n        this.hProjectile = new ParticleSystem(renderer, projectileParam);\n        this.hProjectile.emitter.name = 'hProjectile';\n        this.add(this.hProjectile.emitter);\n\n        this.vProjectile = new ParticleSystem(renderer, projectileParam);\n        this.vProjectile.emitter.name = 'vProjectile';\n        this.vProjectile.emitter.rotation.x = Math.PI / 2;\n        this.add(this.vProjectile.emitter);\n    }\n\n    update(delta: number) {\n        this.hProjectile.update(delta);\n        this.vProjectile.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ToonExplosion extends Group {\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(5, 15),\n            startSize: new IntervalValue(1.5, 1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 25 * Math.PI / 180,\n                radius: 0.2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(0.7, 1.5),\n            startSize: new IntervalValue(0.4, 0.8),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 80 * Math.PI / 180,\n                radius: 0.25,\n                thickness: 0.5,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n        this.beam.update(delta);\n        this.circle.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class LevelUp extends Group {\n\n    private gatherParticles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glow2: ParticleSystem;\n    private particle: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n        this.name = 'levelUp';\n\n        const texture = textures[0].texture;\n\n        const yellow = new Vector4(.8,.8,.2, 1);\n\n        this.gatherParticles = new ParticleSystem(renderer, {\n            duration: 0.5,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(100),\n            shape: new SphereEmitter({\n                radius: 60,\n                thickness: .8,\n                arc: Math.PI\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.05,\n            renderOrder: 2,\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(.2, .2, .2, 1), new Vector4(1, 1, 1, 1))));\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.add(this.gatherParticles.emitter);\n\n        const glowParam = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(120, 160),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard,\n            renderOrder: 0,\n        };\n\n        this.glow = new ParticleSystem(renderer, glowParam);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.glow.emitter);\n\n\n        const glow2Param = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 0,\n        };\n\n        this.glow2 = new ParticleSystem(renderer, glow2Param);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1), 0], [new Bezier(1, 0.90, 0.75, 0), 0.2]])));\n        this.glow2.emitter.name = 'glow2';\n        this.add(this.glow2.emitter);\n\n        const particleParam = {\n            duration: 1.0,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(120, 180),\n            startSize: new IntervalValue(2, 4),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new PiecewiseBezier([[new Bezier(0, 0, 0, 0), 0], [new Bezier(50, 80, 80, 50), 0.4]]),\n            /*emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],*/\n            shape: new ConeEmitter({\n                radius: 25,\n                thickness: 0.2,\n                angle: Math.PI / 100\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            //speedFactor: 0.1,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        };\n\n        this.particle = new ParticleSystem(renderer, particleParam);\n        this.particle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.particle.addBehavior(new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, Math.PI * 4* 0.75, Math.PI * 4 * 0.90, Math.PI * 4),0]])));\n        this.particle.emitter.name = 'particle';\n        this.particle.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.particle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.gatherParticles.update(delta);\n        this.glow.update(delta);\n        this.glow2.update(delta);\n        this.particle.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipSmoke extends Group {\n\n    private smoke: ParticleSystem;\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n        this.name = 'shipSmoke';\n\n        const texture = textures[0].texture;\n\n        const grey = new Vector4(.5, .5, .5, 1);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 5,\n            looping: true,\n            startLife: new IntervalValue(1.5, 3),\n            startSpeed: new IntervalValue(20, 30),\n            startSize: new IntervalValue(10, 15),\n            startColor: new ConstantColor(grey),\n            worldSpace: true,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new ConeEmitter({\n                radius: 10,\n                thickness: 1,\n                angle: 0.2\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(.8, .8, .8, 0))));\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.2, 1, 1, 1), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.smoke.emitter);\n    }\n\n    update(delta: number) {\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ElectricBall extends Group {\n    private beam: ParticleSystem;\n    private beamWorld: ParticleSystem;\n    private electricity: ParticleSystem;\n    private electricBall: ParticleSystem;\n    /*private sparks: ParticleSystem;*/\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n        this.name = 'ElectricBall';\n\n        const texture2 = textures[1].texture;\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(15.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.beamWorld = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(7.5, 15),\n            startColor: new RandomColor(new Vector4(0.1397059 * 0.8, 0.3592291 * 0.8, 1 * 0.8, 1), new Vector4(1 * 0.8, 0.9275356 * 0.8, 0.1029412 * 0.8, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n            shape: new SphereEmitter({\n                radius: 0.01,\n                thickness: 1,\n                arc: Math.PI * 2\n            }),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beamWorld.emitter.name = 'beamWorld';\n        this.beamWorld.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0))));\n        this.add(this.beamWorld.emitter);\n\n        this.electricity = new ParticleSystem(renderer, {\n            duration: 0.5,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(3, 6),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        //this.electricity.addBehavior(new ColorOverLife(([[new Bezier(61, 64, 67, 70), 0]])));\n        this.electricity.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(53, 56, 59, 62), 0]])));\n        this.electricity.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1.0, 1.0, 0.75, 0), 0]])));\n        this.electricity.emitter.name = 'electricity';\n        this.add(this.electricity.emitter);\n\n        this.electricBall = new ParticleSystem(renderer, {\n            duration: 0.4,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(5, 10),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(3),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 1,\n        });\n        this.electricBall.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(62, 65, 68, 71), 0]])));\n        this.electricBall.emitter.name = 'electricBall';\n        this.add(this.electricBall.emitter);\n        /*\n        this.sparks = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n*/\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.beamWorld.update(delta);\n        this.electricity.update(delta);\n        this.electricBall.update(delta);\n        /*this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.circle.update(delta);*/\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, ColorOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipTrail extends Group {\n    private particles: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private beam: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(20.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.add(this.beam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(10),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: true,\n\n            maxParticle: 500,\n            emissionOverTime: new ConstantValue(120),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 1.0, 0.8, 0.5), 0]])));\n        this.glowBeam.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1,1,1,1), new Vector4(0,0,0,0))));\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(20, 40),\n            startSize: new IntervalValue(1, 2),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(0.5220588, 0.6440161, 1, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 80 / 180 * Math.PI,\n                radius: 1,\n                thickness: 0.3,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .2,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 200;\\n\" +\n                \"    if (this.position.x > 200)\\n\" +\n                \"        this.position.x = -200;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, Scene, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    Bezier, ColorOverLife, ColorRange, ConstantColor,\n    ConstantValue, FrameOverLife,\n    IntervalValue,\n    ParticleSystem,\n    PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, RotationOverLife,\n    SizeOverLife, SpeedOverLife,\n    SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Explosion2 extends Group {\n\n    static yellowColor = new Vector4(0.9, 0.60, 0.25, 1);\n    static yellowColor2 = new Vector4(1, 0.95, 0.4, 1);\n\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private circle: ParticleSystem;\n    private circle2: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n        const mainColor = Explosion2.yellowColor;\n        const secColor = Explosion2.yellowColor2;\n\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(100, 300),\n            startSize: new IntervalValue(1.5, 12.5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(20, 45),\n            startSize: new IntervalValue(4, 8),\n            startColor: new ConstantColor(mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.8, 1.2),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new IntervalValue(10, 15),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 7.5,\n                arc: Math.PI,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(mainColor, new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.addBehavior(new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(40, 200),\n            startSize: new IntervalValue(1, 4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n\n        this.circle2 = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard,\n            renderOrder: 2,\n        });\n        this.circle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle2.emitter.name = 'circle';\n        this.circle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.circle2.emitter);\n    }\n\n    update(delta: number) {\n        //delta /= 1000;\n        this.beam.update(delta);\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.circle.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n        this.circle2.update(delta);\n    }\n}\n","import {\n    AdditiveBlending,\n    ConeBufferGeometry,\n    CylinderBufferGeometry,\n    Group,\n    NormalBlending,\n    TextureLoader,\n    Vector4\n} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    ColorOverLife,\n    ParticleSystem,\n    PointEmitter,\n    RenderMode,\n    RotationOverLife\n} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class EnergyRifleMuzzle extends Group {\n    private particles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glowTop: ParticleSystem;\n    //private ringTop: ParticleSystem;\n    private ringBase: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer,textures: TextureImage[]) {\n        super();\n\n        const texture = textures[1].texture;\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new ConstantValue(2),\n            startColor: new ConstantColor(new Vector4(0.5, 0.5, 0.5, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 24,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({angle: .2, radius: 5}),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n            renderOrder: 0,\n        });\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0.8, 1, 1))));\n        this.add(this.particles.emitter);\n\n        const glow = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(new Vector4(0, 0.3, 0.3, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        };\n\n        this.glow = new ParticleSystem(renderer, glow);\n        this.glow.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1))));\n        //this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.position.x = 1;\n        this.add(this.glow.emitter);\n\n        this.glowTop = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0, 50),\n            startSize: new IntervalValue(40, 60),\n            startRotation: new ConstantValue(0),\n            startColor: new ConstantColor(new Vector4(0, 0.2, 0.2, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({angle: .01, radius: 1}),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.glowTop.emitter.name = 'glowTop';\n        this.glowTop.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)), 0],\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1)), 0.5],\n        ])));\n        //this.glowTop.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.glowTop.emitter);\n\n        /*\n        this.ringTop = new ParticleSystem(renderer, {\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.ringTop.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.ringTop.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.ringTop.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.ringTop.emitter.renderOrder = -2;\n        this.ringTop.emitter.name = 'smoke';\n        this.ringTop.emitter.rotation.y = Math.PI / 2;\n        this.add(this.ringTop.emitter);\n*/\n        const coneBufferGeometry = new CylinderBufferGeometry(10, 6, 4, 16, 1, true);\n        coneBufferGeometry.rotateX(Math.PI / 2);\n        /*console.log(coneBufferGeometry.getIndex()!.array);\n        console.log(coneBufferGeometry.getAttribute('position').array);\n        console.log(coneBufferGeometry.getAttribute('uv').array);*/\n\n\n        this.ringBase = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.8),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(0, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            instancingGeometry: coneBufferGeometry,\n            renderMode: RenderMode.LocalSpaceBillBoard,\n            renderOrder: 1,\n        });\n        this.ringBase.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)), 0],\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1)), 0.5],\n        ])));\n        this.ringBase.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.5, 0.75, 0.95, 1), 0]])));\n        this.ringBase.emitter.name = 'ringBase';\n        //this.ringBase.emitter.rotation.y = Math.PI / 2;\n        this.add(this.ringBase.emitter);\n    }\n\n    update(delta: number) {\n        //this.ringTop.update(delta);\n        this.ringBase.update(delta);\n        this.glowTop.update(delta);\n        this.glow.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {\n    ConstantValue,\n    ParticleSystem,\n    ConstantColor,\n    PointEmitter,\n    SphereEmitter,\n    OrbitOverLife,\n    PiecewiseBezier, Gradient, ColorRange, ColorOverLife, Bezier, BatchedParticleRenderer\n} from \"three.quarks\";\nimport {Group, Vector4} from \"three\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Blackhole extends Group {\n    private beam: ParticleSystem;\n    private particles: ParticleSystem;\n    private ring: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer,{\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(new Vector4(0, 0, 0, 1)),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: 1,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: 0,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.beam.emitter.rotation.set(0, 0, 0);\n        this.add(this.beam.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(3),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n            maxParticle: 10000,\n            emissionOverTime: new ConstantValue(8),\n            emissionBursts: [],\n            shape: new SphereEmitter({\n                radius: 18,\n                arc: Math.PI * 2,\n                thickness: 0.01\n            }),\n            texture: texture,\n            blending: 2,\n            startTileIndex: 4,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: 0,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new OrbitOverLife(new ConstantValue(1)));\n        this.particles.addBehavior(new ColorOverLife(new Gradient([[new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1)),0],\n            [new ColorRange(new Vector4(1,1,1,1), new Vector4(1,1,1,1)),0.2],\n            [new ColorRange(new Vector4(1,1,1,1), new Vector4(0,0,0,1)),0.8]\n        ])));\n        this.particles.emitter.name = 'particles';\n        this.particles.emitter.rotation.set(0, 0, 0);\n        this.add(this.particles.emitter);\n\n        this.ring = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(30),\n            startColor: new ConstantColor(new Vector4(0.9254901960784314, 0.788235294117647, 0.1607843137254902, 1)),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: 2,\n            startTileIndex: 4,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: 0,\n            renderOrder: 0,\n        });\n        this.ring.emitter.name = 'ring';\n        this.ring.emitter.rotation.set(0, 0, 0);\n        this.add(this.ring.emitter);\n\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.particles.update(delta);\n        this.ring.update(delta);\n    }\n}\n","import * as React from \"react\";\nimport * as THREE from \"three\";\nimport {Object3D, Scene, Texture} from \"three\";\nimport {ParticleEmitter, QuarksLoader} from \"three.quarks\";\nimport {TextureLoader} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {AdditiveBlending} from \"three\";\nimport {Mesh} from \"three\";\nimport {BoxBufferGeometry} from \"three\";\nimport {MeshStandardMaterial} from \"three\";\nimport {ToonProjectile} from \"../example/ToonProjectile\";\nimport {Color} from \"three\";\nimport {AxesHelper} from \"three\";\nimport {PointLight} from \"three\";\nimport {AmbientLight} from \"three\";\nimport {BulletMuzzle} from \"../example/BulletMuzzle\";\nimport {BulletProjectile} from \"../example/BulletProjectile\";\nimport {ToonExplosion} from \"../example/ToonExplosion\";\nimport {LevelUp} from \"../example/LevelUp\";\nimport {ShipSmoke} from \"../example/ShipSmoke\";\nimport {ElectricBall} from \"../example/ElectricBall\";\nimport {ShipTrail} from \"../example/ShipTrail\";\nimport {Explosion2} from \"../example/Explosion2\";\nimport {EnergyRifleMuzzle} from \"../example/EnergyRifleMuzzle\";\nimport {Blackhole} from \"../example/Blackhole\";\nimport {BatchedParticleRenderer} from \"three.quarks\";\n\n\nexport interface TextureImage {\n    img: string,\n    texture: Texture,\n}\n\nexport interface AppContext {\n    scene: THREE.Scene;\n    script: (delta: number) => void;\n    selection: Array<Object3D>;\n    textures: Array<TextureImage>;\n    batchedRenderer?: BatchedParticleRenderer;\n\n    actions: {\n        onOpenDemo: (index: number)=>void;\n        onSaveAs: ()=>void;\n        onImport: (files: FileList)=>void;\n        select: (object: Object3D) => void;\n        selectAddition: (object: Object3D) => void;\n        addObject3d: (type: string, parent: Object3D) => void;\n        removeObject3d: (object: Object3D) => void;\n        duplicateObject3d: (object: Object3D) => void;\n        updateParticleSystem: (object: ParticleEmitter) => void;\n        addTexture: (textureImage: TextureImage) => void;\n        setBatchedRenderer: (renderer: BatchedParticleRenderer) => void;\n    }\n    updateProperties: () => void;\n}\n\nconst ApplicationContext = React.createContext<AppContext | null>(null);\n\ninterface ApplicationContextProviderProps {\n\n}\n\nexport const ApplicationContextConsumer = ApplicationContext.Consumer;\n\nexport class ApplicationContextProvider extends React.Component<ApplicationContextProviderProps, AppContext> {\n\n    textureLoader: TextureLoader;\n\n    addDemo(demoIndex: number) {\n        let demoObject;\n        if (demoIndex === 0) {\n            demoObject = new ToonProjectile(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"Toon Projectile\";\n        } else if (demoIndex === 1) {\n            demoObject = new BulletMuzzle(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"BulletMuzzle\";\n        } else if (demoIndex === 2) {\n            demoObject = new BulletProjectile(this.state.batchedRenderer!);\n            demoObject.name = \"BulletProjectile\";\n        } else if (demoIndex === 3) {\n            demoObject = new ShipSmoke(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"shipSmoke\";\n        } else if (demoIndex === 4) {\n            demoObject = new ToonExplosion(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"ToonExplosion\";\n        } else if (demoIndex === 5) {\n            demoObject = new Blackhole(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"Blackhole\";\n        } else if (demoIndex === 6) {\n            demoObject = new LevelUp(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"LevelUp\";\n        } else if (demoIndex === 7) {\n            demoObject = new EnergyRifleMuzzle(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"EnergyRifleMuzzle\";\n        } else if (demoIndex === 8) {\n            demoObject = new ElectricBall(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"ElectricBall\";\n        } else if (demoIndex === 9){\n            demoObject = new ShipTrail(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"ShipTrail\";\n        } else if (demoIndex === 10) {\n            demoObject = new Explosion2(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"Explosion2\";\n        }\n        if (demoObject)\n            this.state.scene.add(demoObject);\n        this.state.updateProperties();\n    }\n\n    updateProperties1 = () => {\n        this.setState({updateProperties: this.updateProperties2});\n    }\n\n    updateProperties2 = () => {\n        this.setState({updateProperties: this.updateProperties1});\n    }\n\n    constructor(props: Readonly<ApplicationContextProviderProps>) {\n        super(props);\n        this.textureLoader = new TextureLoader();\n        const texture1 = this.textureLoader.load(process.env.PUBLIC_URL + \"/textures/texture1.png\");\n        texture1.name = \"textures/texture1.png\";\n        const texture2 = this.textureLoader.load(process.env.PUBLIC_URL + \"/textures/texture2.png\", ()=>{console.log(texture2);});\n        texture2.name = \"textures/texture2.png\";\n\n\n        const state: AppContext = {\n            scene: new Scene(),\n            script: this.animate,\n            batchedRenderer: undefined,\n            selection: [],\n            textures: [\n                {img: process.env.PUBLIC_URL + '/textures/texture1.png', texture: texture1},\n                {img: process.env.PUBLIC_URL + '/textures/texture2.png', texture: texture2},\n            ],\n            actions: {\n                onOpenDemo: (index: number) => {\n                    this.addDemo(index);\n                    //this.setState({scene: scene});\n                },\n                onSaveAs: () => {\n                    const a = document.createElement(\"a\");\n                    const file = new Blob([JSON.stringify(this.state.scene.toJSON())], {type: \"application/json\"});\n                    a.href = URL.createObjectURL(file);\n                    a.download = \"scene.json\";\n                    a.click();\n                },\n                onImport: (files: FileList) => {\n                    const nFiles = files.length;\n                    for (let nFileId = 0; nFileId < nFiles; nFileId++) {\n                        const jsonURL = URL.createObjectURL( files[nFileId] );\n\n                        const loader = new QuarksLoader();\n                        loader.setCrossOrigin(\"\");\n                        loader.load(jsonURL, this.state.batchedRenderer!, (object3D: Object3D)=>{\n                            this.state.scene.add(object3D);\n                        }, ()=>{}, ()=>{});\n                    }\n                },\n                select: object => {\n                    this.setState({selection: [object]});\n                },\n                selectAddition: object => {\n                    if (this.state.selection.indexOf(object) === -1) {\n                        this.state.selection.push(object);\n                        this.setState({selection: this.state.selection});\n                    }\n                },\n                addObject3d: this.addObject3d,\n                removeObject3d: this.removeObject3d,\n                duplicateObject3d: this.duplicateObject3d,\n                updateParticleSystem: () => {\n                },\n                addTexture: (textureImage: TextureImage) => {\n                    this.state.textures.push(textureImage);\n                    this.setState({textures: this.state.textures});\n                },\n                setBatchedRenderer: (renderer) => {\n                    this.setState({batchedRenderer: renderer});\n                },\n            },\n            updateProperties: this.updateProperties1,\n        };\n\n        this.state = state;\n    }\n\n    removeObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.remove(object3D);\n        }\n    };\n\n    duplicateObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.add(object3D.clone());\n        }\n    }\n\n    addObject3d = (type: string, parent: Object3D) => {\n        let object;\n        switch (type) {\n            case 'particle': {\n                const texture = this.state.textures[0].texture;\n                const particleSystem = new ParticleSystem(this.state.batchedRenderer!, {\n                    maxParticle: 10000,\n                    shape: new ConeEmitter(),\n                    emissionOverTime: new ConstantValue(100),\n                    startLife: new ConstantValue(30),\n                    startSpeed: new ConstantValue(10),\n                    startSize: new ConstantValue(1),\n                    startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n                    texture: texture,\n                    blending: AdditiveBlending,\n                    startTileIndex: 0,\n                    uTileCount: 10,\n                    vTileCount: 10,\n                    worldSpace: true,\n                });\n                object = particleSystem.emitter;\n                this.state.scene.add(object);\n                break;\n            }\n            case 'box':\n                object = new Mesh(new BoxBufferGeometry(10, 10, 10), new MeshStandardMaterial({color: 0xcccccc}));\n                this.state.scene.add(object);\n                break;\n        }\n        if (object) {\n            parent.add(object);\n            this.state.actions.select(object);\n            this.setState({});\n        }\n    };\n\n\n    update = 0;\n    animate = (delta: number) => {\n        /*this.toonProjectile!.position.x += delta * 30;\n        if (this.toonProjectile!.position.x > 20)\n            this.toonProjectile!.position.x = -20;*/\n\n        this.update += delta;\n        if (this.update > 0.1) {\n            //this.state\n            this.update = 0;\n        }\n    };\n\n    render() {\n        //console.log( \"rendering ApplicationContext \");\n        return (\n            <ApplicationContext.Provider value={this.state}>\n                {this.props.children}\n            </ApplicationContext.Provider>\n        )\n    }\n}\n/*\n        this.particleSystem = new ParticleSystem(renderer, {\n            maxParticle: 10000,\n            shape: new ConeEmitter(),\n            emissionOverTime: new ConstantValue(100),\n            startLife: new ConstantValue(30),\n            startSpeed: new ConstantValue(10),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(1,1,1, 1)),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            worldSpace: true,\n        });*/\n//this.particleSystem.emitter.position.set(10, 0, 0);\n//scene.add(this.particleSystem.emitter);\n","import * as React from \"react\";\nimport Stats from \"stats.js\";\nimport {WEBGL} from \"../WebGL\";\nimport {\n    PerspectiveCamera,\n    WebGLRenderer,\n    Clock, Color, AxesHelper, PointLight, AmbientLight,\n} from \"three\";\nimport {RefObject} from \"react\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {BatchedParticleRenderer, ParticleEmitter} from \"three.quarks\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\nimport * as THREE from \"three\";\n\ninterface ThreejsViewportProps {\n    width: number;\n    height: number;\n}\n\nexport class ThreejsViewport extends React.PureComponent<ThreejsViewportProps> {\n    container: RefObject<HTMLDivElement>;\n    stats?: Stats;\n    camera?: PerspectiveCamera;\n    renderer?: WebGLRenderer;\n    batchedRenderer?: BatchedParticleRenderer;\n    private clock?: Clock;\n    private controls?: OrbitControls;\n\n    private appContext?: AppContext;\n\n    constructor(props: Readonly<ThreejsViewportProps>) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    componentDidMount(): void {\n        if ( this.init() ) {\n            this.animate();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ThreejsViewportProps>, prevState: Readonly<any>, snapshot?: any): void {\n        this.camera!.aspect = this.props.width / this.props.height;\n        this.camera!.updateProjectionMatrix();\n        this.renderer!.setSize( this.props.width, this.props.height );\n    }\n\n    init() {\n        if (!this.container.current) {\n            return false;\n        }\n\n        if ( !WEBGL.isWebGLAvailable() ) {\n            document.body.appendChild( WEBGL.getWebGLErrorMessage() );\n            return false;\n        }\n\n        this.renderer = new WebGLRenderer();\n\n        const scene = this.appContext!.scene;\n\n        this.batchedRenderer = new BatchedParticleRenderer();\n        this.batchedRenderer.name = \"batched particle renderer\";\n        this.appContext?.actions.setBatchedRenderer(this.batchedRenderer);\n        scene.add(this.batchedRenderer);\n\n        scene.background = new Color(0x666666);\n\n        const axisHelper = new AxesHelper(100);\n        axisHelper.name = \"axisHelper\";\n        scene.add(axisHelper);\n\n        const light = new PointLight(new Color(1, 1, 1), 0.8, 200);\n        light.position.set(50, 50, 50);\n        scene.add(light);\n\n        const ambientLight = new AmbientLight(new Color(1, 1, 1), 0.2);\n        scene.add(ambientLight);\n\n        /*if ( this.renderer.extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n            document.getElementById( 'notSupported' )!.style.display = '';\n            return false;\n        }*/\n\n        const width = this.props.width;\n        const height = this.props.height;\n\n        this.clock = new Clock();\n\n        this.camera = new PerspectiveCamera( 50, width / height, 1, 1000 );\n        this.camera.position.set(50, 50, 50);\n\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.controls.enableKeys = false;\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.1;\n        this.controls.rotateSpeed = 0.2;\n        this.controls.update();\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( width, height );\n        this.container.current!.appendChild( this.renderer.domElement );\n\n        this.stats = new Stats();\n        this.stats.dom.style.position = \"absolute\";\n        this.stats.dom.style.left = \"\";\n        this.stats.dom.style.right = \"0\";\n        this.container.current!.appendChild( this.stats.dom );\n\n        //window.addEventListener( 'resize', this.onWindowResize, false );\n\n        this.onResize(null);\n\n        return true;\n\n    }\n\n    onResize = (event: any ) => {\n\n        if (this.renderer!.domElement.parentElement!.clientWidth - 10 !== this.renderer!.domElement.width ||\n            this.renderer!.domElement.parentElement!.clientHeight - 10 !== this.renderer!.domElement.height) {\n\n            const newWidth = this.renderer!.domElement.parentElement!.clientWidth - 10;\n            const newHeight = this.renderer!.domElement.parentElement!.clientHeight - 10;\n\n            this.camera!.aspect = newWidth / newHeight;\n            this.camera!.updateProjectionMatrix();\n            this.renderer!.domElement.style.width = '100%';\n            this.renderer!.domElement.style.height = '100%';\n            this.renderer!.setSize(newWidth, newHeight);\n        }\n    };\n\n    animate = () => {\n        requestAnimationFrame( this.animate );\n\n        this.onResize(null);\n        this.renderScene();\n        this.stats!.update();\n    };\n\n    renderScene() {\n        if (this.appContext) {\n            this.controls!.update();\n            const delta = this.clock!.getDelta();\n            //console.log(delta);\n            //let time = performance.now() * 0.0005;\n            //this.particleSystem!.update(this.clock!.getDelta());\n            this.appContext.script(delta);\n            //this.particleSystem!.emitter.rotation.y = this.clock!.getElapsedTime();\n            //this.particleSystem!.emitter.position.set(Math.cos(this.clock!.getElapsedTime()) * 20, 0, Math.sin(this.clock!.getElapsedTime()) * 20);\n            //console.log(this.particleSystem!.emitter.modelViewMatrix);\n\n            this.appContext.scene.traverse(object => {\n                if (object.userData && object.userData.func) {\n                    object.userData.func.call(object, delta);\n                }\n                if (object instanceof ParticleEmitter) {\n                    /*if (object.name === 'muzzle1' && object.system.particleNum > 0) {\n                        console.log(object.system.particles);\n                    }*/\n                    object.system.update(delta);\n                }\n            });\n\n            this.batchedRenderer!.update();\n            this.renderer!.render(this.appContext.scene, this.camera!);\n        }\n    }\n\n    render() {\n        console.log( \"rendering ThreejsViewPort\");\n        return (\n        <ApplicationContextConsumer>\n            { context => {\n                    if (context) {\n                        this.appContext = context;\n                        return <div ref={this.container} style={{width: '100%', height: '100%'}}></div>;\n                    }\n                }\n            }\n        </ApplicationContextConsumer>);\n    }\n}\n","import * as React from 'react';\nimport \"./NumberInput.scss\";\n\ninterface NumberInputProps{\n    value: number;\n    onChange: (value: number)=>void;\n}\n\nexport const NumberInput : React.FC<NumberInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value + '');\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        const x = parseFloat(inputValue);\n        if (x !== props.value)\n            props.onChange(x);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value + '') {\n            setInputValue(props.value + '');\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            const x = parseFloat(inputValue);\n            if (x !== props.value)\n                props.onChange(x);\n        }\n    };\n\n    return <input className=\"number-input\" value={focus? inputValue: props.value} size={5}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {NumberInput} from \"./NumberInput\";\n\ninterface Vector3Props {\n    name: string;\n    x: number;\n    y: number;\n    z: number;\n    onChange: (x: number, y: number, z: number)=>void;\n    unitConversion?: number;\n}\n\nexport class Vector3Editor extends React.PureComponent<Vector3Props> {\n    render() {\n        console.log('rendered Vector3');\n        const {x, y, z, unitConversion = 1, onChange, name} = this.props;\n        return(<div className=\"property\">\n                <label className=\"name\">{name}</label>\n                <label>X:</label><NumberInput value={x * unitConversion} onChange={value => {onChange(value / unitConversion, y, z)}}/>\n                <label>Y:</label><NumberInput value={y * unitConversion} onChange={value => {onChange(x, value / unitConversion, z)}}/>\n                <label>Z:</label><NumberInput value={z * unitConversion} onChange={value => {onChange(x, y, value / unitConversion)}}/>\n            </div>\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringInputProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const StringInput : React.FC<StringInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return <input className=\"string-input\" value={focus? inputValue: props.value} size={20}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\n\n\ninterface ObjectPropertiesProps {\n    object3d: Object3D,\n    updateProperties: ()=>void,\n}\n\ninterface ObjectPropertiesState {\n\n}\n\nexport class ObjectProperties extends React.PureComponent<ObjectPropertiesProps, ObjectPropertiesState> {\n    constructor(props: Readonly<ObjectPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeName = (name: string) => {\n        this.props.object3d.name = name;\n        this.props.updateProperties();\n    };\n    onChangePosition = (x: number, y: number, z: number) => {\n        this.props.object3d.position.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeScale = (x: number, y: number, z: number) => {\n        this.props.object3d.scale.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeRotation = (x: number, y: number, z: number) => {\n        this.props.object3d.rotation.set(x, y, z);\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Name:</label>\n                            <StringInput value={this.props.object3d.name} onChange={this.onChangeName}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Position\" x={this.props.object3d.position.x}\n                                       y={this.props.object3d.position.y} z={this.props.object3d.position.z}\n                                       onChange={this.onChangePosition}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Rotation\" x={this.props.object3d.rotation.x}\n                                       y={this.props.object3d.rotation.y} z={this.props.object3d.rotation.z}\n                                       onChange={this.onChangeRotation} unitConversion={180 / Math.PI}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Scale\" x={this.props.object3d.scale.x}\n                                       y={this.props.object3d.scale.y} z={this.props.object3d.scale.z}\n                                       onChange={this.onChangeScale}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport {ColorResult, SketchPicker} from \"react-color\";\nimport {Vector4} from \"three\";\nimport \"./ColorEditor.scss\";\n\ninterface ColorEditorProps {\n    color: Vector4;\n    onChange: (color: Vector4) => void;\n}\n\nfunction ConvertToColor(color: Vector4) {\n    return `rgba(${((color.x * 255) | 0)},${((color.y * 255) | 0)},${((color.z * 255) | 0)},${color.w})`;\n}\n\nexport const ColorEditor: React.FC<ColorEditorProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const togglePicker = () => {\n        setOpen(!open);\n    };\n\n    const closePicker = () => {\n        setOpen(false);\n    };\n\n    const colorChange = (colorResult: ColorResult) => {\n        const color = new Vector4();\n        color.x = Math.min(255, colorResult.rgb.r) / 255;\n        color.y = Math.min(255, colorResult.rgb.g) / 255;\n        color.z = Math.min(255, colorResult.rgb.b) / 255;\n        color.w = colorResult.rgb.a!;\n        onChange(color);\n    };\n\n    const {color, onChange} = props;\n\n    return (\n        <div className=\"color-editor\">\n            <button style={{backgroundColor: ConvertToColor(color), height: '20px'}} onClick={togglePicker}/>\n            {ConvertToColor(color)}\n            {\n                open ? <div className=\"popover\">\n                    <div className=\"cover\" onClick={closePicker}/>\n                    <SketchPicker\n                        color={{\n                            r: ((color.x * 255) | 0),\n                            g: ((color.y * 255) | 0),\n                            b: ((color.z * 255) | 0),\n                            a: color.w\n                        }}\n                        onChange={colorChange}/>\n                </div> : null\n            }\n        </div>);\n};\n","import React from \"react\";\n\nfunction interp(a: number, b: number, x: number) {\n    return a * (1 - x) + b * x;\n}\n\nexport interface TransformProps {\n    xFrom: number;\n    yFrom: number;\n    xTo: number;\n    yTo: number;\n}\n\nexport class TransformComponent<T extends TransformProps = TransformProps> extends React.Component<T> {\n\n    x = (value: number) => interp(this.props.xFrom, this.props.xTo, value);\n    y = (value: number) => interp(this.props.yFrom, this.props.yTo, value);\n\n    shouldComponentUpdate(nextProps: TransformProps) {\n        const { xFrom, yFrom, xTo, yTo } = this.props;\n        return (\n            nextProps.xFrom !== xFrom ||\n            nextProps.yFrom !== yFrom ||\n            nextProps.xTo !== xTo ||\n            nextProps.yTo !== yTo\n        );\n    }\n}\n","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\nimport {Bezier} from \"three.quarks\";\n\nexport interface CurveProps extends TransformProps {\n    curveColor: string;\n    curveWidth: number;\n    value: Bezier;\n}\n\nexport class CurveComponent extends TransformComponent<CurveProps> {\n    shouldComponentUpdate(nextProps: CurveProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const [p0, p1, p2, p3] = value.p;\n        return nextProps.curveColor !== curveColor ||\n            nextProps.curveWidth !== curveWidth ||\n            nextProps.value !== value;\n    }\n\n    render() {\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const {x, y} = this;\n\n        const segments = Math.floor((x(1) - x(0)) / 5);\n\n        let curve = `M${x(0)},${y(value.genValue(0))} `;\n        if (segments > 0) {\n            for (let i = 1 / segments; i <= 1; i += 1 / segments) {\n                curve += `L${x(i)},${y(value.genValue(i))} `;\n            }\n        }\n        curve += `L${x(1)},${y(value.genValue(1))} `;\n\n        return (<path\n            fill=\"none\"\n            stroke={curveColor}\n            strokeWidth={curveWidth}\n            d={curve} />);\n    }\n}\n","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\n\ninterface HandleProps extends TransformProps {\n    handleRadius: number,\n    handleColor: string,\n    hover: boolean,\n    down: boolean,\n    background: string,\n    handleStroke: number,\n    xstart: number,\n    ystart: number,\n    xval: number,\n    yval: number,\n    onMouseEnter: (event: React.MouseEvent)=>void,\n    onMouseLeave: (event: React.MouseEvent)=>void,\n    onMouseDown: (event: React.MouseEvent)=>void,\n}\n\nexport class HandleComponent extends TransformComponent<HandleProps> {\n    shouldComponentUpdate(nextProps: HandleProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n        return nextProps.xstart !== xstart ||\n            nextProps.ystart !== ystart ||\n            nextProps.handleRadius !== handleRadius ||\n            nextProps.handleColor !== handleColor ||\n            nextProps.hover !== hover ||\n            nextProps.down !== down ||\n            nextProps.background !== background ||\n            nextProps.handleStroke !== handleStroke ||\n            nextProps.xval !== xval ||\n            nextProps.yval !== yval ||\n            nextProps.onMouseDown !== onMouseDown ||\n            nextProps.onMouseLeave !== onMouseLeave ||\n            nextProps.onMouseEnter !== onMouseEnter;\n    }\n\n    render() {\n        const { x, y } = this;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n\n        const sx = x(xstart);\n        const sy = y(ystart);\n        const cx = x(xval);\n        const cy = y(yval);\n        const a = Math.atan2(cy-sy, cx-sx);\n        const cxs = cx - handleRadius * Math.cos(a);\n        const cys = cy - handleRadius * Math.sin(a);\n\n        return <g>\n            <line\n                stroke={handleColor}\n                strokeWidth={hover||down ? 1 + handleStroke : handleStroke}\n                x1={cxs}\n                y1={cys}\n                x2={sx}\n                y2={sy} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={handleRadius}\n                stroke={handleColor}\n                strokeWidth={down ? 2 * handleStroke : handleStroke}\n                fill={down ? background: handleColor}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseDown={onMouseDown} />\n        </g>;\n    }\n}","import * as React from \"react\";\nimport {CurveComponent} from \"./CurveComponent\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {HandleComponent} from \"./HandleComponent\";\nimport {createRef} from \"react\";\n\ninterface BezierCurvesEditorProps {\n    value: PiecewiseBezier\n    onChange?: (value:PiecewiseBezier) => void,\n    width: number,\n    height: number,\n    padding?: Array<number>,\n    className?: string,\n    background?: string,\n    gridColor?: string,\n    curveColor?: string,\n    handleColor?: string,\n    curveWidth?: number,\n    handleRadius?: number,\n    handleStroke?: number,\n    readOnly?: boolean,\n    style?: React.CSSProperties,\n    pointers?: React.CSSProperties,\n    textStyle?: React.CSSProperties,\n}\n\ninterface BezierCurvesEditorState {\n    curve: number,\n    hover: number,\n    down: number,\n}\n\nexport class BezierCurvesEditor extends React.PureComponent<BezierCurvesEditorProps, BezierCurvesEditorState> {\n\n\n    static defaultP = {\n        padding: [0, 0, 0, 0],\n        handleRadius: 4,\n    }; //[25, 5, 25, 18]\n\n    constructor(props: Readonly<BezierCurvesEditorProps>) {\n        super(props);\n        this.state = {\n            curve: -1,\n            down: -1,\n            hover: -1,\n        };\n    }\n\n    rootRef = createRef<HTMLDivElement>();\n\n    positionForEvent = (e: React.MouseEvent) => {\n        if (this.rootRef.current) {\n            const rect = this.rootRef.current.getBoundingClientRect();\n            return [e.clientX - rect.left, e.clientY - rect.top];\n        } else {\n            return [0, 0];\n        }\n    };\n\n    x = (value:number) => {\n    };\n\n    y = (value:number) => {\n    };\n\n    inversex = (x:number) => {\n    };\n\n    inversey = (y:number) => {\n    };\n\n    onDownLeave = (e: React.MouseEvent) => {\n        if (this.state.down) {\n            this.onDownMove(e);\n            this.setState({\n                down: -1,\n                hover: -1\n            });\n        }\n    };\n    onDownMove = (e: React.MouseEvent) => {\n        if (this.state.down >= 0) {\n            e.preventDefault();\n            const [x, y] = this.positionForEvent(e);\n            const value = new PiecewiseBezier(this.props.value.functions);\n\n            const valueX = x / this.props.width;\n            const curveIndex = this.state.curve;\n            const curve = value.getFunction(curveIndex);\n\n            if (this.state.down === 0) {\n                const old = curve.p[0];\n                curve.p[0] = (this.props.height - y) / this.props.height;\n                curve.p[1] += curve.p[0] - old;\n                value.setStartX(curveIndex, x / this.props.width);\n                if (curveIndex - 1 >= 0) {\n                    const pCurve = value.getFunction(curveIndex - 1);\n                    pCurve.p[3] = (this.props.height - y) / this.props.height;\n                    pCurve.p[2] += curve.p[0] - old;\n                    value.setFunction(curveIndex - 1, value.getFunction(curveIndex - 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 3) {\n                const old = curve.p[3];\n                curve.p[3] = (this.props.height - y) / this.props.height;\n                curve.p[2] += curve.p[3] - old;\n                value.setEndX(curveIndex, x / this.props.width);\n                if (curveIndex + 1 < value.numOfFunctions) {\n                    const nCurve = value.getFunction(curveIndex + 1);\n                    nCurve.p[0] = (this.props.height - y) / this.props.height;\n                    nCurve.p[1] += curve.p[3] - old;\n                    value.setFunction(curveIndex + 1, value.getFunction(curveIndex + 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 1) {\n                curve.p[1] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 2) {\n                curve.p[2] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            //value[i] = this.inversex(x);\n            //value[i + 1] = this.inversey(y);\n            if (this.props.onChange)\n                this.props.onChange(value);\n        }\n    };\n\n    onDownUp = () => {\n        // this.onDownMove(e);\n        this.setState({\n            down: -1,\n        });\n    };\n\n\n    onEnterHandle(curve: number, h: number) {\n        if (!this.state.down) {\n            this.setState({\n                hover: h,\n                curve: curve,\n            });\n        }\n    }\n    onDownHandle(curve: number, h: number, e: React.MouseEvent) {\n        e.preventDefault();\n        this.setState({\n            hover: -1,\n            down: h,\n            curve: curve,\n        });\n    }\n\n    onLeaveHandle() {\n        if (!this.state.down) {\n            this.setState({\n                hover: -1,\n            });\n        }\n    }\n\n    render() {\n\n        const {\n            width,\n            height,\n            value,\n            curveWidth = 1,\n            curveColor = \"#000\",\n            handleRadius = BezierCurvesEditor.defaultP.handleRadius,\n            handleColor = \"#f00\",\n            handleStroke = 1,\n            background = \"#fff\",\n        } = this.props;\n\n        const {\n            curve: curveIndex,\n            down,\n            hover\n        } = this.state;\n\n        const curves = [];\n        for (let i = 0; i < value.numOfFunctions; i ++) {\n            const x1 = value.getStartX(i);\n            const x2 = value.getEndX(i);\n            const curve = value.getFunction(i);\n            const slope0 = curve.getSlope(0);\n            const slope1 = curve.getSlope(1);\n\n            curves.push(\n                <g key={i}>\n                    <CurveComponent xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        curveColor={curveColor} curveWidth={curveWidth} value={curve}/>\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 0, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 0)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={0}\n                        yval={curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 0}\n                        hover={curveIndex === i && hover === 0}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 1, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 1)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={1.0 / 3}\n                        yval={1.0 / 3 * slope0 + curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 1}\n                        hover={curveIndex === i && hover === 1}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 2, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 2)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1 - 1.0 / 3}\n                        yval={curve.p[3] - 1.0 / 3 * slope1}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 2}\n                        hover={curveIndex === i && hover === 2}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 3, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 3)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1}\n                        yval={curve.p[3]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 3}\n                        hover={curveIndex === i && hover === 3}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                </g>);\n        }\n        return <div ref={this.rootRef}\n                    onMouseMove={this.onDownMove}\n                    onMouseUp={this.onDownUp}\n                    onMouseLeave={this.onDownLeave}>\n            <svg width={width} height={height}>\n                {curves}\n            </svg>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {IntervalValue} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {NumberInput} from \"./NumberInput\";\nimport {ColorEditor} from \"./ColorEditor\";\nimport \"./GeneratorEditor.scss\";\nimport {BezierCurvesEditor} from \"./bezier/BezierCurvesEditor\";\n\ntype EditorType =\n    'constant'\n    | 'intervalValue'\n    | 'piecewiseBezier'\n    | 'color'\n    | 'randomColor'\n    | 'colorRange'\n    | 'gradient';\nexport type ValueType = 'value' | 'functionValue' | 'color' | 'functionColor';\n\nconst ValueToEditor: { [a: string]: Array<EditorType> } = {\n    'value': ['constant', 'intervalValue'],\n    'functionValue': ['piecewiseBezier'],\n    'color': ['color', 'randomColor'],\n    'functionColor': ['colorRange', 'gradient'],\n};\n\nexport type GenericGenerator = ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator;\n\ninterface GeneratorEditorProps {\n    allowedType: Array<ValueType>;\n    name: string;\n    generator: GenericGenerator;\n    updateGenerator: (generator: GenericGenerator) => void;\n}\n\ninterface GeneratorEditorState {\n    open: boolean;\n}\n\nexport class GeneratorEditor extends React.PureComponent<GeneratorEditorProps, GeneratorEditorState> {\n\n    constructor(props: Readonly<GeneratorEditorProps>) {\n        super(props);\n        const currentEditor = ValueToEditor[props.allowedType[0]][0];\n        this.state = {\n            open: false,\n        }\n    }\n    changeEditor = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const editorType = e.target.value;\n        let generator: GenericGenerator | null = null;\n        switch(editorType) {\n            case \"constant\":\n                generator = new ConstantValue(0);\n                break;\n            case \"color\":\n                generator = new ConstantColor(new Vector4(1,1,1,1));\n                break;\n            case \"intervalValue\":\n                generator = new IntervalValue(0, 1);\n                break;\n            case \"colorRange\":\n                generator = new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"randomColor\":\n                generator = new RandomColor(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"piecewiseBezier\":\n                generator = new PiecewiseBezier();\n                break;\n        }\n        if (generator)\n            this.props.updateGenerator(generator);\n    }\n\n    changeValue = (x: number) => {\n        this.props.updateGenerator(new ConstantValue(x));\n    };\n\n    changeColor = (x: Vector4) => {\n        this.props.updateGenerator(new ConstantColor(x));\n    };\n\n    changeValueA = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(x, interval.b));\n    };\n\n    changeValueB = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(interval.a, x));\n    };\n\n    changeColorRangeA = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(x, colorRange.b));\n    };\n    changeColorRangeB = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(colorRange.a, x));\n    };\n    changeRandomColorA = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(x, randomColor.b));\n    };\n    changeRandomColorB = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(randomColor.a, x));\n    };\n\n    changeCurve = (x: PiecewiseBezier) => {\n        this.props.updateGenerator(new PiecewiseBezier(x.functions));\n    }\n\n    getEditorType(generator: GenericGenerator): EditorType {\n        if (generator instanceof ConstantValue) {\n            return 'constant';\n        } else if (generator instanceof IntervalValue) {\n            return 'intervalValue';\n        } else if (generator instanceof PiecewiseBezier) {\n            return 'piecewiseBezier';\n        } else if (generator instanceof ConstantColor) {\n            return 'color';\n        } else if (generator instanceof RandomColor) {\n            return 'randomColor';\n        } else if (generator instanceof ColorRange) {\n            return 'colorRange';\n        } else if (generator instanceof Gradient) {\n            return 'gradient';\n        }\n        return 'constant';\n    }\n\n    render() {\n        //console.log('render GeneratorEditor');\n        const {name, generator, allowedType} = this.props;\n\n        const editorTypes = [];\n        for (const valueType of allowedType) {\n            for (const editorType of ValueToEditor[valueType]) {\n                editorTypes.push(editorType);\n            }\n        }\n\n        const currentEditor = this.getEditorType(generator);\n        //console.log(currentEditor);\n\n        let editor;\n        switch (currentEditor) {\n            case \"constant\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as ConstantValue).value}\n                                 onChange={this.changeValue}/></React.Fragment>;\n                break;\n            case \"color\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ConstantColor).color} onChange={this.changeColor}/>\n                </React.Fragment>);\n                break;\n            case \"intervalValue\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as IntervalValue).a}\n                                 onChange={this.changeValueA}/>-<NumberInput\n                    value={(generator as IntervalValue).b} onChange={this.changeValueB}/></React.Fragment>;\n                break;\n            case \"piecewiseBezier\":\n                editor = <React.Fragment>\n                    <BezierCurvesEditor height={40} width={240} value={(generator as PiecewiseBezier)} onChange={this.changeCurve}/>\n                </React.Fragment>;\n                break;\n            case \"colorRange\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ColorRange).a} onChange={this.changeColorRangeA}/>-\n                    <ColorEditor color={(generator as ColorRange).b} onChange={this.changeColorRangeB}/>\n                </React.Fragment>);\n                break;\n            case \"randomColor\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as RandomColor).a} onChange={this.changeRandomColorA}/>-\n                    <ColorEditor color={(generator as RandomColor).b} onChange={this.changeRandomColorB}/>\n                </React.Fragment>);\n                break;\n        }\n        return <div className=\"property\">\n            <label className=\"name\">{name}</label>\n            {editor}\n            <select className=\"editor-select\" onChange={this.changeEditor} value={currentEditor}>\n                {editorTypes.map(editorType => <option key={editorType} value={editorType}>{editorType}</option>)}\n            </select>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\n\ninterface ParticleSystemPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: ()=>void,\n}\n\nexport class ParticleSystemProperties extends React.PureComponent<ParticleSystemPropertiesProps> {\n    constructor(props: Readonly<ParticleSystemPropertiesProps>) {\n        super(props);\n    }\n    onChangeStartSpeed = (g: GenericGenerator) => {\n        console.log(\"change start speed\");\n        this.props.particleSystem.startSpeed = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartLife = (g: GenericGenerator) => {\n        console.log(\"change start life\");\n        this.props.particleSystem.startLife = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartSize = (g: GenericGenerator) => {\n        console.log(\"change start size\");\n        this.props.particleSystem.startSize = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartColor = (g: GenericGenerator) => {\n        console.log(\"change start color\");\n        this.props.particleSystem.startColor = g as ColorGenerator | FunctionColorGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeStartRotation = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.startRotation = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeEmissionOverTime = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.emissionOverTime = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        const valueFunctionTypes = ['value', 'functionValue'] as Array<ValueType>;\n        const colorValueFunctionTypes = ['color', 'functionColor'] as Array<ValueType>;\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Life\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startLife}\n                                         updateGenerator={this.onChangeStartLife}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Size\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSize}\n                                         updateGenerator={this.onChangeStartSize}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Speed\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSpeed}\n                                         updateGenerator={this.onChangeStartSpeed}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Color\"\n                                         allowedType={colorValueFunctionTypes}\n                                         generator={this.props.particleSystem.startColor}\n                                         updateGenerator={this.onChangeStartColor}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Rotation\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startRotation}\n                                         updateGenerator={this.OnChangeStartRotation}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Emission Over Time\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.emissionOverTime}\n                                         updateGenerator={this.OnChangeEmissionOverTime}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\n\n\ninterface FileInputProps {\n    onChange: (files: FileList) => void;\n}\n\nexport class FileInput extends React.Component<FileInputProps>\n{\n    constructor(props: any)\n    {\n        super(props);\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onChange(e.target.files);\n    };\n\n    render ()\n    {\n        return <div>\n            <input\n                accept=\"image/*\"\n                type=\"file\"\n                id=\"contained-button-file\"\n                style={{display: 'none'}}\n                onChange={this.handleChange} />\n            <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload\n                </Button>\n            </label>\n        </div>;\n    }\n}\n","\nimport {Theme, styled} from '@mui/material/styles';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport {Box, Button, Dialog, ImageList, ImageListItem, ImageListItemBar} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport {Texture} from \"three\";\nimport {TextureImage} from \"./ApplicationContext\";\nimport {FileInput} from \"./editors/FileInput\";\nimport \"./TexturePicker.scss\";\n\nexport interface DialogTitleProps {\n    id: string;\n    children: React.ReactNode;\n    onClose: () => void;\n}\n\nconst DialogTitle = (props: DialogTitleProps) => {\n    const { children, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle sx={{\n            margin: 0,\n            padding: (theme) => theme.spacing(2)\n        }} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" sx={{\n                    position: 'absolute',\n                    right: theme => theme.spacing(1),\n                    top: theme =>theme.spacing(1),\n                    color: theme => theme.palette.grey[500],\n                }} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({theme}) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({theme}) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}));\n\nexport interface TexturePickerProps {\n    textures: Array<TextureImage>,\n    open: boolean,\n    handleSelect: (texture: TextureImage)=>void,\n    handleUpload: (files: FileList)=>void,\n    handleClose: ()=>void,\n}\n\nexport const TexturePicker: React.FC<TexturePickerProps> = (props) => {\n    const [selected, setSelected] = useState(0);\n\n    return (\n        <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n                Picker Texture\n            </DialogTitle>\n            <DialogContent dividers>\n                <Box sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-around',\n                    overflow: 'hidden',\n                    backgroundColor: theme => theme.palette.background.paper,\n                }}>\n                    <ImageList rowHeight={160} sx={{width: 500, height: 450}} cols={3}>\n                        {props.textures.map((texture, index) => (\n                            <ImageListItem key={texture.img} cols={1} onClick={() => {setSelected(index)}} className={ index === selected ? 'selected-tile': ''}>\n                                <img src={texture.img} alt={texture.texture.name} />\n                                <ImageListItemBar\n                                    title={texture.texture.name}\n                                    subtitle={<span>by: {texture.texture.name}</span>}\n                                />\n                            </ImageListItem>\n                        ))}\n                    </ImageList>\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <FileInput onChange={props.handleUpload} />\n                <Button variant={'contained'} onClick={() => {props.handleSelect(props.textures[selected]); props.handleClose(); }}>Confirm</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import * as React from \"react\";\nimport {AdditiveBlending, Blending, NormalBlending, Texture} from \"three\";\nimport {AppContext, ApplicationContextConsumer, TextureImage} from \"./ApplicationContext\";\nimport {ParticleSystem, RenderMode} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {TexturePicker} from \"./TexturePicker\";\nimport {Button} from \"@mui/material\";\n\n\ninterface ParticleRendererPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: ()=>void,\n}\n\ninterface ParticleRendererPropertiesState {\n    texturePickerOpen: boolean,\n}\n\nexport class ParticleRendererProperties extends React.PureComponent<ParticleRendererPropertiesProps, ParticleRendererPropertiesState> {\n    constructor(props: Readonly<ParticleRendererPropertiesProps>) {\n        super(props);\n        this.state = {\n            texturePickerOpen: false,\n        };\n    }\n    onChangeSpeedFactor = (order: number) => {\n        this.props.particleSystem.speedFactor = order;\n        this.props.updateProperties();\n    };\n    onChangeRenderOrder = (order: number) => {\n        this.props.particleSystem.renderOrder = order;\n        this.props.updateProperties();\n    };\n    onChangeStartTile = (index: number) => {\n        this.props.particleSystem.startTileIndex = index;\n        this.props.updateProperties();\n    };\n    onChangeUTileCount = (u: number) => {\n        this.props.particleSystem.uTileCount = u;\n        this.props.updateProperties();\n    };\n    onChangeVTileCount = (v: number) => {\n        this.props.particleSystem.vTileCount = v;\n        this.props.updateProperties();\n    };\n    onChangeBlending = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"Normal\":\n                this.props.particleSystem.blending = NormalBlending;\n                break;\n            case \"Additive\":\n                this.props.particleSystem.blending = AdditiveBlending;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBlending = (blending: Blending) => {\n        switch (blending) {\n            case NormalBlending:\n                return \"Normal\"\n            case AdditiveBlending:\n                return \"Additive\";\n        }\n    }\n\n    onChangeRenderMode = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"BillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.BillBoard;\n                this.props.particleSystem.speedFactor = 0;\n                break;\n            case \"LocalSpaceBillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.LocalSpaceBillBoard;\n                this.props.particleSystem.speedFactor = 0;\n                break;\n            case \"StretchedBillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.StretchedBillBoard;\n                break;\n        }\n        this.props.updateProperties();\n    }\n    getValueOfRenderMode = (renderMode: RenderMode) => {\n        switch (renderMode) {\n            case RenderMode.BillBoard:\n                return \"BillBoard\"\n            case RenderMode.LocalSpaceBillBoard:\n                return \"LocalSpaceBillBoard\";\n            case RenderMode.StretchedBillBoard:\n                return \"StretchedBillBoard\";\n        }\n    }\n\n    onChangeWorldSpace = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"True\":\n                this.props.particleSystem.worldSpace = true;\n                break;\n            case \"False\":\n                this.props.particleSystem.worldSpace = false;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBoolean = (worldSpace: boolean) => {\n        return worldSpace ? 'True': 'False';\n    }\n\n    onUploadTexture = (context: AppContext) => (files: FileList) => {\n        console.log(\"upload texture\");\n        const image = document.createElement( 'img' );\n        const texture = new Texture( image );\n        image.onload = function()  {\n            texture.needsUpdate = true;\n        };\n        if (files && files[0]) {\n            const reader = new FileReader();\n            reader.onload = function (e) {\n                image.src = reader.result as string;\n            };\n            reader.readAsDataURL(files[0]);\n\n            texture.name = files[0].name;\n            const textureImage = {\n                img: URL.createObjectURL(files[0]),\n                texture: texture\n            };\n            context.actions.addTexture(textureImage);\n        }\n\n    }\n\n    onChangeTexture = (textureImage: TextureImage) => {\n        console.log(\"change texture\");\n        this.props.particleSystem.texture = textureImage.texture;\n        this.props.updateProperties();\n    };\n\n    closeTexturePicker = () => {\n        this.setState({texturePickerOpen: false});\n    }\n\n    openTexturePicker = () => {\n        this.setState({texturePickerOpen: true});\n    }\n\n    render() {\n        console.log('rendered particleRendererProperties');\n        return (\n            <div className=\"property-container\">\n                <div className=\"property\">\n                    <label className=\"name\">RenderMode</label>\n                    <select className=\"editor-select\" onChange={this.onChangeRenderMode} value={this.getValueOfRenderMode(this.props.particleSystem.renderMode)}>\n                        <option key={0} value=\"BillBoard\" >BillBoard</option>\n                        <option key={1} value=\"LocalSpaceBillBoard\" >Local Space BillBoard</option>\n                        <option key={2} value=\"StretchedBillBoard\" >Stretched BillBoard</option>\n                    </select>\n                </div>\n                {this.props.particleSystem.renderMode === RenderMode.StretchedBillBoard &&\n                    <div className=\"property\">\n                        <label className=\"name\">SpeedFactor</label>\n                        <NumberInput value={this.props.particleSystem.speedFactor} onChange={this.onChangeSpeedFactor}/>\n                    </div>\n                }\n                <div className=\"property\">\n                    <label className=\"name\">World Space</label>\n                    <select className=\"editor-select\" onChange={this.onChangeWorldSpace} value={this.getValueOfBoolean(this.props.particleSystem.worldSpace)}>\n                        <option key={0} value=\"True\" >True</option>\n                        <option key={1} value=\"False\" >False</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Blend Mode</label>\n                    <select className=\"editor-select\" onChange={this.onChangeBlending} value={this.getValueOfBlending(this.props.particleSystem.blending)}>\n                        <option key={0} value=\"Normal\" >Normal</option>\n                        <option key={1} value=\"Additive\" >Additive</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">RenderOrder:</label><NumberInput value={this.props.particleSystem.renderOrder} onChange={this.onChangeRenderOrder}/>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">UVTile</label>\n                    <label>Column:</label><NumberInput value={this.props.particleSystem.uTileCount} onChange={this.onChangeUTileCount}/>\n                    <label>Row:</label><NumberInput value={this.props.particleSystem.vTileCount} onChange={this.onChangeVTileCount}/>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Start Tile Index</label><NumberInput value={this.props.particleSystem.startTileIndex} onChange={this.onChangeStartTile}/>\n                </div>\n                <ApplicationContextConsumer>\n                    {context => {\n                        let texture;\n                        for (let i = 0; i < context!.textures.length; i ++) {\n                            if (context!.textures[i].texture === this.props.particleSystem.texture) {\n                                texture = context!.textures[i];\n                            }\n                        }\n                        let gridWidth=1, gridHeight=1;\n                        if (texture && texture.texture.image) {\n                            gridWidth = texture.texture.image.width / this.props.particleSystem.uTileCount;\n                            gridHeight = texture.texture.image.height / this.props.particleSystem.vTileCount;\n                        }\n                        return <div className=\"property\">\n                            <label className=\"name\">Texture</label>\n                            {texture && <img className=\"texture-preview\" src={texture.img} alt={texture.texture.name}\n                                             style={{objectPosition: `-${(this.props.particleSystem.startTileIndex % this.props.particleSystem.uTileCount) * gridWidth}px -${Math.floor(this.props.particleSystem.startTileIndex / this.props.particleSystem.uTileCount) * gridHeight}px`,\n                                                 width: gridWidth,\n                                                 height: gridHeight}}/>}\n                            {/*this.props.particleSystem.texture ? this.props.particleSystem.texture.name : \"..\"*/}\n                            <Button onClick={this.openTexturePicker} variant={'contained'}>Pick</Button>\n                        </div>;\n                    }}\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <TexturePicker handleClose={this.closeTexturePicker} handleSelect={this.onChangeTexture} handleUpload={this.onUploadTexture(context)} open={this.state.texturePickerOpen} textures={context.textures}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport \"./ScriptEditor.scss\";\n\ninterface ScriptEditorProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const ScriptEditor : React.FC<ScriptEditorProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (value: string) => {\n        if (focus) {\n            setInputValue(value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return(\n        <Editor\n            value={focus? inputValue: props.value}\n            onValueChange={onInputChange}\n            highlight={code => highlight(code, languages.javascript, \"javascript\")}\n            padding={10}\n            onBlur={onInputBlur} onFocus={onInputFocus} //onKeyDown={onKeyDown}\n            style={{\n                fontFamily: '\"Consolas\", monospace',\n                fontSize: 12,\n            }}\n        />);\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScriptPropertiesProps {\n    object3d: Object3D,\n    updateProperties: () => void,\n}\n\n\nexport class ScriptProperties extends React.PureComponent<ScriptPropertiesProps> {\n    constructor(props: Readonly<ScriptPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeScript = (script: string) => {\n        if (this.props.object3d.userData === null) {\n            this.props.object3d.userData = {};\n        }\n        this.props.object3d.userData.script = script;\n        this.props.object3d.userData.func = new Function(\"delta\", script);\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                        <label className=\"script\">Script:</label>\n                        <ScriptEditor value={this.props.object3d.userData.script || \"\"} onChange={this.onChangeScript}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ConeEmitter, DonutEmitter, EmitterShape, ParticleSystem, PointEmitter, SphereEmitter} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport React, {ChangeEvent} from \"react\";\n\n\ninterface EmitterShapePropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: ()=>void,\n}\n\ninterface EmitterShapePropertiesState {\n\n}\n\nexport class EmitterShapeProperties extends React.PureComponent<EmitterShapePropertiesProps, EmitterShapePropertiesState> {\n    constructor(props: Readonly<EmitterShapePropertiesProps>) {\n        super(props);\n    }\n\n    getValueOfShape = (shape: EmitterShape) => {\n        if (this.props.particleSystem.emitterShape instanceof PointEmitter) {\n            return \"PointEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof ConeEmitter) {\n            return \"ConeEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof SphereEmitter) {\n            return \"SphereEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof DonutEmitter) {\n            return \"DonutEmitter\";\n        } else\n            return \"\";\n    };\n\n    onChangeShape = (e: ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"PointEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof PointEmitter)) {\n                    this.props.particleSystem.emitterShape = new PointEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"ConeEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof ConeEmitter)) {\n                    this.props.particleSystem.emitterShape = new ConeEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"SphereEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof SphereEmitter)) {\n                    this.props.particleSystem.emitterShape = new SphereEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"DonutEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof DonutEmitter)) {\n                    this.props.particleSystem.emitterShape = new DonutEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n        }\n    };\n\n    onChangeKeyValue = (k: string, v: number) => {\n        (this.props.particleSystem.emitterShape as any)[k] = v;\n        this.props.updateProperties();\n    };\n\n    renderShapeProperties() {\n        const properties = [];\n        for (const key in this.props.particleSystem.emitterShape) {\n            properties.push(\n                <div key={key} className=\"property\">\n                    <label className=\"name\">{key}:</label>\n                    <NumberInput value={(this.props.particleSystem.emitterShape as any)[key]} onChange={(value) => this.onChangeKeyValue(key, value)}/>\n                </div>\n            );\n        }\n        return properties;\n    }\n\n    render() {\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Shape</label>\n                            <select className=\"editor-select\" onChange={this.onChangeShape} value={this.getValueOfShape(this.props.particleSystem.emitterShape)}>\n                                <option key={0} value=\"PointEmitter\" >PointEmitter</option>\n                                <option key={1} value=\"ConeEmitter\" >ConeEmitter</option>\n                                <option key={2} value=\"SphereEmitter\" >SphereEmitter</option>\n                                <option key={3} value=\"DonutEmitter\" >DonutEmitter</option>\n                            </select>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context && this.renderShapeProperties()}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {\n    ParticleSystem,\n    ParticleEmitter\n} from \"three.quarks\";\nimport {Object3D} from \"three\";\nimport {ButtonGroup} from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButtonGroup from '@mui/lab/ToggleButtonGroup';\n\ninterface ParticleSystemControllerProps {\n    object3d: Object3D,\n    updateProperties: ()=>void,\n}\n\nexport class ParticleSystemController extends React.PureComponent<ParticleSystemControllerProps> {\n    constructor(props: Readonly<ParticleSystemControllerProps>) {\n        super(props);\n    }\n\n    getSystems = () => {\n        const systems: Array<ParticleSystem> = [];\n        if (this.props.object3d instanceof ParticleEmitter) {\n            systems.push(this.props.object3d.system);\n        }\n        this.props.object3d.traverse(object => {\n            if (object instanceof ParticleEmitter) {\n                systems.push(object.system);\n            }\n        });\n        return systems;\n    };\n\n    checkPause = (systems: Array<ParticleSystem>) => {\n        let paused = true;\n        systems.forEach(system => {\n            if (!system.paused) {\n                paused = false;\n            }\n        });\n        return paused;\n    };\n\n    togglePause = () => {\n        const systems: Array<ParticleSystem> = this.getSystems();\n        const paused = this.checkPause(systems);\n\n        if (paused) {\n            systems.forEach(system => {\n                system.play();\n            });\n        } else {\n            systems.forEach(system => {\n                system.pause();\n            });\n        }\n        this.props.updateProperties();\n    };\n\n    onRestart = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n        });\n        this.props.updateProperties();\n    };\n\n    onStop = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n            system.pause();\n        });\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ToggleButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                </ToggleButtonGroup>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                        <Button disabled={!this.checkPause(this.getSystems())} onClick={this.togglePause}>Play</Button>\n                        <Button disabled={this.checkPause(this.getSystems())} onClick={this.togglePause}>Pause</Button>\n                        <Button onClick={this.onRestart}>Restart</Button>\n                        <Button onClick={this.onStop}>Stop</Button>\n                    </ButtonGroup>}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {\n    Behavior, Bezier,\n    ColorOverLife, ColorRange,\n    FrameOverLife,\n    OrbitOverLife,\n    PiecewiseBezier,\n    RotationOverLife,\n    SizeOverLife, SpeedOverLife\n} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport { FunctionColorGenerator} from \"three.quarks\";\nimport {ListItem, List, Theme, createStyles, ListItemIcon, Box} from \"@mui/material\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport makeStyles from \"@mui/material/styles/makeStyles\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {Vector4} from \"three\";\n\ninterface BehaviorsPropertiesProps {\n    behaviors: Array<Behavior>,\n    updateProperties: ()=>void,\n}\n/*\n<GeneratorEditor name=\"Start Speed\"\n                 allowedType={valueFunctionTypes}\n                 generator={this.props.particleSystem.startSpeed}\n                 updateGenerator={this.onChangeStartSpeed}/>*/\n\nfunction BehaviorsPropertiesFunc(props: BehaviorsPropertiesProps) {\n    const [checked, setChecked] = React.useState([0, 1, 2, 3]);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const handleListItemClick = (event: any, index: number) => {\n        setSelectedIndex(index);\n    };\n\n    const handleToggle = (value: number) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n\n    const deleteBehavior = () => {\n        props.behaviors.splice(selectedIndex, 1);\n        props.updateProperties();\n    }\n\n    const onAddNewBehavior = (type: string) => () => {\n        let behavior;\n        switch (type) {\n            case 'ColorOverLife':\n                behavior = new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0)));\n                break;\n            case 'RotationOverLife':\n                behavior = new RotationOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SizeOverLife':\n                behavior = new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'FrameOverLife':\n                behavior = new FrameOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'OrbitOverLife':\n                behavior = new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SpeedOverLife':\n                behavior = new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.6667, 0.3333, 0.0), 0]]));\n                break;\n            default:\n                break;\n        }\n        if (behavior) {\n            props.behaviors.push(behavior);\n            props.updateProperties();\n        }\n        setAnchorEl(null);\n    }\n\n    const onChangeBehaviorFunc = (index: number) => (generator: GenericGenerator) => {\n        const behavior = props.behaviors[index];\n        switch (behavior.type) {\n            case 'ColorOverLife':\n                (behavior as ColorOverLife).func = generator as FunctionColorGenerator;\n                break;\n            case 'RotationOverLife':\n                (behavior as RotationOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            case 'SizeOverLife':\n                (behavior as SizeOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'FrameOverLife':\n                (behavior as FrameOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'OrbitOverLife':\n                (behavior as OrbitOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            default:\n                break;\n        }\n        console.log(\"changing\")\n        props.updateProperties();\n    }\n\n    return (\n        <Box sx={{width: '100%'}}>\n            <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                <Button color=\"inherit\" aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\" onClick={handleClick} id=\"new-button\">\n                    New\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={onAddNewBehavior('SizeOverLife')}>SizeOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('ColorOverLife')}>ColorOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('RotationOverLife')}>RotationOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('FrameOverLife')}>FrameOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('OrbitOverLife')}>OrbitOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('SpeedOverLife')}>SpeedOverLife</MenuItem>\n                </Menu>\n                <Button onClick={deleteBehavior}>Remove</Button>\n            </ButtonGroup>\n            <List dense sx={{\n                width: '100%',\n                backgroundColor: theme => theme.palette.background.paper}}>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    props.behaviors.map((behavior, index) => {\n                        const labelId = `behavior-list-label-${index}`;\n                        let valueTypes: Array<ValueType>;\n                        let func: FunctionColorGenerator | FunctionValueGenerator | ValueGenerator | null = null;\n                        switch (behavior.type) {\n                            case 'ColorOverLife':\n                                valueTypes = ['functionColor'];\n                                func = (behavior as ColorOverLife).func;\n                                break;\n                            case 'RotationOverLife':\n                                valueTypes = ['functionValue', 'value'];\n                                func = (behavior as RotationOverLife).angularVelocityFunc;\n                                break;\n                            case 'SizeOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SizeOverLife).func;\n                                break;\n                            case 'FrameOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as FrameOverLife).func;\n                                break;\n                            case 'OrbitOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as OrbitOverLife).angularVelocityFunc;\n                                break;\n                            case 'SpeedOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SpeedOverLife).func;\n                                break;\n                            default:\n                                valueTypes = ['functionValue'];\n                                break;\n                        }\n\n                        let editor;\n                        if (func) {\n                            editor = <GeneratorEditor name=\"Func\"\n                                                      allowedType={valueTypes}\n                                                      generator={func!}\n                                                      updateGenerator={onChangeBehaviorFunc(index)}/>;\n                        }\n\n                        return (\n                            <ListItem key={index}\n                                      selected={selectedIndex === index}\n                                      onClick={(event) => handleListItemClick(event, index)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"end\"\n                                        onChange={handleToggle(index)}\n                                        checked={checked.indexOf(index) !== -1}\n                                        inputProps={{'aria-labelledby': labelId}}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={behavior.type}\n                                              secondary={editor}/>\n                            </ListItem>\n                        );\n                    })\n                }\n                </ApplicationContextConsumer>\n            </List>\n        </Box>\n    );\n}\n\nexport const BehaviorsProperties = React.memo(BehaviorsPropertiesFunc);\n","import * as React from \"react\";\nimport {ConstantValue} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {Object3D, Vector4} from \"three\";\nimport {ObjectProperties} from \"./ObjectProperties\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {ParticleSystemProperties} from \"./ParticleSystemProperties\";\nimport {ParticleRendererProperties} from \"./ParticleRendererProperties\";\nimport {ScriptProperties} from \"./ScriptProperties\";\nimport {EmitterShapeProperties} from \"./EmitterShapeProperties\";\nimport {ParticleSystemController} from \"./ParticleSystemController\";\nimport {AccordionProps, AccordionSummaryProps, Box, createStyles, makeStyles, styled, Theme} from \"@mui/material\";\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\nimport MuiAccordion from \"@mui/material/Accordion\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport \"./PropertiesEditor.scss\";\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport {BehaviorsProperties} from \"./BehaviorsProperties\";\n\nconst Accordion = styled((props: AccordionProps) => (\n    <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({theme})=>({\n    border: `1px solid ${theme.palette.divider}`,\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    },\n    '&:before': {\n        display: 'none',\n    },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n    <MuiAccordionSummary\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n        {...props}\n    />))(({theme})=>({\n    minHeight: 0,\n    backgroundColor:\n        theme.palette.mode === 'dark'\n            ? 'rgba(255, 255, 255, .05)'\n            : 'rgba(0, 0, 0, .03)',\n    flexDirection: 'row-reverse',\n    //marginBottom: -1,\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\n\nconst StyledHeading = styled(Typography)(({theme})=>({\n    fontWeight: theme.typography.fontWeightRegular,\n}));\n\ninterface PropertiesEditorProps {\n    object3d: Object3D\n}\n\nexport default function PropertiesEditor(props: PropertiesEditorProps) {\n    const [expanded, setExpanded] = React.useState(['Object', 'EmitterShape', 'ParticleRenderer','ParticleEmitter','Behaviors','Script']);\n\n    const handleChange = (panel: string) => (event: any, isExpanded: boolean) => {\n        if (isExpanded) {\n            expanded.push(panel);\n        } else {\n            expanded.splice(expanded.indexOf(panel), 1);\n        }\n        setExpanded(expanded);\n    };\n\n    return (\n        <Box sx={{width: '100%'}}>\n            <ApplicationContextConsumer>\n                {context => context &&\n                    <ParticleSystemController object3d={props.object3d}\n                                              updateProperties={context.updateProperties}/>\n                }\n            </ApplicationContextConsumer>\n            <Accordion expanded={(expanded.indexOf('Object') !== -1)} onChange={handleChange('Object')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"object-content\"\n                    id=\"object-header\"\n                >\n                    <StyledHeading>Object</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ObjectProperties object3d={props.object3d}\n                                              updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('EmitterShape') !== -1)} onChange={handleChange('EmitterShape')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"emitter-shape-content\"\n                    id=\"emitter-shape-header\">\n                    <StyledHeading>Emitter Shape</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <EmitterShapeProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                    updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleRenderer') !== -1)} onChange={handleChange('ParticleRenderer')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-renderer-content\"\n                    id=\"particle-renderer-header\">\n                    <StyledHeading>Particle Renderer</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleRendererProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                        updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleEmitter') !== -1)} onChange={handleChange('ParticleEmitter')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-emitter-content\"\n                    id=\"particle-emitter-header\">\n                    <StyledHeading>Particle Emitter</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleSystemProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                      updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('Behaviors') !== -1)} onChange={handleChange('Behaviors')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"behaviors-content\"\n                    id=\"behaviors-header\">\n                    <StyledHeading>Behaviors</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <BehaviorsProperties behaviors={(props.object3d as ParticleEmitter).system.behaviors}\n                                                        updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            <Accordion expanded={(expanded.indexOf('Script') !== -1)} onChange={handleChange('Script')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"script-content\"\n                    id=\"script-header\"\n                >\n                    <StyledHeading>Script</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ScriptProperties object3d={props.object3d}\n                                              updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n        </Box>\n    );\n}\n","import {Object3D, Vector4} from \"three\";\nimport {\n    Behavior,\n    Bezier,\n    ColorGenerator, ColorRange, ConeEmitter, ConstantColor, ConstantValue, DonutEmitter, EmitterShape,\n    FunctionColorGenerator,\n    FunctionValueGenerator, Gradient, IntervalValue,\n    ParticleEmitter, PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, SphereEmitter,\n    ValueGenerator,\n    ColorGeneratorFromJSON,\n    ColorOverLife, FrameOverLife, OrbitOverLife,\n    RotationOverLife, SizeOverLife, SpeedOverLife,\n    ValueGeneratorFromJSON\n} from \"three.quarks\";\n\n\nexport class CodeExporter {\n    /*static traverseObject(parent: Object3D): string {\n        for (let i = 0; i < parent.children.length; i ++) {\n\n        }\n    }*/\n\n    static camelize(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return index === 0 ? word.toLowerCase() : word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static camelizeClass(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static exportBezier(func: Bezier) {\n        return `new Bezier(${func.p[0]}, ${func.p[1]}, ${func.p[2]}, ${func.p[3]})`;\n    }\n    static exportColor(color: Vector4) {\n        return `new Vector4(${color.x}, ${color.y}, ${color.z}, ${color.w})`;\n    }\n    static exportFunction(func: ValueGenerator | ColorGenerator | FunctionValueGenerator | FunctionColorGenerator, indent = 0): string {\n        if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        } else if (func instanceof ConstantColor) {\n            return `new ConstantColor(${CodeExporter.exportColor(func.color)})`;\n        } else if (func instanceof IntervalValue) {\n            return `new IntervalValue(${func.a}, ${func.b})`;\n        } else if (func instanceof ColorRange) {\n            return `new ColorRange(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof RandomColor) {\n            return `new RandomColor(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        }  else if (func instanceof Gradient) {\n            let code = `new Gradient(\\n`;\n            for (let i = 0; i < func.functions.length - 1; i ++) {\n                code += ' '.repeat(indent + 4) + `[${CodeExporter.exportFunction(func.functions[i][0])}, ${func.functions[i][1]}], `;\n            }\n            code += ' '.repeat(indent + 4) + `[${CodeExporter.exportFunction(func.functions[func.functions.length - 1][0])}, ${func.functions[func.functions.length - 1][1]}]`;\n            code += ' '.repeat(indent) + `)`;\n            return code;\n        } else if (func instanceof PiecewiseBezier) {\n            let code = `new PiecewiseBezier(\\n`;\n            for (let i = 0; i < func.functions.length - 1; i ++) {\n                code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[i][0])}, ${func.functions[i][1]}], `;\n            }\n            code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[func.functions.length - 1][0])}, ${func.functions[func.functions.length - 1][1]}]`;\n            code += ' '.repeat(indent) + `)`;\n            return code;\n        }\n        throw new Error();\n    }\n\n    static exportParticleEmitter(emitter: ParticleEmitter): string {\n\n        const name = CodeExporter.camelize(emitter.name);\n        const system = emitter.system;\n        let code = `        this.${name} = new ParticleSystem(renderer, {\\n`;\n        code += `            duration: ${system.duration},\\n`;\n        code += `            looping: ${system.looping},\\n`;\n        code += `            startLife: ${CodeExporter.exportFunction(system.startLife)},\\n`;\n        code += `            startSpeed: ${CodeExporter.exportFunction(system.startSpeed)},\\n`;\n        code += `            startSize: ${CodeExporter.exportFunction(system.startSize)},\\n`;\n        code += `            startColor: ${CodeExporter.exportFunction(system.startColor)},\\n`;\n        code += `            worldSpace: ${system.worldSpace},\\n`;\n        code += `            maxParticle: ${system.maxParticle},\\n`;\n        code += `            emissionOverTime: ${CodeExporter.exportFunction(system.emissionOverTime)},\\n`;\n        code += `            emissionBursts: ${system.emissionBursts},\\n`;\n        code += `            shape: ${CodeExporter.exportShape(system.emitterShape)},\\n`;\n        code += `            texture: texture,\\n`;\n        code += `            blending: ${system.blending},\\n`;\n        code += `            startTileIndex: ${system.startTileIndex},\\n`;\n        code += `            uTileCount: ${system.uTileCount},\\n`;\n        code += `            vTileCount: ${system.vTileCount},\\n`;\n        code += `            renderMode: ${system.renderMode},\\n`;\n        if (system.renderMode === RenderMode.StretchedBillBoard) {\n            code += `            speedFactor: ${system.speedFactor},\\n`;\n        }\n        code += '        });\\n';\n\n        for (let i = 0; i < system.behaviors.length; i ++) {\n            code += `        this.${name}.addBehavior(${CodeExporter.exportBehavior(system.behaviors[i])});\\n`;\n        }\n        code += `        this.${name}.emitter.renderOrder = ${system.emitter.renderOrder};\\n`\n        code += `        this.${name}.emitter.name = '${name}';\\n`\n        code += `        this.${name}.emitter.rotation.set(${system.emitter.rotation.x}, ${system.emitter.rotation.y}, ${system.emitter.rotation.z});\\n`;\n        code += `        this.add(this.${name}.emitter);\\n`\n        code += '\\n';\n        return code;\n    }\n\n    static exportShape(shape: EmitterShape) {\n        const json = shape.toJSON();\n        //@ts-ignore\n        delete json.type;\n        const params = JSON.stringify(json);\n        const unquoted = params.replace(/\"([^\"]+)\":/g, '$1:');\n\n        if (shape instanceof PointEmitter) {\n            return \"new PointEmitter()\";\n        }if (shape instanceof SphereEmitter) {\n            return \"new SphereEmitter(\" + unquoted + \")\";\n        }if (shape instanceof ConeEmitter) {\n            return \"new ConeEmitter(\" + unquoted + \")\";\n        }if (shape instanceof DonutEmitter) {\n            return \"new DonutEmitter(\" + unquoted + \")\";\n        }\n    }\n\n    static exportBehavior(behavior: Behavior) {\n        let func;\n        switch (behavior.type) {\n            case 'ColorOverLife':\n                func = CodeExporter.exportFunction((behavior as ColorOverLife).func)\n                break;\n            case 'RotationOverLife':\n                func = CodeExporter.exportFunction((behavior as RotationOverLife).angularVelocityFunc)\n                break;\n            case 'SizeOverLife':\n                func = CodeExporter.exportFunction((behavior as SizeOverLife).func)\n                break;\n            case 'SpeedOverLife':\n                func = CodeExporter.exportFunction((behavior as SpeedOverLife).func)\n                break;\n            case 'FrameOverLife':\n                func = CodeExporter.exportFunction((behavior as FrameOverLife).func)\n                break;\n            case 'OrbitOverLife':\n                func = CodeExporter.exportFunction((behavior as OrbitOverLife).angularVelocityFunc)\n                break;\n            default:\n                func = behavior;\n        }\n        return \"new \" + behavior.type + \"(\" + func + \")\";\n    }\n\n    static exportCode(root: Object3D): string {\n\n        let code = `export class ${CodeExporter.camelizeClass(root.name)} extends Group {\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `    private ${CodeExporter.camelize(root.children[i].name)}: ParticleSystem;\\n`\n            }\n        }\n\n        code += '\\n';\n        code += `    constructor() {\\n`;\n        code += `        super();\\n`;\n        code += `        this.name = '${root.name}';\\n`;\n        code += `        let texture = new TextureLoader().load( \"textures/texture1.png\");\\n`;\n        code += `        texture.name = \"textures/texture1.png\";\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += CodeExporter.exportParticleEmitter(root.children[i] as ParticleEmitter);\n            }\n        }\n\n        code += '    }\\n';\n        code += '\\n';\n\n        code += '    update(delta: number) {\\n';\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `        this.${CodeExporter.camelize(root.children[i].name)}.update(delta);\\n`\n            }\n        }\n        code += '    }\\n';\n        code += '}';\n        return code;\n    }\n}\n","import React from \"react\";\nimport Dialog, {DialogProps} from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScrollDialogProps {\n    content: string,\n    open: boolean,\n    handleClose: () =>void,\n}\n\nexport function ScrollDialog(props: ScrollDialogProps) {\n\n    const descriptionElementRef = React.useRef<HTMLElement>(null);\n    /*React.useEffect(() => {\n        if (props.open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [props.open]);\n    <DialogContentText\n        id=\"scroll-dialog-description\"\n        ref={descriptionElementRef}\n        tabIndex={-1}\n    >\n        {props.content}\n    </DialogContentText>*/\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={props.handleClose}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Particle System Code</DialogTitle>\n                <DialogContent dividers={true}>\n                    <ScriptEditor value={props.content} onChange={()=>{}}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {AppContext} from \"./ApplicationContext\";\nimport {Object3D, Scene} from \"three\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport './SceneGraphView.scss';\nimport {Item, Menu, MenuProvider, Separator, Submenu} from \"react-contexify\";\nimport {MenuItemEventHandler} from \"react-contexify/lib/types\";\nimport 'react-contexify/dist/ReactContexify.min.css';\nimport {TreeView} from \"@mui/lab\";\nimport {Box, styled, SvgIconProps} from \"@mui/material\";\nimport TreeItem, { TreeItemProps, TreeItemClassKey } from \"@mui/lab/TreeItem\";\nimport {Typography} from \"@mui/material\";\nimport {CodeExporter} from \"../util/CodeExporter\";\nimport {ScrollDialog} from \"./ScrollDialog\";\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport CollectionsIcon from '@mui/icons-material/Collections';\nimport CodeIcon from '@mui/icons-material/Code';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\ninterface SceneGraphViewMaterialProps {\n    context: AppContext;\n    scene: Scene;\n}\n\n\ndeclare module 'react' {\n    interface CSSProperties {\n        '--tree-view-color'?: string;\n        '--tree-view-bg-color'?: string;\n    }\n}\n\ntype StyledTreeItemProps = TreeItemProps & {\n    bgColor?: string;\n    color?: string;\n    labelIcon: React.ElementType<SvgIconProps>;\n    labelInfo?: string;\n    labelText: string;\n};\n/*\nconst StyledTreeItemRoot = styled(TreeItem)(({ theme }) => ({\n    color: theme.palette.text.secondary,\n    [`& .${treeItemClasses.content}`]: {\n        color: theme.palette.text.secondary,\n        borderTopRightRadius: theme.spacing(2),\n        borderBottomRightRadius: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        fontWeight: theme.typography.fontWeightMedium,\n        '&.Mui-expanded': {\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        '&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused': {\n            backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\n            color: 'var(--tree-view-color)',\n        },\n        [`& .${treeItemClasses.label}`]: {\n            fontWeight: 'inherit',\n            color: 'inherit',\n        },\n    },\n    [`& .${treeItemClasses.group}`]: {\n        marginLeft: 0,\n        [`& .${treeItemClasses.content}`]: {\n            paddingLeft: theme.spacing(2),\n        },\n    },\n}));\n\nfunction StyledTreeItem(props: StyledTreeItemProps) {\n    const {\n        bgColor,\n        color,\n        labelIcon: LabelIcon,\n        labelInfo,\n        labelText,\n        ...other\n    } = props;\n\n    return (\n        <StyledTreeItemRoot\n            label={\n                <Box sx={{ display: 'flex', alignItems: 'center', p: 0.5, pr: 0 }}>\n                    <Box component={LabelIcon} color=\"inherit\" sx={{ mr: 1 }} />\n                    <Box sx={{ fontWeight: 'inherit', flexGrow: 1 }}>\n                        <Typography variant=\"body2\">\n                            {labelText}\n                        </Typography>\n                    </Box>\n                    <Typography variant=\"caption\" color=\"inherit\">\n                        {labelInfo}\n                    </Typography>\n                </Box>\n            }\n            style={{\n                '--tree-view-color': color,\n                '--tree-view-bg-color': bgColor,\n            }}\n            {...other}\n        />\n    );\n}*/\n\nexport const SceneGraphTreeView: React.FC<SceneGraphViewMaterialProps> = (props) => {\n    const [selected, setSelected] = React.useState<string>(\"\");\n    const [expanded, setExpanded] = React.useState<string[]>(['1']);\n\n    const [code, setCode] = React.useState<string>('');\n\n    const countIndex = (index: number, object3d: Object3D): [Object3D | null, number] => {\n        if (index === 0)\n            return [object3d, 0];\n        index --;\n        for (const child of object3d.children) {\n            const [res, newIndex] = countIndex(index, child);\n            if (res)\n                return [res, newIndex];\n            index = newIndex;\n        }\n        return [null, index];\n    }\n    const handleSelect = (event: React.ChangeEvent<any>, nodeIds: string) => {\n        if (nodeIds.length > 0) {\n            const index = parseInt(nodeIds);\n            const [object3d, ] = countIndex(index, props.scene);\n            if (object3d) {\n                props.context.actions.select(object3d);\n            }\n        }\n        setSelected(nodeIds);\n    };\n    const handleToggle = (event: React.ChangeEvent<any>, nodeIds: string[]) => {\n        //console.log(event.target);\n        if ((event.target as HTMLElement).tagName === 'svg') {\n            setExpanded(nodeIds);\n        }\n    };\n\n    const getObjectName = (object3d: Object3D) => {\n        let type = 'object';\n        if (object3d instanceof ParticleEmitter) {\n            type = 'ParticleSystem';\n        } else {\n            type =  object3d.type;\n        }\n        let name = 'unnamed';\n        if (object3d.name) {\n            name = object3d.name;\n        }\n        return `[${type}] ${name}`;\n    };\n\n    const renderObject = (context: AppContext, object3d: THREE.Object3D, index: number): [React.ReactNode, number] => {\n        const items = [];\n        const originIndex = index;\n        index ++;\n        for (const child of object3d.children) {\n            const result = renderObject(context, child, index);\n            items.push(result[0]);\n            index = result[1];\n        }\n        //selected={context.selection.indexOf(object3d) !== -1}\n        if (originIndex !== 0) {\n            let icon;\n            switch (object3d.type) {\n                case \"BatchedParticleRenderer\":\n                    icon = <CodeIcon/>;\n                    break;\n                case \"ParticleSystemBatch\":\n                    icon = <CodeIcon/>;\n                    break;\n                case \"ParticleEmitter\":\n                    icon = <CodeIcon/>;\n                    break;\n                case \"AmbientLight\":\n                    icon = <LightbulbIcon/>;\n                    break;\n                case \"Group\":\n                    icon = <CollectionsIcon/>;\n                    break;\n                default:\n                    icon = <CodeIcon/>;\n                    break;\n            }\n\n            return [<TreeItem key={object3d.uuid} nodeId={originIndex + \"\"}\n                              label={<MenuProvider id=\"scene-graph-menu\" data={{object3d: object3d}}>{getObjectName(object3d) + \" \" + originIndex}</MenuProvider>}>\n                {items}\n            </TreeItem>, index];\n        } else {\n            return [<React.Fragment>{items}</React.Fragment>, index];\n        }\n    }\n\n    const onContextMenuClick = ({event, props}: MenuItemEventHandler) => console.log(event,props);\n\n    const onContextMenuAddParticleSystem = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.addObject3d('particle', (contextProps! as any).object3d);\n        }\n    };\n    const onContextMenuRemove = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.removeObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuDuplicate = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.duplicateObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuExport = ({event, props: contextProps}: MenuItemEventHandler) => {\n        console.log(contextProps);\n        if ((contextProps! as any).object3d) {\n            const a = document.createElement(\"a\");\n            const json = (contextProps! as any).object3d.toJSON();\n            //json.images.forEach((image: any) => image.url = \"http://localhost:3000/textures/texture1.png\");\n            const file = new Blob([JSON.stringify(json)], {type: \"application/json\"});\n            a.href = URL.createObjectURL(file);\n            a.download = \"scene.json\";\n            a.click();\n        }\n    };\n\n    const onContextMenuCopyCode = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps! as any).object3d) {\n            setCode(CodeExporter.exportCode((contextProps! as any).object3d));\n        }\n    }\n\n    const renderScene = (context: AppContext, scene: THREE.Scene) => {\n        return <TreeView\n            sx={{height: 240,\n                flexGrow: 1}}\n            selected={selected}\n            expanded={expanded}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            multiSelect={false}\n        >\n            {renderObject(context, scene, 0)[0]}\n        </TreeView>;\n    }\n\n    return <Box sx={{height: 270, flexGrow: 1, overflow: 'auto' }}>\n        <Typography sx={{\n            fontSize: theme => theme.typography.pxToRem(15),\n            fontWeight: theme =>theme.typography.fontWeightRegular}}> Scene Graph </Typography>\n        {renderScene(props.context, props.scene)}\n        <Menu id=\"scene-graph-menu\">\n            <Submenu label=\"Add\">\n                <Item onClick={onContextMenuAddParticleSystem}>Particle System</Item>\n                <Item onClick={onContextMenuClick}>Ball</Item>\n            </Submenu>\n            <Separator />\n            <Item onClick={onContextMenuDuplicate}>Duplicate</Item>\n            <Item onClick={onContextMenuRemove}>Remove</Item>\n            <Separator />\n            <Item onClick={onContextMenuExport}>Export</Item>\n            <Item onClick={onContextMenuCopyCode}>Copy JS Code</Item>\n        </Menu>\n        <ScrollDialog content={code} open={code !== ''} handleClose={()=>{setCode('')}} />\n    </Box>;\n}\n","import * as React from \"react\";\nimport MainMenu from \"./MainMenu\";\nimport {ThreejsViewport} from \"./ThreejsViewport\";\nimport PropertiesEditor from \"./PropertiesEditor\";\n\nimport './layout.scss';\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {SceneGraphTreeView} from \"./SceneGraphTreeView\";\n\nexport interface ApplicationProps {\n\n}\n\nexport const Application: React.FC<ApplicationProps> = (props) => {\n\n    return (\n        <ApplicationContextProvider>\n            <div className=\"application\">\n                <div className=\"main-menu\">\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <MainMenu onSaveAs={context.actions.onSaveAs}\n                                      onImport={context.actions.onImport}\n                                      onOpenDemo={context.actions.onOpenDemo}/>\n                        }\n                    </ApplicationContextConsumer>\n                </div>\n                <div className=\"main\">\n                    <div className=\"viewport\">\n                        <ThreejsViewport width={600} height={600}/>\n                    </div>\n                    <div className=\"sidebar\">\n                        <ApplicationContextConsumer>\n                            {\n                                context => context && <SceneGraphTreeView context={context} scene={context.scene}/>\n                            }\n                        </ApplicationContextConsumer>\n                        <ApplicationContextConsumer>\n                            {context => context && context.selection.length > 0 &&\n                                <PropertiesEditor object3d={context.selection[0]}/>\n                            }\n                        </ApplicationContextConsumer>\n                    </div>\n                </div>\n            </div>\n        </ApplicationContextProvider>);\n}\n","import React, {useState} from 'react';\nimport {Application} from \"./components/Application\";\nimport blue from \"@mui/material/colors/blue\";\nimport red from \"@mui/material/colors/red\";\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: red[500],\n        },\n    },\n    typography: {\n        fontSize: 12,\n    }\n});\n\nconst App: React.FC = () => {\n  /*const [bezierCurves, setBezierCurves] = useState(\n      new PiecewiseBezier([\n        [new Bezier(0, 0.5 / 3, 0.5 / 3 * 2, 0.5), 0],\n        [new Bezier(0.5, 0.5, 0.5, 0.5), 0.5],\n      ])\n  );return <div className=\"App\">\n        <header className=\"App-header\">\n            <BezierCurvesEditor width={200} height={100} value={bezierCurves} onChange={(bezierCurves) => {setBezierCurves(bezierCurves)}}/>\n        </header>\n    </div>;*/\n\n    return (<ThemeProvider theme={theme}><Application /></ThemeProvider>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}