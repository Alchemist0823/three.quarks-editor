{"version":3,"sources":["components/MainMenu.tsx","WebGL.ts","../../three.quarks-core/dist/three.quarks.esm.js","example/ToonProjectile.ts","example/BulletMuzzle.ts","example/BulletProjectile.ts","example/ToonExplosion.ts","example/LevelUp.ts","example/ShipSmoke.ts","example/ElectricBall.ts","example/ShipTrail.ts","example/Explosion2.ts","example/EnergyRifleMuzzle.ts","example/Blackhole.ts","components/ApplicationContext.tsx","components/ViewPortControls.tsx","components/ThreejsViewport.tsx","components/editors/NumberInput.tsx","components/editors/Vector3Editor.tsx","components/editors/StringInput.tsx","components/ObjectProperties.tsx","components/editors/ColorEditor.tsx","components/editors/bezier/TransformComponent.tsx","components/editors/bezier/CurveComponent.tsx","components/editors/bezier/HandleComponent.tsx","components/editors/bezier/BezierCurvesEditor.tsx","components/editors/GeneratorEditor.tsx","components/ParticleSystemProperties.tsx","components/editors/FileInput.tsx","components/TexturePicker.tsx","components/ParticleRendererProperties.tsx","components/editors/ScriptEditor.tsx","components/ScriptProperties.tsx","components/EmitterShapeProperties.tsx","components/ParticleSystemController.tsx","components/BehaviorsProperties.tsx","components/PropertiesEditor.tsx","util/CodeExporter.ts","components/ScrollDialog.tsx","components/SceneGraphTreeView.tsx","components/Application.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MainMenu","props","fileRef","openFileDialog","e","current","click","importFile","target","files","onImport","openDemo","demoIndex","onOpenDemo","handleMenuClick","event","console","log","currentTarget","setState","anchorEl","handleMenuClose","undefined","state","React","Box","sx","flexGrow","AppBar","position","Toolbar","variant","IconButton","edge","marginRight","theme","spacing","color","Typography","Button","onClick","this","id","Menu","keepMounted","open","Boolean","onClose","MenuItem","onSaveAs","ref","type","multiple","accept","style","display","onChange","WEBGL","isWebGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","isWebGL2Available","WebGL2RenderingContext","getWebGLErrorMessage","getErrorMessage","getWebGL2ErrorMessage","version","contexts","message","element","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","replace","innerHTML","_classCallCheck","instance","Constructor","TypeError","_defineProperties","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","result","Super","NewTarget","arguments","apply","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","len","arr2","_createForOfIteratorHelper","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","return","ParticleEmitter","_Object3D","_super","system","_this","visible","clone","emitter","cache","values","data","metadata","meta","isRootObject","output","geometries","materials","textures","images","shapes","generator","object","uuid","castShadow","receiveShadow","frustumCulled","renderOrder","JSON","stringify","userData","layers","mask","matrix","toArray","matrixAutoUpdate","ps","toJSON","children","extractFromCache","Object3D","Particle","Vector4","Vector3","ConstantValue","json","IntervalValue","a","b","MathUtils","lerp","Math","random","PiecewiseFunction","functions","t","mid","left","right","floor","getStartX","getEndX","index","x","func","get","Bezier","p1","p2","p3","p4","t2","t3","mt","mt2","mt3","points","dpoints","c","list","j","dpt","derivativeCoefficients","d0","d1","pt","_p","q","idx","l","hull","span","p0","PiecewiseBezier","_PiecewiseFunction","curves","findFunction","error","genValue","segments","join","map","_ref","_ref2","bezier","start","_ref3","_ref4","piecewiseFunction","fromJSON","ValueGeneratorFromJSON","ColorToJSON","r","g","y","z","w","JSONToColor","RandomColor","rand","copy","ColorRange","ConstantColor","ColorGeneratorFromJSON","ColorOverLife","particle","delta","genColor","age","life","startColor","RotationOverLife","angularVelocityFunc","angularVelocity","rotation","SizeOverLife","size","startSize","SpeedOverLife","velocity","normalize","multiplyScalar","startSpeed","FrameOverLife","uvTile","OrbitOverLife","atan2","sqrt","cos","sin","RenderMode","ConeEmitter","parameters","radius","arc","PI","thickness","angle","u","theta","sinTheta","cosTheta","set","addScaledVector","SphereEmitter","v","phi","acos","cbrt","sinPhi","cosPhi","setScalar","PointEmitter","DonutEmitter","particle_frag","DEFAULT_MAX_PARTICLE","UP$1","ParticleSystemBatch","_Mesh","settings","Quaternion","Matrix3","systems","Set","geometry","InstancedBufferGeometry","setIndex","instancingGeometry","getIndex","setAttribute","getAttribute","offsetBuffer","InstancedBufferAttribute","Float32Array","setUsage","DynamicDrawUsage","colorBuffer","renderMode","LocalSpace","rotationBuffer","sizeBuffer","uvTileBuffer","rebuildMaterial","add","uniforms","defines","Uniform","texture","uTileCount","vTileCount","Vector2","BillBoard","vertexShader","side","DoubleSide","FrontSide","material","ShaderMaterial","fragmentShader","transparent","depthWrite","blending","AdditiveBlending","StretchedBillBoard","Error","velocityBuffer","_this2","forEach","particles","particleNum","quaternion2_","setFromRotationMatrix","matrixWorld","rotationMat_","setFromMatrix4","rotationQuat","setFromAxisAngle","worldSpace","setXYZW","quaternion_","multiply","setX","setXYZ","vector_","applyMatrix4","speedFactor","applyMatrix3","instanceCount","updateRange","count","needsUpdate","dispose","Mesh","UP","DEFAULT_GEOMETRY","PlaneBufferGeometry","ParticleSystem","renderer","_parameters$duration","_parameters$maxPartic","_parameters$startLife","_parameters$startSpee","_parameters$startRota","_parameters$startSize","_parameters$startColo","_parameters$emissionO","_parameters$emissionO2","_parameters$emissionB","_parameters$shape","_parameters$behaviors","_parameters$worldSpac","_parameters$speedFact","_parameters$blending","_parameters$instancin","_parameters$renderMod","_parameters$renderOrd","_parameters$uTileCoun","_parameters$vTileCoun","Matrix4","autoDestroy","duration","maxParticle","looping","startLife","startRotation","emissionOverTime","emissionOverDistance","emissionBursts","emitterShape","shape","behaviors","rendererSettings","NormalBlending","neededToUpdateRender","startTileIndex","burstIndex","burstWaveIndex","time","paused","waitEmiting","emitEnded","markForDestroy","initialize","normalMatrix","deleteSystem","parent","remove","firstTimeUpdate","addSystem","endEmit","updateSystem","getNormalMatrix","totalSpawn","ceil","spawn","probability","_particle","update","oldWorldMatrix","image","url","behavior","_step","newEmissionBursts","_iterator","emissionBurst","newEmissionBurst","assign","_step2","newBehaviors","_iterator2","BehaviorFromJSON","BatchedParticleRenderer","getRendererSettings","batches","equals","batch","removeSystem","TEXTURE_MAPPING","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","TEXTURE_WRAPPING","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","TEXTURE_FILTER","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","QuarksLoader","manager","DefaultLoadingManager","resourcePath","path","crossOrigin","onLoad","onProgress","onError","scope","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","load","text","parse","toLowerCase","itemStart","itemEnd","itemError","LoadingManager","ImageLoader","setCrossOrigin","il","jl","currentUrl","loadImage","parseConstant","warn","CubeTexture","Texture","mapping","offset","fromArray","repeat","center","wrap","wrapS","wrapT","format","encoding","minFilter","magFilter","anisotropy","flipY","premultiplyAlpha","unpackAlignment","Group","decompose","quaternion","scale","parseObject","parseImages","parseTextures","Gradient","getFunction","range","ToonProjectile","smoke","glowBeam","mainBeam","addBehavior","rotateY","script","Function","BulletMuzzle","beam","muzzle1","muzzle2","flash","cycle","interval","muzzle","BulletProjectile","hProjectile","vProjectile","TextureLoader","projectileParam","ToonExplosion","circle","LevelUp","gatherParticles","glow","glow2","yellow","glowParam","glow2Param","particleParam","ShipSmoke","grey","ElectricBall","beamWorld","electricity","electricBall","texture2","ShipTrail","Explosion2","circle2","mainColor","yellowColor","secColor","yellowColor2","EnergyRifleMuzzle","glowTop","ringBase","coneBufferGeometry","CylinderBufferGeometry","rotateX","Blackhole","ring","ApplicationContext","ApplicationContextConsumer","Consumer","ApplicationContextProvider","textureLoader","updateProperties1","updateProperties","updateProperties2","removeObject3d","object3D","duplicateObject3d","addObject3d","batchedRenderer","scene","BoxBufferGeometry","MeshStandardMaterial","actions","select","animate","texture1","process","Scene","selection","img","addDemo","file","Blob","href","URL","createObjectURL","download","nFiles","nFileId","jsonURL","transformControls","detach","attach","selectAddition","indexOf","updateParticleSystem","addTexture","textureImage","setRenderer","demoObject","Provider","ViewPortControls","ToggleButtonGroup","controlType","exclusive","newControlType","setControlType","top","ToggleButton","CameraAlt","Transform","ThreeSixty","AspectRatio","ThreejsViewport","container","stats","camera","clock","cameraControls","appContext","onResize","domElement","parentElement","clientWidth","clientHeight","height","newWidth","newHeight","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","renderScene","setViewPortControlType","enabled","mode","viewPortControlType","init","prevProps","prevState","snapshot","body","appendChild","WebGLRenderer","Color","axisHelper","AxesHelper","light","PointLight","ambientLight","AmbientLight","Clock","PerspectiveCamera","OrbitControls","enableKeys","enableDamping","dampingFactor","rotateSpeed","setPixelRatio","devicePixelRatio","TransformControls","Stats","dom","getDelta","traverse","render","context","NumberInput","inputValue","setInputValue","focus","setFocus","className","onBlur","parseFloat","onFocus","onKeyDown","Vector3Editor","unitConversion","StringInput","ObjectProperties","onChangeName","object3d","onChangePosition","onChangeScale","onChangeRotation","ConvertToColor","ColorEditor","setOpen","backgroundColor","colorResult","min","rgb","interp","TransformComponent","xFrom","xTo","yFrom","yTo","nextProps","Component","CurveComponent","curveColor","curveWidth","curve","fill","stroke","strokeWidth","d","HandleComponent","xstart","ystart","handleRadius","handleColor","hover","down","handleStroke","xval","yval","onMouseEnter","onMouseLeave","onMouseDown","sy","cx","cy","cxs","cys","x1","y1","x2","y2","BezierCurvesEditor","rootRef","createRef","positionForEvent","rect","getBoundingClientRect","clientX","clientY","inversex","inversey","onDownLeave","onDownMove","preventDefault","curveIndex","old","setStartX","pCurve","setFunction","setEndX","numOfFunctions","nCurve","onDownUp","h","defaultP","slope0","getSlope","slope1","onDownHandle","onEnterHandle","onLeaveHandle","onMouseMove","onMouseUp","ValueToEditor","GeneratorEditor","changeEditor","updateGenerator","changeValue","changeColor","changeValueA","changeValueB","changeColorRangeA","colorRange","changeColorRangeB","changeRandomColorA","randomColor","changeRandomColorB","changeCurve","allowedType","editorTypes","valueType","editorType","editor","currentEditor","getEditorType","ParticleSystemProperties","onChangeStartSpeed","particleSystem","onChangeStartLife","onChangeStartSize","onChangeStartColor","OnChangeStartRotation","OnChangeEmissionOverTime","valueFunctionTypes","colorValueFunctionTypes","FileInput","handleChange","htmlFor","component","DialogTitle","other","palette","DialogContent","styled","MuiDialogContent","root","DialogActions","MuiDialogActions","TexturePicker","useState","selected","setSelected","Dialog","handleClose","dividers","flexWrap","justifyContent","overflow","paper","ImageList","rowHeight","cols","ImageListItem","src","alt","ImageListItemBar","title","subtitle","handleUpload","handleSelect","ParticleRendererProperties","onChangeSpeedFactor","order","onChangeRenderOrder","onChangeStartTile","onChangeUTileCount","onChangeVTileCount","onChangeBlending","getValueOfBlending","onChangeRenderMode","getValueOfRenderMode","onChangeWorldSpace","getValueOfBoolean","onUploadTexture","onload","reader","FileReader","readAsDataURL","onChangeTexture","closeTexturePicker","texturePickerOpen","openTexturePicker","gridWidth","gridHeight","objectPosition","ScriptEditor","onValueChange","highlight","code","languages","javascript","ScriptProperties","onChangeScript","EmitterShapeProperties","getValueOfShape","onChangeShape","onChangeKeyValue","k","properties","renderShapeProperties","PureComponent","ParticleSystemController","getSystems","checkPause","togglePause","play","pause","onRestart","restart","onStop","ButtonGroup","disabled","BehaviorsPropertiesFunc","checked","setChecked","selectedIndex","setSelectedIndex","setAnchorEl","onAddNewBehavior","onChangeBehaviorFunc","splice","List","dense","valueTypes","labelId","ListItem","handleListItemClick","ListItemIcon","Checkbox","currentIndex","newChecked","inputProps","ListItemText","primary","secondary","BehaviorsProperties","Accordion","disableGutters","elevation","square","border","divider","borderBottom","AccordionSummary","expandIcon","minHeight","flexDirection","marginLeft","marginTop","marginBottom","transform","AccordionDetails","MuiAccordionDetails","borderTop","StyledHeading","typography","fontWeightRegular","PropertiesEditor","expanded","setExpanded","panel","isExpanded","CodeExporter","str","word","toUpperCase","indent","exportColor","exportFunction","exportBezier","camelize","exportShape","exportBehavior","unquoted","camelizeClass","exportParticleEmitter","ScrollDialog","useRef","scroll","content","StyledTreeItemRoot","TreeItem","treeItemClasses","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeightMedium","action","label","group","paddingLeft","StyledTreeItem","bgColor","LabelIcon","labelIcon","labelInfo","labelText","alignItems","pr","mr","SceneGraphTreeView","setCode","countIndex","child","res","newIndex","nodeIds","parseInt","handleToggle","tagName","getObjectName","renderObject","items","originIndex","icon","CodeIcon","LightbulbIcon","CollectionsIcon","nodeId","Fragment","pxToRem","TreeView","onNodeToggle","onNodeSelect","defaultCollapseIcon","defaultExpandIcon","multiSelect","contextProps","exportCode","Application","createTheme","main","blue","red","App","ThemeProvider","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0c5a1b5.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport {createStyles, Theme, Typography, Toolbar, Box} from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AppBar from \"@mui/material/AppBar\";\nimport withStyles from \"@mui/material/styles/withStyles\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport {Blackhole} from \"../example/Blackhole\";\n\ninterface MainMenuProps {\n    onSaveAs: () => void;\n    onImport: (files: FileList) => void;\n    onOpenDemo: (demoIndex: number) => void;\n}\n\ninterface MainMenuState {\n    anchorEl?: Element\n}\n\nexport default class MainMenu extends React.PureComponent<MainMenuProps, MainMenuState> {\n    private fileRef: React.RefObject<HTMLInputElement>;\n\n    constructor(props: Readonly<MainMenuProps>) {\n        super(props);\n        this.state = {\n            anchorEl: undefined\n        }\n\n        this.fileRef = React.createRef();\n    }\n\n    openFileDialog = (e: React.MouseEvent<Element, MouseEvent>) => {\n        if (this.fileRef.current)\n            this.fileRef.current.click();\n    };\n\n    importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onImport(e.target.files);\n    };\n\n    openDemo = (demoIndex: number) => {\n        this.props.onOpenDemo(demoIndex);\n    };\n\n    handleMenuClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n        console.log(event.currentTarget);\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: undefined});\n    };\n\n    render() {\n        //<Image size='mini' src='/logo.png' style={{ marginRight: '1.5em' }} />\n        //<MenuIcon />\n        //<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n        //</IconButton>\n        return (\n            <Box sx={{flexGrow: 1}}>\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\">\n                        <IconButton edge=\"start\" sx={{marginRight: theme => theme.spacing(2)}} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" sx={{marginRight: theme => theme.spacing(1)}}>\n                            Three.Quarks\n                        </Typography>\n                        <Button color=\"inherit\" sx={{marginRight: theme => theme.spacing(1)}} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"file-button\">\n                            File\n                        </Button>\n                        <Menu\n                            id=\"file-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"file-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem>New</MenuItem>\n                            <MenuItem onClick={this.openFileDialog}>Open</MenuItem>\n                            <MenuItem onClick={this.props.onSaveAs}>Download</MenuItem>\n                            <input ref={this.fileRef} type=\"file\" id=\"fileElem\" multiple accept=\"application/json\"\n                                   style={{display: \"none\"}}\n                                   onChange={this.importFile}/>\n                        </Menu>\n                        <Button color=\"inherit\" sx={{marginRight: theme => theme.spacing(1)}} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"demo-button\">\n                            Demo\n                        </Button>\n                        <Menu\n                            id=\"demo-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"demo-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem onClick={() => this.openDemo(0)}>PlasmaProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(1)}>BulletMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(2)}>BulletProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(3)}>ShipSmoke</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(4)}>HitImpact</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(5)}>BlackHole</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(6)}>Levelup</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(7)}>EnergyMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(8)}>ElectricBall</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(9)}>ShipTrail</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(10)}>Explosion2</MenuItem>\n                        </Menu>\n                    </Toolbar>\n                </AppBar>\n            </Box>);\n    }\n}\n\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport const WEBGL = {\n    isWebGLAvailable: function () {\n\n        try {\n            const canvas = document.createElement( 'canvas' );\n            return !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n        } catch ( e ) {\n            return false;\n        }\n\n    },\n\n    isWebGL2Available: function () {\n        try {\n            const canvas = document.createElement( 'canvas' );\n            return !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n        } catch ( e ) {\n            return false;\n        }\n    },\n\n    getWebGLErrorMessage: function () {\n        return this.getErrorMessage( 1 );\n    },\n\n    getWebGL2ErrorMessage: function () {\n        return this.getErrorMessage( 2 );\n    },\n\n    getErrorMessage: function ( version: number ) {\n        const names :{[version:number]: string} = {\n            1: 'WebGL',\n            2: 'WebGL 2'\n        };\n\n        const contexts :{[version:number]: any} = {\n            1: window.WebGLRenderingContext,\n            2: window.WebGL2RenderingContext\n        };\n\n        let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n        const element = document.createElement( 'div' );\n        element.id = 'webglmessage';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if ( contexts[ version ] ) {\n            message = message.replace( '$0', 'graphics card' );\n        } else {\n            message = message.replace( '$0', 'browser' );\n        }\n        message = message.replace( '$1', names[ version ] );\n        element.innerHTML = message;\n\n        return element;\n    }\n\n};\n","/**\n * three.quarks v0.4.1 build Sun Oct 17 2021\n * https://github.com/Alchemist0823/three.quarks#readme\n * Copyright 2021 Alchemist0823 <the.forrest.sun@gmail.com>, MIT\n */\nimport { Object3D, Vector4, Vector3, MathUtils, Quaternion, Matrix3, InstancedBufferGeometry, InstancedBufferAttribute, DynamicDrawUsage, Uniform, Vector2, ShaderMaterial, AdditiveBlending, Mesh, DoubleSide, FrontSide, PlaneBufferGeometry, Matrix4, NormalBlending, DefaultLoadingManager, LoaderUtils, FileLoader, LoadingManager, ImageLoader, CubeTexture, Texture, Group, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter } from 'three';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar ParticleEmitter = /*#__PURE__*/function (_Object3D) {\n  _inherits(ParticleEmitter, _Object3D);\n\n  var _super = _createSuper(ParticleEmitter);\n\n  //interleavedBuffer: InterleavedBuffer;\n  function ParticleEmitter(system) {\n    var _this;\n\n    _classCallCheck(this, ParticleEmitter);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"ParticleEmitter\");\n\n    _defineProperty(_assertThisInitialized(_this), \"system\", void 0);\n\n    _this.system = system;\n    _this.visible = false; // TODO: implement boundingVolume\n\n    return _this;\n  }\n\n  _createClass(ParticleEmitter, [{\n    key: \"clone\",\n    value: function clone() {\n      var system = this.system.clone();\n      return system.emitter;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {} // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n  }, {\n    key: \"extractFromCache\",\n    value: function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n      if (this.system !== null) object.ps = this.system.toJSON(meta);\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = this.extractFromCache(meta.geometries);\n        var materials = this.extractFromCache(meta.materials);\n        var textures = this.extractFromCache(meta.textures);\n        var images = this.extractFromCache(meta.images);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n      }\n\n      output.object = object;\n      return output;\n    }\n  }]);\n\n  return ParticleEmitter;\n}(Object3D);\n\nvar Particle = function Particle() {\n  _classCallCheck(this, Particle);\n\n  _defineProperty(this, \"startSpeed\", 0);\n\n  _defineProperty(this, \"startColor\", new Vector4());\n\n  _defineProperty(this, \"startSize\", 1);\n\n  _defineProperty(this, \"velocity\", new Vector3());\n\n  _defineProperty(this, \"age\", 0);\n\n  _defineProperty(this, \"life\", 1);\n\n  _defineProperty(this, \"angularVelocity\", void 0);\n\n  _defineProperty(this, \"position\", new Vector3());\n\n  _defineProperty(this, \"rotation\", 0);\n\n  _defineProperty(this, \"rotationQuat\", void 0);\n\n  _defineProperty(this, \"size\", 1);\n\n  _defineProperty(this, \"color\", new Vector4());\n\n  _defineProperty(this, \"uvTile\", 0);\n};\n\nvar ConstantValue = /*#__PURE__*/function () {\n  function ConstantValue(value) {\n    _classCallCheck(this, ConstantValue);\n\n    this.value = value;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return this.value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantValue\",\n        value: this.value\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantValue(this.value);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantValue(json.value);\n    }\n  }]);\n\n  return ConstantValue;\n}();\n\nvar IntervalValue = /*#__PURE__*/function () {\n  function IntervalValue(a, b) {\n    _classCallCheck(this, IntervalValue);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(IntervalValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return MathUtils.lerp(this.a, this.b, Math.random());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"IntervalValue\",\n        a: this.a,\n        b: this.b\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new IntervalValue(this.a, this.b);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new IntervalValue(json.a, json.b);\n    }\n  }]);\n\n  return IntervalValue;\n}();\n\nvar PiecewiseFunction = /*#__PURE__*/function () {\n  function PiecewiseFunction() {\n    _classCallCheck(this, PiecewiseFunction);\n\n    _defineProperty(this, \"functions\", void 0);\n\n    this.functions = new Array();\n  }\n\n  _createClass(PiecewiseFunction, [{\n    key: \"findFunction\",\n    value: function findFunction(t) {\n      var mid = 0;\n      var left = 0,\n          right = this.functions.length - 1;\n\n      while (left + 1 < right) {\n        mid = Math.floor((left + right) / 2);\n        if (t < this.getStartX(mid)) right = mid - 1;else if (t > this.getEndX(mid)) left = mid + 1;else return mid;\n      }\n\n      for (var i = left; i <= right; i++) {\n        if (t >= this.functions[i][1] && t <= this.getEndX(i)) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"getStartX\",\n    value: function getStartX(index) {\n      return this.functions[index][1];\n    }\n  }, {\n    key: \"setStartX\",\n    value: function setStartX(index, x) {\n      if (index > 0) this.functions[index][1] = x;\n    }\n  }, {\n    key: \"getEndX\",\n    value: function getEndX(index) {\n      if (index + 1 < this.functions.length) return this.functions[index + 1][1];\n      return 1;\n    }\n  }, {\n    key: \"setEndX\",\n    value: function setEndX(index, x) {\n      if (index + 1 < this.functions.length) this.functions[index + 1][1] = x;\n    }\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(index) {\n      return this.functions[index][0];\n    }\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(index, func) {\n      this.functions[index][0] = func;\n    }\n  }, {\n    key: \"numOfFunctions\",\n    get: function get() {\n      return this.functions.length;\n    }\n  }]);\n\n  return PiecewiseFunction;\n}();\n\nvar Bezier = /*#__PURE__*/function () {\n  function Bezier(p1, p2, p3, p4) {\n    _classCallCheck(this, Bezier);\n\n    _defineProperty(this, \"p\", void 0);\n\n    this.p = [p1, p2, p3, p4];\n  }\n\n  _createClass(Bezier, [{\n    key: \"genValue\",\n    value: function genValue(t) {\n      var t2 = t * t;\n      var t3 = t * t * t;\n      var mt = 1 - t;\n      var mt2 = mt * mt;\n      var mt3 = mt2 * mt;\n      return this.p[0] * mt3 + this.p[1] * mt2 * t * 3 + this.p[2] * mt * t2 * 3 + this.p[3] * t3;\n    } // get the coefficients of the polynomial's derivatives\n\n  }, {\n    key: \"derivativeCoefficients\",\n    value: function derivativeCoefficients(points) {\n      var dpoints = [];\n\n      for (var p = points, c = p.length - 1; c > 0; c--) {\n        var list = [];\n\n        for (var j = 0; j < c; j++) {\n          var dpt = c * (p[j + 1] - p[j]);\n          list.push(dpt);\n        }\n\n        dpoints.push(list);\n        p = list;\n      }\n\n      return dpoints;\n    } // calculate the slope\n\n  }, {\n    key: \"getSlope\",\n    value: function getSlope(t) {\n      var p = this.derivativeCoefficients(this.p)[0];\n      var mt = 1 - t;\n      var a = mt * mt;\n      var b = mt * t * 2;\n      var c = t * t;\n      return a * p[0] + b * p[1] + c * p[2]; //return  a * (p[1] - p[0]) * 3 + b * (p[2] - p[1]) * 3 + c * (p[3] - p[2]) * 3;\n    } // derivative(0) = (p[1] - p[0]) * 3\n    // derivative(1) = (p[3] - p[2]) * 3\n\n  }, {\n    key: \"controlCurve\",\n    value: function controlCurve(d0, d1) {\n      this.p[1] = d0 / 3 + this.p[0];\n      this.p[2] = this.p[3] - d1 / 3;\n    }\n  }, {\n    key: \"hull\",\n    value: function hull(t) {\n      var p = this.p;\n      var _p = [],\n          pt,\n          q = [],\n          idx = 0,\n          i = 0,\n          l = 0;\n      q[idx++] = p[0];\n      q[idx++] = p[1];\n      q[idx++] = p[2];\n      q[idx++] = p[3]; // we lerp between all points at each iteration, until we have 1 point left.\n\n      while (p.length > 1) {\n        _p = [];\n\n        for (i = 0, l = p.length - 1; i < l; i++) {\n          pt = t * p[i] + (1 - t) * p[i + 1];\n          q[idx++] = pt;\n\n          _p.push(pt);\n        }\n\n        p = _p;\n      }\n\n      return q;\n    }\n  }, {\n    key: \"split\",\n    value: function split(t) {\n      // no shortcut: use \"de Casteljau\" iteration.\n      var q = this.hull(t);\n      var result = {\n        left: new Bezier(q[0], q[4], q[7], q[9]),\n        right: new Bezier(q[9], q[8], q[6], q[3]),\n        span: q\n      };\n      return result;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Bezier(this.p[0], this.p[1], this.p[2], this.p[3]);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        p0: this.p[0],\n        p1: this.p[1],\n        p2: this.p[2],\n        p3: this.p[3]\n      };\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Bezier(json.p0, json.p1, json.p2, json.p3);\n    }\n  }]);\n\n  return Bezier;\n}();\n\nvar PiecewiseBezier = /*#__PURE__*/function (_PiecewiseFunction) {\n  _inherits(PiecewiseBezier, _PiecewiseFunction);\n\n  var _super = _createSuper(PiecewiseBezier);\n\n  // default linear bezier\n  function PiecewiseBezier() {\n    var _this;\n\n    var curves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new Bezier(0, 1.0 / 3, 1.0 / 3 * 2, 1), 0]];\n\n    _classCallCheck(this, PiecewiseBezier);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _this.type = \"function\";\n    _this.functions = curves;\n    return _this;\n  }\n\n  _createClass(PiecewiseBezier, [{\n    key: \"genValue\",\n    value: function genValue() {\n      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return 0;\n      }\n\n      return this.functions[index][0].genValue((t - this.getStartX(index)) / (this.getEndX(index) - this.getStartX(index)));\n    }\n  }, {\n    key: \"toSVG\",\n    value: function toSVG(length, segments) {\n      if (segments < 1) return \"\";\n      var result = [\"M\", 0, this.functions[0][0].p[0]].join(\" \");\n\n      for (var i = 1.0 / segments; i <= 1; i += 1.0 / segments) {\n        result = [result, \"L\", i * length, this.genValue(i)].join(\" \");\n      }\n\n      return result;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"PiecewiseBezier\",\n        functions: this.functions.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              bezier = _ref2[0],\n              start = _ref2[1];\n\n          return {\n            \"function\": bezier.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PiecewiseBezier(this.functions.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            bezier = _ref4[0],\n            start = _ref4[1];\n\n        return [bezier.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new PiecewiseBezier(json.functions.map(function (piecewiseFunction) {\n        return [Bezier.fromJSON(piecewiseFunction[\"function\"]), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return PiecewiseBezier;\n}(PiecewiseFunction);\n\nfunction ValueGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantValue':\n      return ConstantValue.fromJSON(json);\n\n    case 'IntervalValue':\n      return IntervalValue.fromJSON(json);\n\n    case 'PiecewiseBezier':\n      return PiecewiseBezier.fromJSON(json);\n\n    default:\n      return new ConstantValue(0);\n  }\n}\n\nvar ColorToJSON = function ColorToJSON(color) {\n  return {\n    r: color.x,\n    g: color.y,\n    b: color.z,\n    a: color.w\n  };\n};\nvar JSONToColor = function JSONToColor(json) {\n  return new Vector4(json.r, json.g, json.b, json.a);\n};\n\nvar RandomColor = /*#__PURE__*/function () {\n  function RandomColor(a, b) {\n    _classCallCheck(this, RandomColor);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(RandomColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      var rand = Math.random();\n      return color.copy(this.a).lerp(this.b, rand);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"RandomColor\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RandomColor(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new RandomColor(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return RandomColor;\n}();\n\nvar ColorRange = /*#__PURE__*/function () {\n  function ColorRange(a, b) {\n    _classCallCheck(this, ColorRange);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"function\";\n  }\n\n  _createClass(ColorRange, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      return color.copy(this.a).lerp(this.b, t);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ColorRange\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorRange(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ColorRange(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return ColorRange;\n}();\n\nvar ConstantColor = /*#__PURE__*/function () {\n  function ConstantColor(color) {\n    _classCallCheck(this, ConstantColor);\n\n    this.color = color;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      return color.copy(this.color);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantColor\",\n        color: ColorToJSON(this.color)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantColor(this.color.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantColor(JSONToColor(json.color));\n    }\n  }]);\n\n  return ConstantColor;\n}();\nfunction ColorGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantColor':\n      return ConstantColor.fromJSON(json);\n\n    case 'ColorRange':\n      return ColorRange.fromJSON(json);\n\n    case 'RandomColor':\n      return RandomColor.fromJSON(json);\n\n    default:\n      return new ConstantColor(new Vector4(1, 1, 1, 1));\n  }\n}\n\nvar ColorOverLife = /*#__PURE__*/function () {\n  function ColorOverLife(func) {\n    _classCallCheck(this, ColorOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'ColorOverLife');\n  }\n\n  _createClass(ColorOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      this.func.genColor(particle.color, particle.age / particle.life);\n      particle.color.x *= particle.startColor.x;\n      particle.color.y *= particle.startColor.y;\n      particle.color.z *= particle.startColor.z;\n      particle.color.w *= particle.startColor.w;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorOverLife(this.func.clone());\n    }\n  }]);\n\n  return ColorOverLife;\n}();\n\nvar RotationOverLife = /*#__PURE__*/function () {\n  function RotationOverLife(angularVelocityFunc) {\n    _classCallCheck(this, RotationOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'RotationOverLife');\n  }\n\n  _createClass(RotationOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.rotation += delta * particle.angularVelocity;\n      } else {\n        particle.rotation += delta * this.angularVelocityFunc.genValue(particle.age / particle.life);\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RotationOverLife(this.angularVelocityFunc);\n    }\n  }]);\n\n  return RotationOverLife;\n}();\n\nvar SizeOverLife = /*#__PURE__*/function () {\n  function SizeOverLife(func) {\n    _classCallCheck(this, SizeOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SizeOverLife');\n  }\n\n  _createClass(SizeOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle) {\n      particle.size = particle.startSize * this.func.genValue(particle.age / particle.life);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SizeOverLife(this.func.clone());\n    }\n  }]);\n\n  return SizeOverLife;\n}();\n\nvar SpeedOverLife = /*#__PURE__*/function () {\n  function SpeedOverLife(func) {\n    _classCallCheck(this, SpeedOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SpeedOverLife');\n  }\n\n  _createClass(SpeedOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle) {\n      particle.velocity.normalize().multiplyScalar(particle.startSpeed * this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SpeedOverLife(this.func.clone());\n    }\n  }]);\n\n  return SpeedOverLife;\n}();\n\nvar FrameOverLife = /*#__PURE__*/function () {\n  function FrameOverLife(func) {\n    _classCallCheck(this, FrameOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'FrameOverLife');\n  }\n\n  _createClass(FrameOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      particle.uvTile = Math.floor(this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new FrameOverLife(this.func.clone());\n    }\n  }]);\n\n  return FrameOverLife;\n}();\n\nnew Vector3();\nvar OrbitOverLife = /*#__PURE__*/function () {\n  function OrbitOverLife(angularVelocityFunc) {\n    _classCallCheck(this, OrbitOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'OrbitOverLife');\n  }\n\n  _createClass(OrbitOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      var rotation = Math.atan2(particle.position.y, particle.position.x);\n      var len = Math.sqrt(particle.position.x * particle.position.x + particle.position.y * particle.position.y);\n      rotation += this.angularVelocityFunc.genValue(particle.age / particle.life) * delta;\n      particle.position.x = Math.cos(rotation) * len;\n      particle.position.y = Math.sin(rotation) * len; //let v1x = particle.position.x\n      //let v1y = particle.position.y;\n\n      /*let v2x = particle.position.y;\n      let v2y = -particle.position.x;\n      v2x /= len;\n      v2y /= len;\n      particle.position.distanceTo(V3_ZERO) * this.angularVelocityFunc.genValue(particle.age / particle.life);*/\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new OrbitOverLife(this.angularVelocityFunc.clone());\n    }\n  }]);\n\n  return OrbitOverLife;\n}();\n\nfunction BehaviorFromJSON(json) {\n  switch (json.type) {\n    case 'ColorOverLife':\n      return new ColorOverLife(ColorGeneratorFromJSON(json.func));\n\n    case 'RotationOverLife':\n      return new RotationOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'SizeOverLife':\n      return new SizeOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'SpeedOverLife':\n      return new SpeedOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'FrameOverLife':\n      return new FrameOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'OrbitOverLife':\n      return new OrbitOverLife(ValueGeneratorFromJSON(json.func));\n\n    default:\n      return new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)));\n  }\n}\n\nvar ConeEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function ConeEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ConeEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(ConeEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"cone\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConeEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return ConeEmitter;\n}();\n\nvar SphereEmitter = /*#__PURE__*/function () {\n  //[0, 1]\n  function SphereEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SphereEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n  }\n\n  _createClass(SphereEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.position.x = r * sinPhi * cosTheta;\n      p.position.y = r * sinPhi * sinTheta;\n      p.position.z = r * cosPhi;\n      p.velocity.setScalar(0).addScaledVector(p.position, p.startSpeed);\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"sphere\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SphereEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      });\n    }\n  }]);\n\n  return SphereEmitter;\n}();\n\nvar PointEmitter = /*#__PURE__*/function () {\n  function PointEmitter() {\n    _classCallCheck(this, PointEmitter);\n  }\n\n  _createClass(PointEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var theta = u * Math.PI * 2;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(Math.random());\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.velocity.x = r * sinPhi * cosTheta;\n      p.velocity.y = r * sinPhi * sinTheta;\n      p.velocity.z = r * cosPhi;\n      p.velocity.multiplyScalar(p.startSpeed);\n      p.position.setScalar(0);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: 'point'\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PointEmitter();\n    }\n  }]);\n\n  return PointEmitter;\n}();\n\nvar DonutEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function DonutEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DonutEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(DonutEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"donut\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new DonutEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return DonutEmitter;\n}();\n\nvar particle_frag = /* glsl */\n\"\\n\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\nvarying vec4 vColor;\\n\\nvoid main() {\\n\\n    #include <clipping_planes_fragment>\\n    \\n    vec3 outgoingLight = vec3( 0.0 );\\n    vec4 diffuseColor = vColor;\\n    \\n    #include <logdepthbuf_fragment>\\n    \\n    #ifdef USE_MAP\\n    vec4 texelColor = texture2D( map, vUv);\\n    diffuseColor *= texelColor;\\n    #endif\\n\\n    outgoingLight = diffuseColor.rgb;\\n\\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n    \\n    #include <tonemapping_fragment>\\n\\n}\\n\";\n/*\n    gl_FragColor = vec4(vUv.x, vUv.y, 1.0, 1.0);\n\n    #ifdef USE_MAP\n    vec4 texelColor = texture2D( map, vUv);\n    diffuseColor *= texelColor;\n    #endif\n\n    outgoingLight = diffuseColor.rgb;\n\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n*/\n\nvar particle_vert = /* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n\\t\\n    vec2 alignedPosition = ( position.xy ) * size;\\n    \\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n    \\n    mvPosition.xy += rotatedPosition;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar local_particle_vert = /* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute vec4 rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n    \\n    float x2 = rotation.x + rotation.x, y2 = rotation.y + rotation.y, z2 = rotation.z + rotation.z;\\n    float xx = rotation.x * x2, xy = rotation.x * y2, xz = rotation.x * z2;\\n    float yy = rotation.y * y2, yz = rotation.y * z2, zz = rotation.z * z2;\\n    float wx = rotation.w * x2, wy = rotation.w * y2, wz = rotation.w * z2;\\n    float sx = size, sy = size, sz = size;\\n    \\n    mat4 matrix = mat4(( 1.0 - ( yy + zz ) ) * sx, ( xy + wz ) * sx, ( xz - wy ) * sx, 0.0,  // 1. column\\n                      ( xy - wz ) * sy, ( 1.0 - ( xx + zz ) ) * sy, ( yz + wx ) * sy, 0.0,  // 2. column\\n                      ( xz + wy ) * sz, ( yz - wx ) * sz, ( 1.0 - ( xx + yy ) ) * sz, 0.0,  // 3. column\\n                      offset.x, offset.y, offset.z, 1.0);\\n    \\n    vec4 mvPosition = modelViewMatrix * (matrix * vec4( position, 1.0 ));\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n\nvar stretched_bb_particle_vert = /* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute vec3 velocity;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nuniform float speedFactor;\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n    vec3 viewVelocity = normalMatrix * velocity;\\n\\n    vec3 scaledPos = vec3(position.xy * size, position.z);\\n    mvPosition.xyz += scaledPos + dot(scaledPos, viewVelocity) * viewVelocity / length(viewVelocity) * speedFactor;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\n    vec3 instancePos = vec3(position.xy * size, position.z);\n    instancePos += dot(instancePos, viewVelocity) * viewVelocity * speedFactor;\n    mvPosition.xyz += instancePos;\n\n\tvColor = color; //vec4(1, 1, 1, 1); //color; //length(viewVelocity) * 0.1\n\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar RenderMode;\n\n(function (RenderMode) {\n  RenderMode[RenderMode[\"BillBoard\"] = 0] = \"BillBoard\";\n  RenderMode[RenderMode[\"StretchedBillBoard\"] = 1] = \"StretchedBillBoard\";\n  RenderMode[RenderMode[\"LocalSpace\"] = 2] = \"LocalSpace\";\n})(RenderMode || (RenderMode = {}));\n\nvar DEFAULT_MAX_PARTICLE = 1000;\nvar UP$1 = new Vector3(0, 0, 1);\nvar ParticleSystemBatch = /*#__PURE__*/function (_Mesh) {\n  _inherits(ParticleSystemBatch, _Mesh);\n\n  var _super = _createSuper(ParticleSystemBatch);\n\n  function ParticleSystemBatch(settings) {\n    var _this;\n\n    _classCallCheck(this, ParticleSystemBatch);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"ParticleSystemBatch\");\n\n    _defineProperty(_assertThisInitialized(_this), \"systems\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"geometry\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"material\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"sizeBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"colorBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uvTileBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"settings\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"vector_\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"quaternion_\", new Quaternion());\n\n    _defineProperty(_assertThisInitialized(_this), \"quaternion2_\", new Quaternion());\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationMat_\", new Matrix3());\n\n    _this.systems = new Set();\n    _this.geometry = new InstancedBufferGeometry();\n    _this.settings = settings;\n\n    _this.geometry.setIndex(_this.settings.instancingGeometry.getIndex());\n\n    _this.geometry.setAttribute('position', _this.settings.instancingGeometry.getAttribute('position')); //new InterleavedBufferAttribute(this.interleavedBuffer, 3, 0, false));\n\n\n    _this.geometry.setAttribute('uv', _this.settings.instancingGeometry.getAttribute('uv')); //new InterleavedBufferAttribute(this.interleavedBuffer, 2, 3, false));\n\n\n    _this.offsetBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE * 3), 3);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('offset', _this.offsetBuffer);\n\n    _this.colorBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE * 4), 4);\n\n    _this.colorBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('color', _this.colorBuffer);\n\n    if (settings.renderMode === RenderMode.LocalSpace) {\n      _this.rotationBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE * 4), 4);\n    } else {\n      _this.rotationBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE), 1);\n    }\n\n    _this.rotationBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('rotation', _this.rotationBuffer);\n\n    _this.sizeBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE), 1);\n\n    _this.sizeBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('size', _this.sizeBuffer);\n\n    _this.uvTileBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE), 1);\n\n    _this.uvTileBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('uvTile', _this.uvTileBuffer);\n\n    _this.rebuildMaterial(); // TODO: implement boundingVolume\n\n\n    _this.frustumCulled = false;\n    _this.renderOrder = _this.settings.renderOrder;\n    return _this;\n  }\n\n  _createClass(ParticleSystemBatch, [{\n    key: \"addSystem\",\n    value: function addSystem(system) {\n      this.systems.add(system);\n    }\n  }, {\n    key: \"removeSystem\",\n    value: function removeSystem(system) {\n      this.systems[\"delete\"](system);\n    }\n  }, {\n    key: \"rebuildMaterial\",\n    value: function rebuildMaterial() {\n      var uniforms = {};\n      var defines = {};\n      defines['USE_MAP'] = '';\n      defines['USE_UV'] = '';\n      uniforms['map'] = new Uniform(this.settings.texture); //@ts-ignore\n\n      uniforms['uvTransform'] = new Uniform(new Matrix3().copy(this.settings.texture.matrix));\n      var uTileCount = this.settings.uTileCount;\n      var vTileCount = this.settings.vTileCount;\n      defines['UV_TILE'] = '';\n      uniforms['tileCount'] = new Uniform(new Vector2(uTileCount, vTileCount));\n\n      if (this.settings.renderMode === RenderMode.BillBoard || this.settings.renderMode === RenderMode.LocalSpace) {\n        var vertexShader;\n        var side;\n\n        if (this.settings.renderMode === RenderMode.LocalSpace) {\n          vertexShader = local_particle_vert;\n          side = DoubleSide;\n        } else {\n          vertexShader = particle_vert;\n          side = FrontSide;\n        }\n\n        this.material = new ShaderMaterial({\n          uniforms: uniforms,\n          defines: defines,\n          vertexShader: vertexShader,\n          fragmentShader: particle_frag,\n          transparent: true,\n          depthWrite: false,\n          blending: this.settings.blending || AdditiveBlending,\n          side: side\n        });\n      } else if (this.settings.renderMode === RenderMode.StretchedBillBoard) {\n        this.velocityBuffer = new InstancedBufferAttribute(new Float32Array(DEFAULT_MAX_PARTICLE * 3), 3);\n        this.velocityBuffer.setUsage(DynamicDrawUsage);\n        this.geometry.setAttribute('velocity', this.velocityBuffer);\n        uniforms['speedFactor'] = new Uniform(1.0);\n        this.material = new ShaderMaterial({\n          uniforms: uniforms,\n          defines: defines,\n          vertexShader: stretched_bb_particle_vert,\n          fragmentShader: particle_frag,\n          transparent: true,\n          depthWrite: false,\n          blending: this.settings.blending || AdditiveBlending\n        });\n      } else {\n        throw new Error(\"render mode unavailable\");\n      }\n    }\n    /*\n    clone() {\n        let system = this.system.clone();\n        return system.emitter as any;\n    }*/\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this2 = this;\n\n      var index = 0;\n      this.systems.forEach(function (system) {\n        var particles = system.particles;\n        var particleNum = system.particleNum;\n\n        _this2.quaternion2_.setFromRotationMatrix(system.emitter.matrixWorld);\n\n        _this2.rotationMat_.setFromMatrix4(system.emitter.matrixWorld);\n\n        for (var j = 0; j < particleNum; j++, index++) {\n          var particle = particles[j];\n\n          if (_this2.settings.renderMode === RenderMode.LocalSpace) {\n            particle.rotationQuat.setFromAxisAngle(UP$1, particle.rotation);\n\n            if (system.worldSpace) {\n              _this2.rotationBuffer.setXYZW(index, particle.rotationQuat.x, particle.rotationQuat.y, particle.rotationQuat.z, particle.rotationQuat.w);\n            } else {\n              _this2.quaternion_.copy(particle.rotationQuat).multiply(_this2.quaternion2_);\n\n              _this2.rotationBuffer.setXYZW(index, _this2.quaternion_.x, _this2.quaternion_.y, _this2.quaternion_.z, _this2.quaternion_.w);\n            }\n          } else {\n            _this2.rotationBuffer.setX(index, particle.rotation);\n          }\n\n          if (system.worldSpace) {\n            _this2.offsetBuffer.setXYZ(index, particle.position.x, particle.position.y, particle.position.z);\n          } else {\n            _this2.vector_.copy(particle.position).applyMatrix4(system.emitter.matrixWorld);\n\n            _this2.offsetBuffer.setXYZ(index, _this2.vector_.x, _this2.vector_.y, _this2.vector_.z);\n          }\n\n          _this2.colorBuffer.setXYZW(index, particle.color.x, particle.color.y, particle.color.z, particle.color.w);\n\n          _this2.sizeBuffer.setX(index, particle.size);\n\n          _this2.uvTileBuffer.setX(index, particle.uvTile);\n\n          if (_this2.settings.renderMode === RenderMode.StretchedBillBoard) {\n            if (system.worldSpace) {\n              _this2.velocityBuffer.setXYZ(index, particle.velocity.x * system.speedFactor, particle.velocity.y * system.speedFactor, particle.velocity.z * system.speedFactor);\n            } else {\n              _this2.vector_.copy(particle.velocity).applyMatrix3(_this2.rotationMat_);\n\n              _this2.velocityBuffer.setXYZ(index, _this2.vector_.x * system.speedFactor, _this2.vector_.y * system.speedFactor, _this2.vector_.z * system.speedFactor);\n            }\n          }\n        }\n      });\n      this.geometry.instanceCount = index;\n\n      if (index > 0) {\n        this.offsetBuffer.updateRange.count = index * 3;\n        this.offsetBuffer.needsUpdate = true;\n        this.sizeBuffer.updateRange.count = index;\n        this.sizeBuffer.needsUpdate = true;\n        this.colorBuffer.updateRange.count = index * 4;\n        this.colorBuffer.needsUpdate = true;\n        this.uvTileBuffer.updateRange.count = index;\n        this.uvTileBuffer.needsUpdate = true;\n\n        if (this.settings.renderMode === RenderMode.StretchedBillBoard) {\n          this.velocityBuffer.updateRange.count = index * 3;\n          this.velocityBuffer.needsUpdate = true;\n        }\n\n        if (this.settings.renderMode === RenderMode.LocalSpace) {\n          this.rotationBuffer.updateRange.count = index * 4;\n        } else {\n          this.rotationBuffer.updateRange.count = index;\n        }\n\n        this.rotationBuffer.needsUpdate = true;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n    }\n  }]);\n\n  return ParticleSystemBatch;\n}(Mesh);\n\nvar UP = new Vector3(0, 0, 1);\nvar DEFAULT_GEOMETRY = new PlaneBufferGeometry(1, 1, 1, 1);\nvar ParticleSystem = /*#__PURE__*/function () {\n  function ParticleSystem(renderer, parameters) {\n    var _parameters$duration, _parameters$maxPartic, _parameters$startLife, _parameters$startSpee, _parameters$startRota, _parameters$startSize, _parameters$startColo, _parameters$emissionO, _parameters$emissionO2, _parameters$emissionB, _parameters$shape, _parameters$behaviors, _parameters$worldSpac, _parameters$speedFact, _parameters$blending, _parameters$instancin, _parameters$renderMod, _parameters$renderOrd, _parameters$uTileCoun, _parameters$vTileCoun;\n\n    _classCallCheck(this, ParticleSystem);\n\n    _defineProperty(this, \"autoDestroy\", void 0);\n\n    _defineProperty(this, \"looping\", void 0);\n\n    _defineProperty(this, \"duration\", void 0);\n\n    _defineProperty(this, \"maxParticle\", void 0);\n\n    _defineProperty(this, \"startLife\", void 0);\n\n    _defineProperty(this, \"startSpeed\", void 0);\n\n    _defineProperty(this, \"startRotation\", void 0);\n\n    _defineProperty(this, \"startSize\", void 0);\n\n    _defineProperty(this, \"startColor\", void 0);\n\n    _defineProperty(this, \"startTileIndex\", void 0);\n\n    _defineProperty(this, \"emissionOverTime\", void 0);\n\n    _defineProperty(this, \"emissionOverDistance\", void 0);\n\n    _defineProperty(this, \"emissionBursts\", void 0);\n\n    _defineProperty(this, \"worldSpace\", void 0);\n\n    _defineProperty(this, \"speedFactor\", void 0);\n\n    _defineProperty(this, \"particleNum\", void 0);\n\n    _defineProperty(this, \"burstIndex\", void 0);\n\n    _defineProperty(this, \"burstWaveIndex\", void 0);\n\n    _defineProperty(this, \"time\", void 0);\n\n    _defineProperty(this, \"paused\", void 0);\n\n    _defineProperty(this, \"waitEmiting\", void 0);\n\n    _defineProperty(this, \"emitEnded\", void 0);\n\n    _defineProperty(this, \"markForDestroy\", void 0);\n\n    _defineProperty(this, \"behaviors\", void 0);\n\n    _defineProperty(this, \"particles\", void 0);\n\n    _defineProperty(this, \"emitterShape\", void 0);\n\n    _defineProperty(this, \"emitter\", void 0);\n\n    _defineProperty(this, \"rendererSettings\", void 0);\n\n    _defineProperty(this, \"renderer\", void 0);\n\n    _defineProperty(this, \"neededToUpdateRender\", void 0);\n\n    _defineProperty(this, \"oldWorldMatrix\", new Matrix4());\n\n    _defineProperty(this, \"normalMatrix\", new Matrix3());\n\n    _defineProperty(this, \"firstTimeUpdate\", true);\n\n    this.renderer = renderer;\n    this.autoDestroy = parameters.autoDestroy === undefined ? false : parameters.autoDestroy;\n    this.duration = (_parameters$duration = parameters.duration) !== null && _parameters$duration !== void 0 ? _parameters$duration : 1;\n    this.maxParticle = (_parameters$maxPartic = parameters.maxParticle) !== null && _parameters$maxPartic !== void 0 ? _parameters$maxPartic : 100;\n    this.looping = parameters.looping === undefined ? true : parameters.looping;\n    this.startLife = (_parameters$startLife = parameters.startLife) !== null && _parameters$startLife !== void 0 ? _parameters$startLife : new ConstantValue(5);\n    this.startSpeed = (_parameters$startSpee = parameters.startSpeed) !== null && _parameters$startSpee !== void 0 ? _parameters$startSpee : new ConstantValue(0);\n    this.startRotation = (_parameters$startRota = parameters.startRotation) !== null && _parameters$startRota !== void 0 ? _parameters$startRota : new ConstantValue(0);\n    this.startSize = (_parameters$startSize = parameters.startSize) !== null && _parameters$startSize !== void 0 ? _parameters$startSize : new ConstantValue(1);\n    this.startColor = (_parameters$startColo = parameters.startColor) !== null && _parameters$startColo !== void 0 ? _parameters$startColo : new ConstantColor(new Vector4(1, 1, 1, 1));\n    this.emissionOverTime = (_parameters$emissionO = parameters.emissionOverTime) !== null && _parameters$emissionO !== void 0 ? _parameters$emissionO : new ConstantValue(10);\n    this.emissionOverDistance = (_parameters$emissionO2 = parameters.emissionOverDistance) !== null && _parameters$emissionO2 !== void 0 ? _parameters$emissionO2 : new ConstantValue(0);\n    this.emissionBursts = (_parameters$emissionB = parameters.emissionBursts) !== null && _parameters$emissionB !== void 0 ? _parameters$emissionB : [];\n    this.emitterShape = (_parameters$shape = parameters.shape) !== null && _parameters$shape !== void 0 ? _parameters$shape : new SphereEmitter();\n    this.behaviors = (_parameters$behaviors = parameters.behaviors) !== null && _parameters$behaviors !== void 0 ? _parameters$behaviors : new Array();\n    this.worldSpace = (_parameters$worldSpac = parameters.worldSpace) !== null && _parameters$worldSpac !== void 0 ? _parameters$worldSpac : false;\n    this.speedFactor = (_parameters$speedFact = parameters.speedFactor) !== null && _parameters$speedFact !== void 0 ? _parameters$speedFact : 0;\n    this.rendererSettings = {\n      blending: (_parameters$blending = parameters.blending) !== null && _parameters$blending !== void 0 ? _parameters$blending : NormalBlending,\n      instancingGeometry: (_parameters$instancin = parameters.instancingGeometry) !== null && _parameters$instancin !== void 0 ? _parameters$instancin : DEFAULT_GEOMETRY,\n      renderMode: (_parameters$renderMod = parameters.renderMode) !== null && _parameters$renderMod !== void 0 ? _parameters$renderMod : RenderMode.BillBoard,\n      renderOrder: (_parameters$renderOrd = parameters.renderOrder) !== null && _parameters$renderOrd !== void 0 ? _parameters$renderOrd : 0,\n      texture: parameters.texture,\n      uTileCount: (_parameters$uTileCoun = parameters.uTileCount) !== null && _parameters$uTileCoun !== void 0 ? _parameters$uTileCoun : 1,\n      vTileCount: (_parameters$vTileCoun = parameters.vTileCount) !== null && _parameters$vTileCoun !== void 0 ? _parameters$vTileCoun : 1\n    };\n    this.neededToUpdateRender = true;\n    this.particles = new Array();\n    this.startTileIndex = parameters.startTileIndex || 0;\n    this.emitter = new ParticleEmitter(this);\n    this.particleNum = 0;\n    this.burstIndex = 0;\n    this.burstWaveIndex = 0;\n    this.time = 0;\n    this.paused = false;\n    this.waitEmiting = 0;\n    this.emitEnded = false;\n    this.markForDestroy = false;\n  }\n\n  _createClass(ParticleSystem, [{\n    key: \"texture\",\n    get: // parameters\n    // runtime data\n    function get() {\n      return this.rendererSettings.texture;\n    },\n    set: function set(texture) {\n      this.rendererSettings.texture = texture;\n      this.neededToUpdateRender = true; //this.emitter.material.uniforms.map.value = texture;\n    }\n  }, {\n    key: \"uTileCount\",\n    get: function get() {\n      return this.rendererSettings.uTileCount;\n    },\n    set: function set(u) {\n      this.rendererSettings.uTileCount = u;\n      this.neededToUpdateRender = true; //this.emitter.material.uniforms.tileCount.value.x = u;\n    }\n  }, {\n    key: \"vTileCount\",\n    get: function get() {\n      return this.rendererSettings.vTileCount;\n    },\n    set: function set(v) {\n      this.rendererSettings.vTileCount = v;\n      this.neededToUpdateRender = true;\n    }\n  }, {\n    key: \"renderMode\",\n    get: function get() {\n      return this.rendererSettings.renderMode;\n    },\n    set: function set(renderMode) {\n      this.rendererSettings.renderMode = renderMode;\n      this.neededToUpdateRender = true; //this.emitter.rebuildMaterial();\n    }\n  }, {\n    key: \"renderOrder\",\n    get: function get() {\n      return this.rendererSettings.renderOrder;\n    },\n    set: function set(renderOrder) {\n      this.rendererSettings.renderOrder = renderOrder;\n      this.neededToUpdateRender = true; //this.emitter.rebuildMaterial();\n    }\n  }, {\n    key: \"blending\",\n    get: function get() {\n      return this.rendererSettings.blending;\n    },\n    set: function set(blending) {\n      this.rendererSettings.blending = blending;\n      this.neededToUpdateRender = true;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.paused = true;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.paused = false;\n    }\n  }, {\n    key: \"spawn\",\n    value: function spawn(count) {\n      for (var i = 0; i < count && this.particleNum < this.maxParticle; i++) {\n        this.particleNum++;\n\n        while (this.particles.length < this.particleNum) {\n          this.particles.push(new Particle());\n        }\n\n        var particle = this.particles[this.particleNum - 1];\n        this.startColor.genColor(particle.startColor, this.time);\n        particle.color.copy(particle.startColor);\n        particle.startSpeed = this.startSpeed.genValue(this.time);\n        particle.life = this.startLife.genValue(this.time);\n        particle.age = 0;\n        particle.rotation = this.startRotation.genValue(this.time);\n        if (this.rendererSettings.renderMode === RenderMode.LocalSpace) particle.rotationQuat = new Quaternion().setFromAxisAngle(UP, particle.rotation);\n        particle.startSize = particle.size = this.startSize.genValue(this.time);\n        particle.uvTile = this.startTileIndex;\n        this.emitterShape.initialize(particle);\n\n        if (this.worldSpace) {\n          particle.position.applyMatrix4(this.emitter.matrixWorld);\n          particle.velocity.applyMatrix3(this.normalMatrix);\n        }\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].initialize(particle);\n        }\n      }\n    }\n  }, {\n    key: \"endEmit\",\n    value: function endEmit() {\n      this.emitEnded = true;\n\n      if (this.autoDestroy) {\n        this.markForDestroy = true;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderer.deleteSystem(this);\n      this.emitter.dispose();\n      if (this.emitter.parent) this.emitter.parent.remove(this.emitter);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.paused = false;\n      this.particleNum = 0;\n      this.burstIndex = 0;\n      this.burstWaveIndex = 0;\n      this.time = 0;\n      this.waitEmiting = 0;\n      this.emitEnded = false;\n      this.markForDestroy = false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this.firstTimeUpdate) {\n        this.renderer.addSystem(this);\n        this.firstTimeUpdate = false;\n      }\n\n      if (delta > 0.1) delta = 0.1;\n      if (this.paused) return;\n\n      if (this.emitEnded && this.particleNum === 0) {\n        if (this.markForDestroy && this.emitter.parent) this.dispose();\n        return;\n      }\n\n      if (this.time > this.duration) {\n        if (this.looping) {\n          this.time -= this.duration;\n        } else {\n          if (!this.emitEnded) {\n            this.endEmit();\n          }\n        }\n      }\n\n      if (this.neededToUpdateRender) {\n        this.renderer.updateSystem(this);\n        this.neededToUpdateRender = false;\n      }\n\n      this.normalMatrix.getNormalMatrix(this.emitter.matrixWorld); // particle die\n\n      for (var i = 0; i < this.particleNum; i++) {\n        var particle = this.particles[i];\n\n        if (particle.age >= particle.life) {\n          this.particles[i] = this.particles[this.particleNum - 1];\n          this.particles[this.particleNum - 1] = particle;\n          this.particleNum--;\n          i--;\n        }\n      } // spawn\n\n\n      if (!this.emitEnded) {\n        var totalSpawn = Math.ceil(this.waitEmiting);\n        this.spawn(totalSpawn);\n        this.waitEmiting -= totalSpawn;\n      } // spawn burst\n\n\n      while (this.burstIndex < this.emissionBursts.length && this.emissionBursts[this.burstIndex].time <= this.time) {\n        if (Math.random() < this.emissionBursts[this.burstIndex].probability) {\n          var count = this.emissionBursts[this.burstIndex].count;\n          this.spawn(count);\n        }\n\n        this.burstIndex++;\n      }\n\n      for (var _i = 0; _i < this.particleNum; _i++) {\n        var _particle = this.particles[_i];\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].update(_particle, delta);\n        }\n\n        _particle.position.addScaledVector(_particle.velocity, delta);\n\n        _particle.age += delta;\n      } //this.emitter.update();\n\n\n      this.oldWorldMatrix.copy(this.emitter.matrixWorld);\n\n      if (!this.emitEnded) {\n        this.waitEmiting += delta * this.emissionOverTime.genValue(this.time / this.duration);\n      }\n\n      this.time += delta;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      this.texture.toJSON(meta);\n\n      if (this.texture.image !== undefined) {\n        var image = this.texture.image;\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: this.texture.name\n        };\n      }\n\n      return {\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.toJSON(),\n        startLife: this.startLife.toJSON(),\n        startSpeed: this.startSpeed.toJSON(),\n        startRotation: this.startRotation.toJSON(),\n        startSize: this.startSize.toJSON(),\n        startColor: this.startColor.toJSON(),\n        emissionOverTime: this.emissionOverTime.toJSON(),\n        emissionOverDistance: this.emissionOverDistance.toJSON(),\n        emissionBursts: this.emissionBursts,\n        instancingGeometry: this.rendererSettings.instancingGeometry.toJSON(),\n        //Array.from(this.emitter.interleavedBuffer.array as Float32Array),\n        renderOrder: this.renderOrder,\n        renderMode: this.renderMode,\n        speedFactor: this.renderMode === RenderMode.StretchedBillBoard ? this.speedFactor : 0,\n        texture: this.texture.uuid,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: this.behaviors.map(function (behavior) {\n          return behavior.toJSON();\n        }),\n        worldSpace: this.worldSpace\n      };\n    }\n  }, {\n    key: \"addBehavior\",\n    value: function addBehavior(behavior) {\n      this.behaviors.push(behavior);\n    }\n  }, {\n    key: \"getRendererSettings\",\n    value: function getRendererSettings() {\n      return this.rendererSettings;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newEmissionBursts = [];\n\n      var _iterator = _createForOfIteratorHelper(this.emissionBursts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var emissionBurst = _step.value;\n          var newEmissionBurst = {};\n          Object.assign(newEmissionBurst, emissionBurst);\n          newEmissionBursts.push(newEmissionBurst);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var newBehaviors = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.behaviors),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var behavior = _step2.value;\n          newBehaviors.push(behavior.clone());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return new ParticleSystem(this.renderer, {\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.clone(),\n        startLife: this.startLife.clone(),\n        startSpeed: this.startSpeed.clone(),\n        startRotation: this.startRotation.clone(),\n        startSize: this.startSize.clone(),\n        startColor: this.startColor.clone(),\n        emissionOverTime: this.emissionOverTime.clone(),\n        emissionOverDistance: this.emissionOverDistance.clone(),\n        emissionBursts: newEmissionBursts,\n        instancingGeometry: this.rendererSettings.instancingGeometry,\n        //.interleavedBuffer.array,\n        renderMode: this.renderMode,\n        speedFactor: this.speedFactor,\n        texture: this.texture,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: newBehaviors,\n        worldSpace: this.worldSpace\n      });\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json, textures, renderer) {\n      var shape;\n\n      switch (json.shape.type) {\n        case 'cone':\n          shape = new ConeEmitter(json.shape);\n          break;\n\n        case 'donut':\n          shape = new DonutEmitter(json.shape);\n          break;\n\n        case 'point':\n          shape = new PointEmitter();\n          break;\n\n        case 'sphere':\n          shape = new SphereEmitter(json.shape);\n          break;\n\n        default:\n          shape = new PointEmitter();\n          break;\n      }\n\n      return new ParticleSystem(renderer, {\n        autoDestroy: json.autoDestroy,\n        looping: json.looping,\n        duration: json.duration,\n        maxParticle: json.maxParticle,\n        shape: shape,\n        startLife: ValueGeneratorFromJSON(json.startLife),\n        startSpeed: ValueGeneratorFromJSON(json.startSpeed),\n        startRotation: ValueGeneratorFromJSON(json.startRotation),\n        startSize: ValueGeneratorFromJSON(json.startSize),\n        startColor: ColorGeneratorFromJSON(json.startColor),\n        emissionOverTime: ValueGeneratorFromJSON(json.emissionOverTime),\n        emissionOverDistance: ValueGeneratorFromJSON(json.emissionOverDistance),\n        emissionBursts: json.emissionBursts,\n        //instancingGeometry: json.instancingGeometry, //TODO: Support instancing Geometry in deserialization\n        renderMode: json.renderMode,\n        renderOrder: json.renderOrder,\n        speedFactor: json.speedFactor,\n        texture: textures[json.texture],\n        startTileIndex: json.startTileIndex,\n        uTileCount: json.uTileCount,\n        vTileCount: json.vTileCount,\n        blending: json.blending,\n        behaviors: json.behaviors.map(function (behavior) {\n          return BehaviorFromJSON(behavior);\n        }),\n        worldSpace: json.worldSpace\n      });\n    }\n  }]);\n\n  return ParticleSystem;\n}();\n\nvar BatchedParticleRenderer = /*#__PURE__*/function (_Object3D) {\n  _inherits(BatchedParticleRenderer, _Object3D);\n\n  var _super = _createSuper(BatchedParticleRenderer);\n\n  function BatchedParticleRenderer() {\n    var _this;\n\n    _classCallCheck(this, BatchedParticleRenderer);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"batches\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"BatchedParticleRenderer\");\n\n    return _this;\n  }\n\n  _createClass(BatchedParticleRenderer, [{\n    key: \"addSystem\",\n    value: function addSystem(system) {\n      var settings = system.getRendererSettings();\n\n      for (var i = 0; i < this.batches.length; i++) {\n        if (BatchedParticleRenderer.equals(this.batches[i].settings, settings)) {\n          this.batches[i].addSystem(system);\n          return;\n        }\n      }\n\n      var batch = new ParticleSystemBatch(settings);\n      batch.addSystem(system);\n      this.batches.push(batch);\n      this.add(batch);\n    }\n  }, {\n    key: \"deleteSystem\",\n    value: function deleteSystem(system) {\n      var settings = system.getRendererSettings();\n\n      for (var i = 0; i < this.batches.length; i++) {\n        if (BatchedParticleRenderer.equals(this.batches[i].settings, settings)) {\n          this.batches[i].removeSystem(system);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"updateSystem\",\n    value: function updateSystem(system) {}\n  }, {\n    key: \"update\",\n    value: function update() {\n      for (var i = 0; i < this.batches.length; i++) {\n        this.batches[i].update();\n      }\n    }\n  }], [{\n    key: \"equals\",\n    value: function equals(a, b) {\n      return a.texture === b.texture && a.blending === b.blending && a.renderMode === b.renderMode && a.uTileCount === b.uTileCount && a.vTileCount === b.vTileCount && a.instancingGeometry === b.instancingGeometry && a.renderOrder === b.renderOrder;\n    }\n  }]);\n\n  return BatchedParticleRenderer;\n}(Object3D);\n\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  //SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipMapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipMapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipMapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipMapLinearFilter\n};\nvar QuarksLoader = /*#__PURE__*/function () {\n  function QuarksLoader(manager) {\n    _classCallCheck(this, QuarksLoader);\n\n    _defineProperty(this, \"manager\", void 0);\n\n    _defineProperty(this, \"crossOrigin\", \"anonymous\");\n\n    _defineProperty(this, \"path\", void 0);\n\n    _defineProperty(this, \"resourcePath\", void 0);\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.resourcePath = '';\n  }\n\n  _createClass(QuarksLoader, [{\n    key: \"setPath\",\n    value: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  }, {\n    key: \"setResourcePath\",\n    value: function setResourcePath(value) {\n      this.resourcePath = value;\n      return this;\n    }\n  }, {\n    key: \"setCrossOrigin\",\n    value: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, renderer, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === undefined ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(scope.manager);\n      if (this.path) loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad, renderer);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(loader, url) {\n      var scope = this;\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    }\n  }, {\n    key: \"parseImages\",\n    value: function parseImages(json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n              images[image.uuid].push(this.loadImage(loader, path));\n            }\n          } else {\n            // load single image\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n            images[image.uuid] = this.loadImage(loader, path);\n          }\n        }\n      }\n\n      return images;\n    }\n  }, {\n    key: \"parseTextures\",\n    value: function parseTextures(json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture;\n\n          if (Array.isArray(images[data.image])) {\n            texture = new CubeTexture(images[data.image]);\n          } else {\n            texture = new Texture(images[data.image]);\n          }\n\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.type !== undefined) texture.type = data.type;\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    }\n  }, {\n    key: \"parseObject\",\n    value: function parseObject(data, textures, renderer) {\n      var object;\n\n      switch (data.type) {\n        case 'ParticleEmitter':\n          object = ParticleSystem.fromJSON(data.ps, textures, renderer).emitter;\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], textures, renderer));\n        }\n      }\n\n      return object;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json, onLoad, renderer) {\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var object = this.parseObject(json.object, textures, renderer);\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    }\n  }]);\n\n  return QuarksLoader;\n}();\n\nvar Gradient = /*#__PURE__*/function (_PiecewiseFunction) {\n  _inherits(Gradient, _PiecewiseFunction);\n\n  var _super = _createSuper(Gradient);\n\n  // default linear bezier\n  function Gradient() {\n    var _this;\n\n    var functions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new ColorRange(new Vector4(0, 0, 0, 1), new Vector4(1, 1, 1, 1)), 0]];\n\n    _classCallCheck(this, Gradient);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _this.type = \"function\";\n    _this.functions = functions;\n    return _this;\n  }\n\n  _createClass(Gradient, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return color.copy(this.functions[0][0].a);\n      }\n\n      return this.getFunction(index).genColor(color, (t - this.getStartX(index)) / (this.getEndX(index) - this.getStartX(index)));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"Gradient\",\n        functions: this.functions.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              range = _ref2[0],\n              start = _ref2[1];\n\n          return {\n            \"function\": range.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Gradient(this.functions.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            range = _ref4[0],\n            start = _ref4[1];\n\n        return [range.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Gradient(json.functions.map(function (piecewiseFunction) {\n        return [ColorRange.fromJSON(piecewiseFunction[\"function\"]), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return Gradient;\n}(PiecewiseFunction);\n\nexport { BatchedParticleRenderer, BehaviorFromJSON, Bezier, ColorGeneratorFromJSON, ColorOverLife, ColorRange, ConeEmitter, ConstantColor, ConstantValue, DonutEmitter, FrameOverLife, Gradient, IntervalValue, OrbitOverLife, Particle, ParticleEmitter, ParticleSystem, ParticleSystemBatch, PiecewiseBezier, PiecewiseFunction, PointEmitter, QuarksLoader, RandomColor, RenderMode, RotationOverLife, SizeOverLife, SpeedOverLife, SphereEmitter, ValueGeneratorFromJSON };\n","import {AdditiveBlending, Group, NormalBlending, Texture, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, ColorOverLife, ParticleSystem, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ToonProjectile extends Group {\n    private particles: ParticleSystem;\n    private smoke: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private mainBeam: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.name = 'mainBeam';\n\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(3.5),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(2, 5),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 4.8423 / 180 * Math.PI,\n                radius: .3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .01,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n\n        this.add(this.particles.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            startLife: new IntervalValue(0.25, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(.75, 1.25),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new SphereEmitter({\n                radius: .2,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.name = 'smoke';\n\n        this.add(this.smoke.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    ColorOverLife,\n    ParticleSystem,\n    PointEmitter,\n    RenderMode,\n    RotationOverLife\n} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class BulletMuzzle extends Group {\n    private beam: ParticleSystem;\n    private muzzle1: ParticleSystem;\n    private muzzle2: ParticleSystem;\n    private flash: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.585716, 0.1691176, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        const muzzle = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpace,\n            renderOrder: 2,\n        };\n\n        this.muzzle1 = new ParticleSystem(renderer, muzzle);\n        this.muzzle1.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle1.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle1.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle1.emitter.name = 'muzzle1';\n        this.muzzle1.emitter.position.x = 1;\n        this.add(this.muzzle1.emitter);\n\n        this.muzzle2 = new ParticleSystem(renderer, muzzle);\n        this.muzzle2.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle2.emitter.renderOrder = 2;\n        this.muzzle2.emitter.name = 'muzzle2';\n        this.muzzle2.emitter.position.x = 1;\n        this.muzzle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.muzzle2.emitter);\n\n        this.flash = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.flash.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.95, 0.82, 1), new Vector4(1, 0.38, 0.12, 1))));\n        this.flash.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(81, 84.333, 87.666, 91), 0]])));\n        this.flash.emitter.name = 'flash';\n        this.add(this.flash.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.smoke.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.rotation.y = Math.PI / 2;\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(1, 15),\n            startSize: new IntervalValue(0.1, 0.3),\n            startColor: new RandomColor(new Vector4(1, 0.91, 0.51, 1), new Vector4(1, 0.44, 0.16, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.emitter.name = 'particles';\n        this.particles.emitter.rotation.y = Math.PI / 2;\n        this.add(this.particles.emitter);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.muzzle1.update(delta);\n        this.muzzle2.update(delta);\n        this.flash.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\n\nexport class BulletProjectile extends Group {\n    private hProjectile: ParticleSystem;\n    private vProjectile: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer) {\n        super();\n\n        const texture = new TextureLoader().load( \"textures/projectile.png\");\n        texture.name = \"textures/projectile.png\";\n\n        const projectileParam = {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 4),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(1),\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 1,\n            vTileCount: 1,\n            /*instancingGeometry: [\n                -2, -0.5, 0, 0, 0,\n                2, -0.5, 0, 1, 0,\n                2, 0.5, 0, 1, 1,\n                -2, 0.5, 0, 0, 1\n            ],*/\n            renderMode: RenderMode.LocalSpace,\n            renderOrder: 2,\n        };\n\n        this.hProjectile = new ParticleSystem(renderer, projectileParam);\n        this.hProjectile.emitter.name = 'hProjectile';\n        this.add(this.hProjectile.emitter);\n\n        this.vProjectile = new ParticleSystem(renderer, projectileParam);\n        this.vProjectile.emitter.name = 'vProjectile';\n        this.vProjectile.emitter.rotation.x = Math.PI / 2;\n        this.add(this.vProjectile.emitter);\n    }\n\n    update(delta: number) {\n        this.hProjectile.update(delta);\n        this.vProjectile.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ToonExplosion extends Group {\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(5, 15),\n            startSize: new IntervalValue(1.5, 1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 25 * Math.PI / 180,\n                radius: 0.2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(0.7, 1.5),\n            startSize: new IntervalValue(0.4, 0.8),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 80 * Math.PI / 180,\n                radius: 0.25,\n                thickness: 0.5,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n        this.beam.update(delta);\n        this.circle.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class LevelUp extends Group {\n\n    private gatherParticles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glow2: ParticleSystem;\n    private particle: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n        this.name = 'levelUp';\n\n        const texture = textures[0].texture;\n\n        const yellow = new Vector4(.8,.8,.2, 1);\n\n        this.gatherParticles = new ParticleSystem(renderer, {\n            duration: 0.5,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(100),\n            shape: new SphereEmitter({\n                radius: 60,\n                thickness: .8,\n                arc: Math.PI\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.05,\n            renderOrder: 2,\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(.2, .2, .2, 1), new Vector4(1, 1, 1, 1))));\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.add(this.gatherParticles.emitter);\n\n        const glowParam = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(120, 160),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpace,\n            renderOrder: 0,\n        };\n\n        this.glow = new ParticleSystem(renderer, glowParam);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.glow.emitter);\n\n\n        const glow2Param = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 0,\n        };\n\n        this.glow2 = new ParticleSystem(renderer, glow2Param);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1), 0], [new Bezier(1, 0.90, 0.75, 0), 0.2]])));\n        this.glow2.emitter.name = 'glow2';\n        this.add(this.glow2.emitter);\n\n        const particleParam = {\n            duration: 1.0,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(120, 180),\n            startSize: new IntervalValue(2, 4),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new PiecewiseBezier([[new Bezier(0, 0, 0, 0), 0], [new Bezier(50, 80, 80, 50), 0.4]]),\n            /*emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],*/\n            shape: new ConeEmitter({\n                radius: 25,\n                thickness: 0.2,\n                angle: Math.PI / 100\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            //speedFactor: 0.1,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        };\n\n        this.particle = new ParticleSystem(renderer, particleParam);\n        this.particle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.particle.addBehavior(new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, Math.PI * 4* 0.75, Math.PI * 4 * 0.90, Math.PI * 4),0]])));\n        this.particle.emitter.name = 'particle';\n        this.particle.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.particle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.gatherParticles.update(delta);\n        this.glow.update(delta);\n        this.glow2.update(delta);\n        this.particle.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipSmoke extends Group {\n\n    private smoke: ParticleSystem;\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n        this.name = 'shipSmoke';\n\n        const texture = textures[0].texture;\n\n        const grey = new Vector4(.5, .5, .5, 1);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 5,\n            looping: true,\n            startLife: new IntervalValue(1.5, 3),\n            startSpeed: new IntervalValue(20, 30),\n            startSize: new IntervalValue(10, 15),\n            startColor: new ConstantColor(grey),\n            worldSpace: true,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new ConeEmitter({\n                radius: 10,\n                thickness: 1,\n                angle: 0.2\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(.8, .8, .8, 0))));\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.2, 1, 1, 1), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.smoke.emitter);\n    }\n\n    update(delta: number) {\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ElectricBall extends Group {\n    private beam: ParticleSystem;\n    private beamWorld: ParticleSystem;\n    private electricity: ParticleSystem;\n    private electricBall: ParticleSystem;\n    /*private sparks: ParticleSystem;*/\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n        this.name = 'ElectricBall';\n\n        const texture2 = textures[1].texture;\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(15.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.beamWorld = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(7.5, 15),\n            startColor: new RandomColor(new Vector4(0.1397059 * 0.8, 0.3592291 * 0.8, 1 * 0.8, 1), new Vector4(1 * 0.8, 0.9275356 * 0.8, 0.1029412 * 0.8, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n            shape: new SphereEmitter({\n                radius: 0.01,\n                thickness: 1,\n                arc: Math.PI * 2\n            }),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beamWorld.emitter.name = 'beamWorld';\n        this.beamWorld.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0))));\n        this.add(this.beamWorld.emitter);\n\n        this.electricity = new ParticleSystem(renderer, {\n            duration: 0.5,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(3, 6),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        //this.electricity.addBehavior(new ColorOverLife(([[new Bezier(61, 64, 67, 70), 0]])));\n        this.electricity.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(53, 56, 59, 62), 0]])));\n        this.electricity.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1.0, 1.0, 0.75, 0), 0]])));\n        this.electricity.emitter.name = 'electricity';\n        this.add(this.electricity.emitter);\n\n        this.electricBall = new ParticleSystem(renderer, {\n            duration: 0.4,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(5, 10),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(3),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 1,\n        });\n        this.electricBall.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(62, 65, 68, 71), 0]])));\n        this.electricBall.emitter.name = 'electricBall';\n        this.add(this.electricBall.emitter);\n        /*\n        this.sparks = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n*/\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.beamWorld.update(delta);\n        this.electricity.update(delta);\n        this.electricBall.update(delta);\n        /*this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.circle.update(delta);*/\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {BatchedParticleRenderer, ColorOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipTrail extends Group {\n    private particles: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private beam: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(20.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.add(this.beam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(10),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: true,\n\n            maxParticle: 500,\n            emissionOverTime: new ConstantValue(120),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 1.0, 0.8, 0.5), 0]])));\n        this.glowBeam.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1,1,1,1), new Vector4(0,0,0,0))));\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(20, 40),\n            startSize: new IntervalValue(1, 2),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(0.5220588, 0.6440161, 1, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 80 / 180 * Math.PI,\n                radius: 1,\n                thickness: 0.3,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .2,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 200;\\n\" +\n                \"    if (this.position.x > 200)\\n\" +\n                \"        this.position.x = -200;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, Scene, TextureLoader, Vector4} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    Bezier, ColorOverLife, ColorRange, ConstantColor,\n    ConstantValue, FrameOverLife,\n    IntervalValue,\n    ParticleSystem,\n    PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, RotationOverLife,\n    SizeOverLife, SpeedOverLife,\n    SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Explosion2 extends Group {\n\n    static yellowColor = new Vector4(0.9, 0.60, 0.25, 1);\n    static yellowColor2 = new Vector4(1, 0.95, 0.4, 1);\n\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private circle: ParticleSystem;\n    private circle2: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n        const mainColor = Explosion2.yellowColor;\n        const secColor = Explosion2.yellowColor2;\n\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(100, 300),\n            startSize: new IntervalValue(1.5, 12.5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(20, 45),\n            startSize: new IntervalValue(4, 8),\n            startColor: new ConstantColor(mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.8, 1.2),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new IntervalValue(10, 15),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 7.5,\n                arc: Math.PI,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(mainColor, new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.addBehavior(new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(40, 200),\n            startSize: new IntervalValue(1, 4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: 2,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n\n        this.circle2 = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpace,\n            renderOrder: 2,\n        });\n        this.circle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle2.emitter.name = 'circle';\n        this.circle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.circle2.emitter);\n    }\n\n    update(delta: number) {\n        //delta /= 1000;\n        this.beam.update(delta);\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.circle.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n        this.circle2.update(delta);\n    }\n}\n","import {\n    AdditiveBlending,\n    ConeBufferGeometry,\n    CylinderBufferGeometry,\n    Group,\n    NormalBlending,\n    TextureLoader,\n    Vector4\n} from \"three\";\nimport {\n    BatchedParticleRenderer,\n    ColorOverLife,\n    ParticleSystem,\n    PointEmitter,\n    RenderMode,\n    RotationOverLife\n} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class EnergyRifleMuzzle extends Group {\n    private particles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glowTop: ParticleSystem;\n    //private ringTop: ParticleSystem;\n    private ringBase: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer,textures: TextureImage[]) {\n        super();\n\n        const texture = textures[1].texture;\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new ConstantValue(2),\n            startColor: new ConstantColor(new Vector4(0.5, 0.5, 0.5, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 24,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({angle: .2, radius: 5}),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n            renderOrder: 0,\n        });\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0.8, 1, 1))));\n        this.add(this.particles.emitter);\n\n        const glow = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(new Vector4(0, 0.3, 0.3, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        };\n\n        this.glow = new ParticleSystem(renderer, glow);\n        this.glow.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1))));\n        //this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.position.x = 1;\n        this.add(this.glow.emitter);\n\n        this.glowTop = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0, 50),\n            startSize: new IntervalValue(40, 60),\n            startRotation: new ConstantValue(0),\n            startColor: new ConstantColor(new Vector4(0, 0.2, 0.2, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({angle: .01, radius: 1}),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n            renderOrder: -2,\n        });\n        this.glowTop.emitter.name = 'glowTop';\n        this.glowTop.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)), 0],\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1)), 0.5],\n        ])));\n        //this.glowTop.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.glowTop.emitter);\n\n        /*\n        this.ringTop = new ParticleSystem(renderer, {\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.ringTop.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.ringTop.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.ringTop.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.ringTop.emitter.renderOrder = -2;\n        this.ringTop.emitter.name = 'smoke';\n        this.ringTop.emitter.rotation.y = Math.PI / 2;\n        this.add(this.ringTop.emitter);\n*/\n        const coneBufferGeometry = new CylinderBufferGeometry(10, 6, 4, 16, 1, true);\n        coneBufferGeometry.rotateX(Math.PI / 2);\n        /*console.log(coneBufferGeometry.getIndex()!.array);\n        console.log(coneBufferGeometry.getAttribute('position').array);\n        console.log(coneBufferGeometry.getAttribute('uv').array);*/\n\n\n        this.ringBase = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.8),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(0, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            instancingGeometry: coneBufferGeometry,\n            renderMode: RenderMode.LocalSpace,\n            renderOrder: 1,\n        });\n        this.ringBase.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)), 0],\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1)), 0.5],\n        ])));\n        this.ringBase.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.5, 0.75, 0.95, 1), 0]])));\n        this.ringBase.emitter.name = 'ringBase';\n        //this.ringBase.emitter.rotation.y = Math.PI / 2;\n        this.add(this.ringBase.emitter);\n    }\n\n    update(delta: number) {\n        //this.ringTop.update(delta);\n        this.ringBase.update(delta);\n        this.glowTop.update(delta);\n        this.glow.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {\n    ConstantValue,\n    ParticleSystem,\n    ConstantColor,\n    PointEmitter,\n    SphereEmitter,\n    OrbitOverLife,\n    PiecewiseBezier, Gradient, ColorRange, ColorOverLife, Bezier, BatchedParticleRenderer\n} from \"three.quarks\";\nimport {Group, Vector4} from \"three\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Blackhole extends Group {\n    private beam: ParticleSystem;\n    private particles: ParticleSystem;\n    private ring: ParticleSystem;\n\n    constructor(renderer: BatchedParticleRenderer, textures: TextureImage[]) {\n        super();\n\n        const texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer,{\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(new Vector4(0, 0, 0, 1)),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: 1,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: 0,\n            renderOrder: 0,\n        });\n        this.beam.emitter.name = 'beam';\n        this.beam.emitter.rotation.set(0, 0, 0);\n        this.add(this.beam.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(3),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n            maxParticle: 10000,\n            emissionOverTime: new ConstantValue(8),\n            emissionBursts: [],\n            shape: new SphereEmitter({\n                radius: 18,\n                arc: Math.PI * 2,\n                thickness: 0.01\n            }),\n            texture: texture,\n            blending: 2,\n            startTileIndex: 4,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: 0,\n            renderOrder: 0,\n        });\n        this.particles.addBehavior(new OrbitOverLife(new ConstantValue(1)));\n        this.particles.addBehavior(new ColorOverLife(new Gradient([[new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1)),0],\n            [new ColorRange(new Vector4(1,1,1,1), new Vector4(1,1,1,1)),0.2],\n            [new ColorRange(new Vector4(1,1,1,1), new Vector4(0,0,0,1)),0.8]\n        ])));\n        this.particles.emitter.name = 'particles';\n        this.particles.emitter.rotation.set(0, 0, 0);\n        this.add(this.particles.emitter);\n\n        this.ring = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(30),\n            startColor: new ConstantColor(new Vector4(0.9254901960784314, 0.788235294117647, 0.1607843137254902, 1)),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: 2,\n            startTileIndex: 4,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: 0,\n            renderOrder: 0,\n        });\n        this.ring.emitter.name = 'ring';\n        this.ring.emitter.rotation.set(0, 0, 0);\n        this.add(this.ring.emitter);\n\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.particles.update(delta);\n        this.ring.update(delta);\n    }\n}\n","import * as React from \"react\";\nimport * as THREE from \"three\";\nimport {Object3D, Scene, Texture} from \"three\";\nimport {ParticleEmitter, QuarksLoader} from \"three.quarks\";\nimport {TextureLoader} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {AdditiveBlending} from \"three\";\nimport {Mesh} from \"three\";\nimport {BoxBufferGeometry} from \"three\";\nimport {MeshStandardMaterial} from \"three\";\nimport {ToonProjectile} from \"../example/ToonProjectile\";\nimport {Color} from \"three\";\nimport {AxesHelper} from \"three\";\nimport {PointLight} from \"three\";\nimport {AmbientLight} from \"three\";\nimport {BulletMuzzle} from \"../example/BulletMuzzle\";\nimport {BulletProjectile} from \"../example/BulletProjectile\";\nimport {ToonExplosion} from \"../example/ToonExplosion\";\nimport {LevelUp} from \"../example/LevelUp\";\nimport {ShipSmoke} from \"../example/ShipSmoke\";\nimport {ElectricBall} from \"../example/ElectricBall\";\nimport {ShipTrail} from \"../example/ShipTrail\";\nimport {Explosion2} from \"../example/Explosion2\";\nimport {EnergyRifleMuzzle} from \"../example/EnergyRifleMuzzle\";\nimport {Blackhole} from \"../example/Blackhole\";\nimport {BatchedParticleRenderer} from \"three.quarks\";\nimport {TransformControls} from \"three/examples/jsm/controls/TransformControls\";\n\n\nexport interface TextureImage {\n    img: string,\n    texture: Texture,\n}\n\nexport interface AppContext {\n    scene: THREE.Scene;\n    script: (delta: number) => void;\n    selection: Array<Object3D>;\n    textures: Array<TextureImage>;\n    batchedRenderer?: BatchedParticleRenderer;\n    transformControls?: TransformControls;\n\n    actions: {\n        onOpenDemo: (index: number)=>void;\n        onSaveAs: ()=>void;\n        onImport: (files: FileList)=>void;\n        select: (object: Object3D) => void;\n        selectAddition: (object: Object3D) => void;\n        addObject3d: (type: string, parent: Object3D) => void;\n        removeObject3d: (object: Object3D) => void;\n        duplicateObject3d: (object: Object3D) => void;\n        updateParticleSystem: (object: ParticleEmitter) => void;\n        addTexture: (textureImage: TextureImage) => void;\n        setRenderer: (renderer: BatchedParticleRenderer, transformControls: TransformControls) => void;\n    }\n    updateProperties: () => void;\n}\n\nconst ApplicationContext = React.createContext<AppContext | null>(null);\n\ninterface ApplicationContextProviderProps {\n\n}\n\nexport const ApplicationContextConsumer = ApplicationContext.Consumer;\n\nexport class ApplicationContextProvider extends React.Component<ApplicationContextProviderProps, AppContext> {\n\n    textureLoader: TextureLoader;\n\n    addDemo(demoIndex: number) {\n        let demoObject;\n        if (demoIndex === 0) {\n            demoObject = new ToonProjectile(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"Toon Projectile\";\n        } else if (demoIndex === 1) {\n            demoObject = new BulletMuzzle(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"BulletMuzzle\";\n        } else if (demoIndex === 2) {\n            demoObject = new BulletProjectile(this.state.batchedRenderer!);\n            demoObject.name = \"BulletProjectile\";\n        } else if (demoIndex === 3) {\n            demoObject = new ShipSmoke(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"shipSmoke\";\n        } else if (demoIndex === 4) {\n            demoObject = new ToonExplosion(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"ToonExplosion\";\n        } else if (demoIndex === 5) {\n            demoObject = new Blackhole(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"Blackhole\";\n        } else if (demoIndex === 6) {\n            demoObject = new LevelUp(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"LevelUp\";\n        } else if (demoIndex === 7) {\n            demoObject = new EnergyRifleMuzzle(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"EnergyRifleMuzzle\";\n        } else if (demoIndex === 8) {\n            demoObject = new ElectricBall(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"ElectricBall\";\n        } else if (demoIndex === 9){\n            demoObject = new ShipTrail(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"ShipTrail\";\n        } else if (demoIndex === 10) {\n            demoObject = new Explosion2(this.state.batchedRenderer!, this.state.textures);\n            demoObject.name = \"Explosion2\";\n        }\n        if (demoObject)\n            this.state.scene.add(demoObject);\n        this.state.updateProperties();\n    }\n\n    updateProperties1 = () => {\n        this.setState({updateProperties: this.updateProperties2});\n    }\n\n    updateProperties2 = () => {\n        this.setState({updateProperties: this.updateProperties1});\n    }\n\n    constructor(props: Readonly<ApplicationContextProviderProps>) {\n        super(props);\n        this.textureLoader = new TextureLoader();\n        const texture1 = this.textureLoader.load(process.env.PUBLIC_URL + \"/textures/texture1.png\");\n        texture1.name = \"textures/texture1.png\";\n        const texture2 = this.textureLoader.load(process.env.PUBLIC_URL + \"/textures/texture2.png\", ()=>{console.log(texture2);});\n        texture2.name = \"textures/texture2.png\";\n\n\n        const state: AppContext = {\n            scene: new Scene(),\n            script: this.animate,\n            batchedRenderer: undefined,\n            selection: [],\n            textures: [\n                {img: process.env.PUBLIC_URL + '/textures/texture1.png', texture: texture1},\n                {img: process.env.PUBLIC_URL + '/textures/texture2.png', texture: texture2},\n            ],\n            actions: {\n                onOpenDemo: (index: number) => {\n                    this.addDemo(index);\n                    //this.setState({scene: scene});\n                },\n                onSaveAs: () => {\n                    const a = document.createElement(\"a\");\n                    const file = new Blob([JSON.stringify(this.state.scene.toJSON())], {type: \"application/json\"});\n                    a.href = URL.createObjectURL(file);\n                    a.download = \"scene.json\";\n                    a.click();\n                },\n                onImport: (files: FileList) => {\n                    const nFiles = files.length;\n                    for (let nFileId = 0; nFileId < nFiles; nFileId++) {\n                        const jsonURL = URL.createObjectURL( files[nFileId] );\n\n                        const loader = new QuarksLoader();\n                        loader.setCrossOrigin(\"\");\n                        loader.load(jsonURL, this.state.batchedRenderer!, (object3D: Object3D)=>{\n                            this.state.scene.add(object3D);\n                        }, ()=>{}, ()=>{});\n                    }\n                },\n                select: object => {\n                    this.setState({selection: [object]});\n                    this.state.transformControls?.detach();\n                    this.state.transformControls?.attach(object);\n                },\n                selectAddition: object => {\n                    if (this.state.selection.indexOf(object) === -1) {\n                        this.state.selection.push(object);\n                        this.setState({selection: this.state.selection});\n                    }\n                },\n                addObject3d: this.addObject3d,\n                removeObject3d: this.removeObject3d,\n                duplicateObject3d: this.duplicateObject3d,\n                updateParticleSystem: () => {\n                },\n                addTexture: (textureImage: TextureImage) => {\n                    this.state.textures.push(textureImage);\n                    this.setState({textures: this.state.textures});\n                },\n                setRenderer: (renderer: BatchedParticleRenderer, transformControls: TransformControls) => {\n                    this.setState({batchedRenderer: renderer, transformControls});\n                },\n            },\n            updateProperties: this.updateProperties1,\n        };\n\n        this.state = state;\n    }\n\n    removeObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.remove(object3D);\n        }\n    };\n\n    duplicateObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.add(object3D.clone());\n        }\n    }\n\n    addObject3d = (type: string, parent: Object3D) => {\n        let object;\n        switch (type) {\n            case 'particle': {\n                const texture = this.state.textures[0].texture;\n                const particleSystem = new ParticleSystem(this.state.batchedRenderer!, {\n                    maxParticle: 10000,\n                    shape: new ConeEmitter(),\n                    emissionOverTime: new ConstantValue(100),\n                    startLife: new ConstantValue(30),\n                    startSpeed: new ConstantValue(10),\n                    startSize: new ConstantValue(1),\n                    startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n                    texture: texture,\n                    blending: AdditiveBlending,\n                    startTileIndex: 0,\n                    uTileCount: 10,\n                    vTileCount: 10,\n                    worldSpace: true,\n                });\n                object = particleSystem.emitter;\n                this.state.scene.add(object);\n                break;\n            }\n            case 'box':\n                object = new Mesh(new BoxBufferGeometry(10, 10, 10), new MeshStandardMaterial({color: 0xcccccc}));\n                this.state.scene.add(object);\n                break;\n        }\n        if (object) {\n            parent.add(object);\n            this.state.actions.select(object);\n            this.setState({});\n        }\n    };\n\n\n    update = 0;\n    animate = (delta: number) => {\n        /*this.toonProjectile!.position.x += delta * 30;\n        if (this.toonProjectile!.position.x > 20)\n            this.toonProjectile!.position.x = -20;*/\n\n        this.update += delta;\n        if (this.update > 0.1) {\n            //this.state\n            this.update = 0;\n        }\n    };\n\n    render() {\n        //console.log( \"rendering ApplicationContext \");\n        return (\n            <ApplicationContext.Provider value={this.state}>\n                {this.props.children}\n            </ApplicationContext.Provider>\n        )\n    }\n}\n/*\n        this.particleSystem = new ParticleSystem(renderer, {\n            maxParticle: 10000,\n            shape: new ConeEmitter(),\n            emissionOverTime: new ConstantValue(100),\n            startLife: new ConstantValue(30),\n            startSpeed: new ConstantValue(10),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(1,1,1, 1)),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            worldSpace: true,\n        });*/\n//this.particleSystem.emitter.position.set(10, 0, 0);\n//scene.add(this.particleSystem.emitter);\n","import React from \"react\";\nimport {Button, ButtonGroup,ToggleButton, ToggleButtonGroup} from \"@mui/material\";\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport {AspectRatio, CameraAlt, ThreeSixty, Transform} from \"@mui/icons-material\";\n\ninterface ViewPortControlsProps {\n    controlType: string;\n    setControlType(controlType: string): void;\n}\n\nexport const ViewPortControls: React.FC<ViewPortControlsProps> = (props) => {\n\n    const handleControlMode = (\n        event: React.MouseEvent<HTMLElement>,\n        newControlType: string | null,\n    ) => {\n        props.setControlType(newControlType as string);\n    };\n\n    return <ToggleButtonGroup\n        value={props.controlType}\n        exclusive\n        onChange={handleControlMode}\n        aria-label=\"controlType\"\n        sx={{position: \"absolute\", top: 8, left: 8}}\n    >\n        <ToggleButton  value=\"camera\">\n            <CameraAlt/>\n        </ToggleButton>\n        <ToggleButton  value=\"translate\">\n            <Transform />\n        </ToggleButton>\n        <ToggleButton  value=\"rotate\">\n            <ThreeSixty />\n        </ToggleButton>\n        <ToggleButton  value=\"scale\">\n            <AspectRatio />\n        </ToggleButton>\n    </ToggleButtonGroup>;\n}\n","import * as React from \"react\";\nimport Stats from \"stats.js\";\nimport {WEBGL} from \"../WebGL\";\nimport {\n    PerspectiveCamera,\n    WebGLRenderer,\n    Clock, Color, AxesHelper, PointLight, AmbientLight,\n} from \"three\";\nimport {RefObject} from \"react\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {BatchedParticleRenderer, ParticleEmitter} from \"three.quarks\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\nimport * as THREE from \"three\";\nimport {TransformControls} from \"three/examples/jsm/controls/TransformControls\";\nimport {ViewPortControls} from \"./ViewPortControls\";\n\ninterface ThreejsViewportProps {\n    width: number;\n    height: number;\n}\n\ninterface ThreejsViewportStats {\n    viewPortControlType: string;\n}\n\nexport class ThreejsViewport extends React.PureComponent<ThreejsViewportProps, ThreejsViewportStats> {\n    container: RefObject<HTMLDivElement>;\n    stats?: Stats;\n    camera?: PerspectiveCamera;\n    renderer?: WebGLRenderer;\n    batchedRenderer?: BatchedParticleRenderer;\n    transformControls?: TransformControls;\n    private clock?: Clock;\n    private cameraControls?: OrbitControls;\n\n    private appContext?: AppContext;\n\n    constructor(props: Readonly<ThreejsViewportProps>) {\n        super(props);\n        this.container = React.createRef();\n        this.state = {\n            viewPortControlType: \"camera\"\n        }\n    }\n\n    componentDidMount(): void {\n        if ( this.init() ) {\n            this.animate();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ThreejsViewportProps>, prevState: Readonly<any>, snapshot?: any): void {\n        this.camera!.aspect = this.props.width / this.props.height;\n        this.camera!.updateProjectionMatrix();\n        this.renderer!.setSize( this.props.width, this.props.height );\n    }\n\n    init() {\n        if (!this.container.current) {\n            return false;\n        }\n\n        if ( !WEBGL.isWebGLAvailable() ) {\n            document.body.appendChild( WEBGL.getWebGLErrorMessage() );\n            return false;\n        }\n\n        this.renderer = new WebGLRenderer();\n\n        const scene = this.appContext!.scene;\n\n        this.batchedRenderer = new BatchedParticleRenderer();\n        this.batchedRenderer.name = \"batched particle renderer\";\n        scene.add(this.batchedRenderer);\n\n        scene.background = new Color(0x666666);\n\n        const axisHelper = new AxesHelper(100);\n        axisHelper.name = \"axisHelper\";\n        scene.add(axisHelper);\n\n        const light = new PointLight(new Color(1, 1, 1), 0.8, 200);\n        light.position.set(50, 50, 50);\n        scene.add(light);\n\n        const ambientLight = new AmbientLight(new Color(1, 1, 1), 0.2);\n        scene.add(ambientLight);\n\n        /*if ( this.renderer.extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n            document.getElementById( 'notSupported' )!.style.display = '';\n            return false;\n        }*/\n\n        const width = this.props.width;\n        const height = this.props.height;\n\n        this.clock = new Clock();\n\n        this.camera = new PerspectiveCamera( 50, width / height, 1, 1000 );\n        this.camera.position.set(50, 50, 50);\n\n        this.cameraControls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.cameraControls.enableKeys = false;\n        this.cameraControls.enableDamping = true;\n        this.cameraControls.dampingFactor = 0.1;\n        this.cameraControls.rotateSpeed = 0.2;\n        this.cameraControls.update();\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( width, height );\n        this.container.current!.appendChild( this.renderer.domElement );\n\n        this.transformControls = new TransformControls(this.camera, this.renderer.domElement);\n        this.transformControls.name = 'TransformControls';\n        scene.add(this.transformControls);\n\n        this.appContext?.actions.setRenderer(this.batchedRenderer, this.transformControls);\n\n        this.stats = new Stats();\n        this.stats.dom.style.position = \"absolute\";\n        this.stats.dom.style.left = \"\";\n        this.stats.dom.style.right = \"0\";\n        this.container.current!.appendChild( this.stats.dom );\n\n        //window.addEventListener( 'resize', this.onWindowResize, false );\n\n        this.onResize(null);\n\n        return true;\n\n    }\n\n    onResize = (event: any ) => {\n\n        if (this.renderer!.domElement.parentElement!.clientWidth - 10 !== this.renderer!.domElement.width ||\n            this.renderer!.domElement.parentElement!.clientHeight - 10 !== this.renderer!.domElement.height) {\n\n            const newWidth = this.renderer!.domElement.parentElement!.clientWidth - 10;\n            const newHeight = this.renderer!.domElement.parentElement!.clientHeight - 10;\n\n            this.camera!.aspect = newWidth / newHeight;\n            this.camera!.updateProjectionMatrix();\n            this.renderer!.domElement.style.width = '100%';\n            this.renderer!.domElement.style.height = '100%';\n            this.renderer!.setSize(newWidth, newHeight);\n        }\n    };\n\n    animate = () => {\n        requestAnimationFrame( this.animate );\n\n        this.onResize(null);\n        this.renderScene();\n        this.stats!.update();\n    };\n\n    renderScene() {\n        if (this.appContext) {\n            this.cameraControls!.update();\n            const delta = this.clock!.getDelta();\n            //console.log(delta);\n            //let time = performance.now() * 0.0005;\n            //this.particleSystem!.update(this.clock!.getDelta());\n            this.appContext.script(delta);\n            //this.particleSystem!.emitter.rotation.y = this.clock!.getElapsedTime();\n            //this.particleSystem!.emitter.position.set(Math.cos(this.clock!.getElapsedTime()) * 20, 0, Math.sin(this.clock!.getElapsedTime()) * 20);\n            //console.log(this.particleSystem!.emitter.modelViewMatrix);\n\n            this.appContext.scene.traverse(object => {\n                if (object.userData && object.userData.func) {\n                    object.userData.func.call(object, delta);\n                }\n                if (object instanceof ParticleEmitter) {\n                    /*if (object.name === 'muzzle1' && object.system.particleNum > 0) {\n                        console.log(object.system.particles);\n                    }*/\n                    object.system.update(delta);\n                }\n            });\n\n            this.batchedRenderer!.update();\n            this.renderer!.render(this.appContext.scene, this.camera!);\n        }\n    }\n\n    setViewPortControlType = (type: string) => {\n        if (type === 'camera') {\n            this.cameraControls!.enabled = true;\n            this.transformControls!.enabled = false;\n            this.transformControls!.detach();\n        } else {\n            this.cameraControls!.enabled = false;\n            this.transformControls!.enabled = true;\n        }\n        if (type === 'translate' || type === 'rotate' || type === 'scale') {\n            this.transformControls!.mode = type;\n        }\n        this.setState({viewPortControlType: type});\n    }\n\n    render() {\n        console.log( \"rendering ThreejsViewPort\");\n        return (\n        <ApplicationContextConsumer>\n            { context => {\n                    if (context) {\n                        this.appContext = context;\n                        return <div ref={this.container} style={{width: '100%', height: '100%', position: 'relative'}}>\n                            <ViewPortControls controlType={this.state.viewPortControlType}\n                                              setControlType={this.setViewPortControlType}/>\n                        </div>;\n                    }\n                }\n            }\n        </ApplicationContextConsumer>);\n    }\n}\n","import * as React from 'react';\nimport \"./NumberInput.scss\";\n\ninterface NumberInputProps{\n    value: number;\n    onChange: (value: number)=>void;\n}\n\nexport const NumberInput : React.FC<NumberInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value + '');\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        const x = parseFloat(inputValue);\n        if (x !== props.value)\n            props.onChange(x);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value + '') {\n            setInputValue(props.value + '');\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            const x = parseFloat(inputValue);\n            if (x !== props.value)\n                props.onChange(x);\n        }\n    };\n\n    return <input className=\"number-input\" value={focus? inputValue: props.value} size={5}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {NumberInput} from \"./NumberInput\";\n\ninterface Vector3Props {\n    name: string;\n    x: number;\n    y: number;\n    z: number;\n    onChange: (x: number, y: number, z: number)=>void;\n    unitConversion?: number;\n}\n\nexport class Vector3Editor extends React.PureComponent<Vector3Props> {\n    render() {\n        console.log('rendered Vector3');\n        const {x, y, z, unitConversion = 1, onChange, name} = this.props;\n        return(<div className=\"property\">\n                <label className=\"name\">{name}</label>\n                <label>X:</label><NumberInput value={x * unitConversion} onChange={value => {onChange(value / unitConversion, y, z)}}/>\n                <label>Y:</label><NumberInput value={y * unitConversion} onChange={value => {onChange(x, value / unitConversion, z)}}/>\n                <label>Z:</label><NumberInput value={z * unitConversion} onChange={value => {onChange(x, y, value / unitConversion)}}/>\n            </div>\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringInputProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const StringInput : React.FC<StringInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return <input className=\"string-input\" value={focus? inputValue: props.value} size={20}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\n\n\ninterface ObjectPropertiesProps {\n    object3d: Object3D,\n    updateProperties: ()=>void,\n}\n\ninterface ObjectPropertiesState {\n\n}\n\nexport class ObjectProperties extends React.PureComponent<ObjectPropertiesProps, ObjectPropertiesState> {\n    constructor(props: Readonly<ObjectPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeName = (name: string) => {\n        this.props.object3d.name = name;\n        this.props.updateProperties();\n    };\n    onChangePosition = (x: number, y: number, z: number) => {\n        this.props.object3d.position.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeScale = (x: number, y: number, z: number) => {\n        this.props.object3d.scale.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeRotation = (x: number, y: number, z: number) => {\n        this.props.object3d.rotation.set(x, y, z);\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Name:</label>\n                            <StringInput value={this.props.object3d.name} onChange={this.onChangeName}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Position\" x={this.props.object3d.position.x}\n                                       y={this.props.object3d.position.y} z={this.props.object3d.position.z}\n                                       onChange={this.onChangePosition}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Rotation\" x={this.props.object3d.rotation.x}\n                                       y={this.props.object3d.rotation.y} z={this.props.object3d.rotation.z}\n                                       onChange={this.onChangeRotation} unitConversion={180 / Math.PI}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Scale\" x={this.props.object3d.scale.x}\n                                       y={this.props.object3d.scale.y} z={this.props.object3d.scale.z}\n                                       onChange={this.onChangeScale}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport {ColorResult, SketchPicker} from \"react-color\";\nimport {Vector4} from \"three\";\nimport \"./ColorEditor.scss\";\n\ninterface ColorEditorProps {\n    color: Vector4;\n    onChange: (color: Vector4) => void;\n}\n\nfunction ConvertToColor(color: Vector4) {\n    return `rgba(${((color.x * 255) | 0)},${((color.y * 255) | 0)},${((color.z * 255) | 0)},${color.w})`;\n}\n\nexport const ColorEditor: React.FC<ColorEditorProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const togglePicker = () => {\n        setOpen(!open);\n    };\n\n    const closePicker = () => {\n        setOpen(false);\n    };\n\n    const colorChange = (colorResult: ColorResult) => {\n        const color = new Vector4();\n        color.x = Math.min(255, colorResult.rgb.r) / 255;\n        color.y = Math.min(255, colorResult.rgb.g) / 255;\n        color.z = Math.min(255, colorResult.rgb.b) / 255;\n        color.w = colorResult.rgb.a!;\n        onChange(color);\n    };\n\n    const {color, onChange} = props;\n\n    return (\n        <div className=\"color-editor\">\n            <button style={{backgroundColor: ConvertToColor(color), height: '20px'}} onClick={togglePicker}/>\n            {ConvertToColor(color)}\n            {\n                open ? <div className=\"popover\">\n                    <div className=\"cover\" onClick={closePicker}/>\n                    <SketchPicker\n                        color={{\n                            r: ((color.x * 255) | 0),\n                            g: ((color.y * 255) | 0),\n                            b: ((color.z * 255) | 0),\n                            a: color.w\n                        }}\n                        onChange={colorChange}/>\n                </div> : null\n            }\n        </div>);\n};\n","import React from \"react\";\n\nfunction interp(a: number, b: number, x: number) {\n    return a * (1 - x) + b * x;\n}\n\nexport interface TransformProps {\n    xFrom: number;\n    yFrom: number;\n    xTo: number;\n    yTo: number;\n}\n\nexport class TransformComponent<T extends TransformProps = TransformProps> extends React.Component<T> {\n\n    x = (value: number) => interp(this.props.xFrom, this.props.xTo, value);\n    y = (value: number) => interp(this.props.yFrom, this.props.yTo, value);\n\n    shouldComponentUpdate(nextProps: TransformProps) {\n        const { xFrom, yFrom, xTo, yTo } = this.props;\n        return (\n            nextProps.xFrom !== xFrom ||\n            nextProps.yFrom !== yFrom ||\n            nextProps.xTo !== xTo ||\n            nextProps.yTo !== yTo\n        );\n    }\n}\n","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\nimport {Bezier} from \"three.quarks\";\n\nexport interface CurveProps extends TransformProps {\n    curveColor: string;\n    curveWidth: number;\n    value: Bezier;\n}\n\nexport class CurveComponent extends TransformComponent<CurveProps> {\n    shouldComponentUpdate(nextProps: CurveProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const [p0, p1, p2, p3] = value.p;\n        return nextProps.curveColor !== curveColor ||\n            nextProps.curveWidth !== curveWidth ||\n            nextProps.value !== value;\n    }\n\n    render() {\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const {x, y} = this;\n\n        const segments = Math.floor((x(1) - x(0)) / 5);\n\n        let curve = `M${x(0)},${y(value.genValue(0))} `;\n        if (segments > 0) {\n            for (let i = 1 / segments; i <= 1; i += 1 / segments) {\n                curve += `L${x(i)},${y(value.genValue(i))} `;\n            }\n        }\n        curve += `L${x(1)},${y(value.genValue(1))} `;\n\n        return (<path\n            fill=\"none\"\n            stroke={curveColor}\n            strokeWidth={curveWidth}\n            d={curve} />);\n    }\n}\n","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\n\ninterface HandleProps extends TransformProps {\n    handleRadius: number,\n    handleColor: string,\n    hover: boolean,\n    down: boolean,\n    background: string,\n    handleStroke: number,\n    xstart: number,\n    ystart: number,\n    xval: number,\n    yval: number,\n    onMouseEnter: (event: React.MouseEvent)=>void,\n    onMouseLeave: (event: React.MouseEvent)=>void,\n    onMouseDown: (event: React.MouseEvent)=>void,\n}\n\nexport class HandleComponent extends TransformComponent<HandleProps> {\n    shouldComponentUpdate(nextProps: HandleProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n        return nextProps.xstart !== xstart ||\n            nextProps.ystart !== ystart ||\n            nextProps.handleRadius !== handleRadius ||\n            nextProps.handleColor !== handleColor ||\n            nextProps.hover !== hover ||\n            nextProps.down !== down ||\n            nextProps.background !== background ||\n            nextProps.handleStroke !== handleStroke ||\n            nextProps.xval !== xval ||\n            nextProps.yval !== yval ||\n            nextProps.onMouseDown !== onMouseDown ||\n            nextProps.onMouseLeave !== onMouseLeave ||\n            nextProps.onMouseEnter !== onMouseEnter;\n    }\n\n    render() {\n        const { x, y } = this;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n\n        const sx = x(xstart);\n        const sy = y(ystart);\n        const cx = x(xval);\n        const cy = y(yval);\n        const a = Math.atan2(cy-sy, cx-sx);\n        const cxs = cx - handleRadius * Math.cos(a);\n        const cys = cy - handleRadius * Math.sin(a);\n\n        return <g>\n            <line\n                stroke={handleColor}\n                strokeWidth={hover||down ? 1 + handleStroke : handleStroke}\n                x1={cxs}\n                y1={cys}\n                x2={sx}\n                y2={sy} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={handleRadius}\n                stroke={handleColor}\n                strokeWidth={down ? 2 * handleStroke : handleStroke}\n                fill={down ? background: handleColor}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseDown={onMouseDown} />\n        </g>;\n    }\n}","import * as React from \"react\";\nimport {CurveComponent} from \"./CurveComponent\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {HandleComponent} from \"./HandleComponent\";\nimport {createRef} from \"react\";\n\ninterface BezierCurvesEditorProps {\n    value: PiecewiseBezier\n    onChange?: (value:PiecewiseBezier) => void,\n    width: number,\n    height: number,\n    padding?: Array<number>,\n    className?: string,\n    background?: string,\n    gridColor?: string,\n    curveColor?: string,\n    handleColor?: string,\n    curveWidth?: number,\n    handleRadius?: number,\n    handleStroke?: number,\n    readOnly?: boolean,\n    style?: React.CSSProperties,\n    pointers?: React.CSSProperties,\n    textStyle?: React.CSSProperties,\n}\n\ninterface BezierCurvesEditorState {\n    curve: number,\n    hover: number,\n    down: number,\n}\n\nexport class BezierCurvesEditor extends React.PureComponent<BezierCurvesEditorProps, BezierCurvesEditorState> {\n\n\n    static defaultP = {\n        padding: [0, 0, 0, 0],\n        handleRadius: 4,\n    }; //[25, 5, 25, 18]\n\n    constructor(props: Readonly<BezierCurvesEditorProps>) {\n        super(props);\n        this.state = {\n            curve: -1,\n            down: -1,\n            hover: -1,\n        };\n    }\n\n    rootRef = createRef<HTMLDivElement>();\n\n    positionForEvent = (e: React.MouseEvent) => {\n        if (this.rootRef.current) {\n            const rect = this.rootRef.current.getBoundingClientRect();\n            return [e.clientX - rect.left, e.clientY - rect.top];\n        } else {\n            return [0, 0];\n        }\n    };\n\n    x = (value:number) => {\n    };\n\n    y = (value:number) => {\n    };\n\n    inversex = (x:number) => {\n    };\n\n    inversey = (y:number) => {\n    };\n\n    onDownLeave = (e: React.MouseEvent) => {\n        if (this.state.down) {\n            this.onDownMove(e);\n            this.setState({\n                down: -1,\n                hover: -1\n            });\n        }\n    };\n    onDownMove = (e: React.MouseEvent) => {\n        if (this.state.down >= 0) {\n            e.preventDefault();\n            const [x, y] = this.positionForEvent(e);\n            const value = new PiecewiseBezier(this.props.value.functions);\n\n            const valueX = x / this.props.width;\n            const curveIndex = this.state.curve;\n            const curve = value.getFunction(curveIndex);\n\n            if (this.state.down === 0) {\n                const old = curve.p[0];\n                curve.p[0] = (this.props.height - y) / this.props.height;\n                curve.p[1] += curve.p[0] - old;\n                value.setStartX(curveIndex, x / this.props.width);\n                if (curveIndex - 1 >= 0) {\n                    const pCurve = value.getFunction(curveIndex - 1);\n                    pCurve.p[3] = (this.props.height - y) / this.props.height;\n                    pCurve.p[2] += curve.p[0] - old;\n                    value.setFunction(curveIndex - 1, value.getFunction(curveIndex - 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 3) {\n                const old = curve.p[3];\n                curve.p[3] = (this.props.height - y) / this.props.height;\n                curve.p[2] += curve.p[3] - old;\n                value.setEndX(curveIndex, x / this.props.width);\n                if (curveIndex + 1 < value.numOfFunctions) {\n                    const nCurve = value.getFunction(curveIndex + 1);\n                    nCurve.p[0] = (this.props.height - y) / this.props.height;\n                    nCurve.p[1] += curve.p[3] - old;\n                    value.setFunction(curveIndex + 1, value.getFunction(curveIndex + 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 1) {\n                curve.p[1] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 2) {\n                curve.p[2] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            //value[i] = this.inversex(x);\n            //value[i + 1] = this.inversey(y);\n            if (this.props.onChange)\n                this.props.onChange(value);\n        }\n    };\n\n    onDownUp = () => {\n        // this.onDownMove(e);\n        this.setState({\n            down: -1,\n        });\n    };\n\n\n    onEnterHandle(curve: number, h: number) {\n        if (!this.state.down) {\n            this.setState({\n                hover: h,\n                curve: curve,\n            });\n        }\n    }\n    onDownHandle(curve: number, h: number, e: React.MouseEvent) {\n        e.preventDefault();\n        this.setState({\n            hover: -1,\n            down: h,\n            curve: curve,\n        });\n    }\n\n    onLeaveHandle() {\n        if (!this.state.down) {\n            this.setState({\n                hover: -1,\n            });\n        }\n    }\n\n    render() {\n\n        const {\n            width,\n            height,\n            value,\n            curveWidth = 1,\n            curveColor = \"#000\",\n            handleRadius = BezierCurvesEditor.defaultP.handleRadius,\n            handleColor = \"#f00\",\n            handleStroke = 1,\n            background = \"#fff\",\n        } = this.props;\n\n        const {\n            curve: curveIndex,\n            down,\n            hover\n        } = this.state;\n\n        const curves = [];\n        for (let i = 0; i < value.numOfFunctions; i ++) {\n            const x1 = value.getStartX(i);\n            const x2 = value.getEndX(i);\n            const curve = value.getFunction(i);\n            const slope0 = curve.getSlope(0);\n            const slope1 = curve.getSlope(1);\n\n            curves.push(\n                <g key={i}>\n                    <CurveComponent xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        curveColor={curveColor} curveWidth={curveWidth} value={curve}/>\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 0, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 0)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={0}\n                        yval={curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 0}\n                        hover={curveIndex === i && hover === 0}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 1, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 1)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={1.0 / 3}\n                        yval={1.0 / 3 * slope0 + curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 1}\n                        hover={curveIndex === i && hover === 1}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 2, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 2)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1 - 1.0 / 3}\n                        yval={curve.p[3] - 1.0 / 3 * slope1}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 2}\n                        hover={curveIndex === i && hover === 2}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 3, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 3)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1}\n                        yval={curve.p[3]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 3}\n                        hover={curveIndex === i && hover === 3}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                </g>);\n        }\n        return <div ref={this.rootRef}\n                    onMouseMove={this.onDownMove}\n                    onMouseUp={this.onDownUp}\n                    onMouseLeave={this.onDownLeave}>\n            <svg width={width} height={height}>\n                {curves}\n            </svg>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {IntervalValue} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {NumberInput} from \"./NumberInput\";\nimport {ColorEditor} from \"./ColorEditor\";\nimport \"./GeneratorEditor.scss\";\nimport {BezierCurvesEditor} from \"./bezier/BezierCurvesEditor\";\n\ntype EditorType =\n    'constant'\n    | 'intervalValue'\n    | 'piecewiseBezier'\n    | 'color'\n    | 'randomColor'\n    | 'colorRange'\n    | 'gradient';\nexport type ValueType = 'value' | 'functionValue' | 'color' | 'functionColor';\n\nconst ValueToEditor: { [a: string]: Array<EditorType> } = {\n    'value': ['constant', 'intervalValue'],\n    'functionValue': ['piecewiseBezier'],\n    'color': ['color', 'randomColor'],\n    'functionColor': ['colorRange', 'gradient'],\n};\n\nexport type GenericGenerator = ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator;\n\ninterface GeneratorEditorProps {\n    allowedType: Array<ValueType>;\n    name: string;\n    generator: GenericGenerator;\n    updateGenerator: (generator: GenericGenerator) => void;\n}\n\ninterface GeneratorEditorState {\n    open: boolean;\n}\n\nexport class GeneratorEditor extends React.PureComponent<GeneratorEditorProps, GeneratorEditorState> {\n\n    constructor(props: Readonly<GeneratorEditorProps>) {\n        super(props);\n        const currentEditor = ValueToEditor[props.allowedType[0]][0];\n        this.state = {\n            open: false,\n        }\n    }\n    changeEditor = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const editorType = e.target.value;\n        let generator: GenericGenerator | null = null;\n        switch(editorType) {\n            case \"constant\":\n                generator = new ConstantValue(0);\n                break;\n            case \"color\":\n                generator = new ConstantColor(new Vector4(1,1,1,1));\n                break;\n            case \"intervalValue\":\n                generator = new IntervalValue(0, 1);\n                break;\n            case \"colorRange\":\n                generator = new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"randomColor\":\n                generator = new RandomColor(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"piecewiseBezier\":\n                generator = new PiecewiseBezier();\n                break;\n        }\n        if (generator)\n            this.props.updateGenerator(generator);\n    }\n\n    changeValue = (x: number) => {\n        this.props.updateGenerator(new ConstantValue(x));\n    };\n\n    changeColor = (x: Vector4) => {\n        this.props.updateGenerator(new ConstantColor(x));\n    };\n\n    changeValueA = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(x, interval.b));\n    };\n\n    changeValueB = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(interval.a, x));\n    };\n\n    changeColorRangeA = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(x, colorRange.b));\n    };\n    changeColorRangeB = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(colorRange.a, x));\n    };\n    changeRandomColorA = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(x, randomColor.b));\n    };\n    changeRandomColorB = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(randomColor.a, x));\n    };\n\n    changeCurve = (x: PiecewiseBezier) => {\n        this.props.updateGenerator(new PiecewiseBezier(x.functions));\n    }\n\n    getEditorType(generator: GenericGenerator): EditorType {\n        if (generator instanceof ConstantValue) {\n            return 'constant';\n        } else if (generator instanceof IntervalValue) {\n            return 'intervalValue';\n        } else if (generator instanceof PiecewiseBezier) {\n            return 'piecewiseBezier';\n        } else if (generator instanceof ConstantColor) {\n            return 'color';\n        } else if (generator instanceof RandomColor) {\n            return 'randomColor';\n        } else if (generator instanceof ColorRange) {\n            return 'colorRange';\n        } else if (generator instanceof Gradient) {\n            return 'gradient';\n        }\n        return 'constant';\n    }\n\n    render() {\n        //console.log('render GeneratorEditor');\n        const {name, generator, allowedType} = this.props;\n\n        const editorTypes = [];\n        for (const valueType of allowedType) {\n            for (const editorType of ValueToEditor[valueType]) {\n                editorTypes.push(editorType);\n            }\n        }\n\n        const currentEditor = this.getEditorType(generator);\n        //console.log(currentEditor);\n\n        let editor;\n        switch (currentEditor) {\n            case \"constant\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as ConstantValue).value}\n                                 onChange={this.changeValue}/></React.Fragment>;\n                break;\n            case \"color\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ConstantColor).color} onChange={this.changeColor}/>\n                </React.Fragment>);\n                break;\n            case \"intervalValue\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as IntervalValue).a}\n                                 onChange={this.changeValueA}/>-<NumberInput\n                    value={(generator as IntervalValue).b} onChange={this.changeValueB}/></React.Fragment>;\n                break;\n            case \"piecewiseBezier\":\n                editor = <React.Fragment>\n                    <BezierCurvesEditor height={40} width={240} value={(generator as PiecewiseBezier)} onChange={this.changeCurve}/>\n                </React.Fragment>;\n                break;\n            case \"colorRange\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ColorRange).a} onChange={this.changeColorRangeA}/>-\n                    <ColorEditor color={(generator as ColorRange).b} onChange={this.changeColorRangeB}/>\n                </React.Fragment>);\n                break;\n            case \"randomColor\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as RandomColor).a} onChange={this.changeRandomColorA}/>-\n                    <ColorEditor color={(generator as RandomColor).b} onChange={this.changeRandomColorB}/>\n                </React.Fragment>);\n                break;\n        }\n        return <div className=\"property\">\n            <label className=\"name\">{name}</label>\n            {editor}\n            <select className=\"editor-select\" onChange={this.changeEditor} value={currentEditor}>\n                {editorTypes.map(editorType => <option key={editorType} value={editorType}>{editorType}</option>)}\n            </select>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\n\ninterface ParticleSystemPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: ()=>void,\n}\n\nexport class ParticleSystemProperties extends React.PureComponent<ParticleSystemPropertiesProps> {\n    constructor(props: Readonly<ParticleSystemPropertiesProps>) {\n        super(props);\n    }\n    onChangeStartSpeed = (g: GenericGenerator) => {\n        console.log(\"change start speed\");\n        this.props.particleSystem.startSpeed = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartLife = (g: GenericGenerator) => {\n        console.log(\"change start life\");\n        this.props.particleSystem.startLife = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartSize = (g: GenericGenerator) => {\n        console.log(\"change start size\");\n        this.props.particleSystem.startSize = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartColor = (g: GenericGenerator) => {\n        console.log(\"change start color\");\n        this.props.particleSystem.startColor = g as ColorGenerator | FunctionColorGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeStartRotation = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.startRotation = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeEmissionOverTime = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.emissionOverTime = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        const valueFunctionTypes = ['value', 'functionValue'] as Array<ValueType>;\n        const colorValueFunctionTypes = ['color', 'functionColor'] as Array<ValueType>;\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Life\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startLife}\n                                         updateGenerator={this.onChangeStartLife}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Size\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSize}\n                                         updateGenerator={this.onChangeStartSize}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Speed\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSpeed}\n                                         updateGenerator={this.onChangeStartSpeed}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Color\"\n                                         allowedType={colorValueFunctionTypes}\n                                         generator={this.props.particleSystem.startColor}\n                                         updateGenerator={this.onChangeStartColor}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Rotation\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startRotation}\n                                         updateGenerator={this.OnChangeStartRotation}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Emission Over Time\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.emissionOverTime}\n                                         updateGenerator={this.OnChangeEmissionOverTime}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\n\n\ninterface FileInputProps {\n    onChange: (files: FileList) => void;\n}\n\nexport class FileInput extends React.Component<FileInputProps>\n{\n    constructor(props: any)\n    {\n        super(props);\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onChange(e.target.files);\n    };\n\n    render ()\n    {\n        return <div>\n            <input\n                accept=\"image/*\"\n                type=\"file\"\n                id=\"contained-button-file\"\n                style={{display: 'none'}}\n                onChange={this.handleChange} />\n            <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload\n                </Button>\n            </label>\n        </div>;\n    }\n}\n","\nimport {Theme, styled} from '@mui/material/styles';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport {Box, Button, Dialog, ImageList, ImageListItem, ImageListItemBar} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport {Texture} from \"three\";\nimport {TextureImage} from \"./ApplicationContext\";\nimport {FileInput} from \"./editors/FileInput\";\nimport \"./TexturePicker.scss\";\n\nexport interface DialogTitleProps {\n    id: string;\n    children: React.ReactNode;\n    onClose: () => void;\n}\n\nconst DialogTitle = (props: DialogTitleProps) => {\n    const { children, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle sx={{\n            margin: 0,\n            padding: (theme) => theme.spacing(2)\n        }} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" sx={{\n                    position: 'absolute',\n                    right: theme => theme.spacing(1),\n                    top: theme =>theme.spacing(1),\n                    color: theme => theme.palette.grey[500],\n                }} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({theme}) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({theme}) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}));\n\nexport interface TexturePickerProps {\n    textures: Array<TextureImage>,\n    open: boolean,\n    handleSelect: (texture: TextureImage)=>void,\n    handleUpload: (files: FileList)=>void,\n    handleClose: ()=>void,\n}\n\nexport const TexturePicker: React.FC<TexturePickerProps> = (props) => {\n    const [selected, setSelected] = useState(0);\n\n    return (\n        <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n                Picker Texture\n            </DialogTitle>\n            <DialogContent dividers>\n                <Box sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-around',\n                    overflow: 'hidden',\n                    backgroundColor: theme => theme.palette.background.paper,\n                }}>\n                    <ImageList rowHeight={160} sx={{width: 500, height: 450}} cols={3}>\n                        {props.textures.map((texture, index) => (\n                            <ImageListItem key={texture.img} cols={1} onClick={() => {setSelected(index)}} className={ index === selected ? 'selected-tile': ''}>\n                                <img src={texture.img} alt={texture.texture.name} />\n                                <ImageListItemBar\n                                    title={texture.texture.name}\n                                    subtitle={<span>by: {texture.texture.name}</span>}\n                                />\n                            </ImageListItem>\n                        ))}\n                    </ImageList>\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <FileInput onChange={props.handleUpload} />\n                <Button variant={'contained'} onClick={() => {props.handleSelect(props.textures[selected]); props.handleClose(); }}>Confirm</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import * as React from \"react\";\nimport {AdditiveBlending, Blending, NormalBlending, Texture} from \"three\";\nimport {AppContext, ApplicationContextConsumer, TextureImage} from \"./ApplicationContext\";\nimport {ParticleSystem, RenderMode} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {TexturePicker} from \"./TexturePicker\";\nimport {Button} from \"@mui/material\";\n\n\ninterface ParticleRendererPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: ()=>void,\n}\n\ninterface ParticleRendererPropertiesState {\n    texturePickerOpen: boolean,\n}\n\nexport class ParticleRendererProperties extends React.PureComponent<ParticleRendererPropertiesProps, ParticleRendererPropertiesState> {\n    constructor(props: Readonly<ParticleRendererPropertiesProps>) {\n        super(props);\n        this.state = {\n            texturePickerOpen: false,\n        };\n    }\n    onChangeSpeedFactor = (order: number) => {\n        this.props.particleSystem.speedFactor = order;\n        this.props.updateProperties();\n    };\n    onChangeRenderOrder = (order: number) => {\n        this.props.particleSystem.renderOrder = order;\n        this.props.updateProperties();\n    };\n    onChangeStartTile = (index: number) => {\n        this.props.particleSystem.startTileIndex = index;\n        this.props.updateProperties();\n    };\n    onChangeUTileCount = (u: number) => {\n        this.props.particleSystem.uTileCount = u;\n        this.props.updateProperties();\n    };\n    onChangeVTileCount = (v: number) => {\n        this.props.particleSystem.vTileCount = v;\n        this.props.updateProperties();\n    };\n    onChangeBlending = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"Normal\":\n                this.props.particleSystem.blending = NormalBlending;\n                break;\n            case \"Additive\":\n                this.props.particleSystem.blending = AdditiveBlending;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBlending = (blending: Blending) => {\n        switch (blending) {\n            case NormalBlending:\n                return \"Normal\"\n            case AdditiveBlending:\n                return \"Additive\";\n        }\n    }\n\n    onChangeRenderMode = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"BillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.BillBoard;\n                this.props.particleSystem.speedFactor = 0;\n                break;\n            case \"LocalSpace\":\n                this.props.particleSystem.renderMode = RenderMode.LocalSpace;\n                this.props.particleSystem.speedFactor = 0;\n                break;\n            case \"StretchedBillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.StretchedBillBoard;\n                break;\n        }\n        this.props.updateProperties();\n    }\n    getValueOfRenderMode = (renderMode: RenderMode) => {\n        switch (renderMode) {\n            case RenderMode.BillBoard:\n                return \"BillBoard\"\n            case RenderMode.LocalSpace:\n                return \"LocalSpace\";\n            case RenderMode.StretchedBillBoard:\n                return \"StretchedBillBoard\";\n        }\n    }\n\n    onChangeWorldSpace = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"True\":\n                this.props.particleSystem.worldSpace = true;\n                break;\n            case \"False\":\n                this.props.particleSystem.worldSpace = false;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBoolean = (worldSpace: boolean) => {\n        return worldSpace ? 'True': 'False';\n    }\n\n    onUploadTexture = (context: AppContext) => (files: FileList) => {\n        console.log(\"upload texture\");\n        const image = document.createElement( 'img' );\n        const texture = new Texture( image );\n        image.onload = function()  {\n            texture.needsUpdate = true;\n        };\n        if (files && files[0]) {\n            const reader = new FileReader();\n            reader.onload = function (e) {\n                image.src = reader.result as string;\n            };\n            reader.readAsDataURL(files[0]);\n\n            texture.name = files[0].name;\n            const textureImage = {\n                img: URL.createObjectURL(files[0]),\n                texture: texture\n            };\n            context.actions.addTexture(textureImage);\n        }\n\n    }\n\n    onChangeTexture = (textureImage: TextureImage) => {\n        console.log(\"change texture\");\n        this.props.particleSystem.texture = textureImage.texture;\n        this.props.updateProperties();\n    };\n\n    closeTexturePicker = () => {\n        this.setState({texturePickerOpen: false});\n    }\n\n    openTexturePicker = () => {\n        this.setState({texturePickerOpen: true});\n    }\n\n    render() {\n        console.log('rendered particleRendererProperties');\n        return (\n            <div className=\"property-container\">\n                <div className=\"property\">\n                    <label className=\"name\">RenderMode</label>\n                    <select className=\"editor-select\" onChange={this.onChangeRenderMode} value={this.getValueOfRenderMode(this.props.particleSystem.renderMode)}>\n                        <option key={0} value=\"BillBoard\" >BillBoard</option>\n                        <option key={1} value=\"LocalSpace\" >Local Space BillBoard</option>\n                        <option key={2} value=\"StretchedBillBoard\" >Stretched BillBoard</option>\n                    </select>\n                </div>\n                {this.props.particleSystem.renderMode === RenderMode.StretchedBillBoard &&\n                    <div className=\"property\">\n                        <label className=\"name\">SpeedFactor</label>\n                        <NumberInput value={this.props.particleSystem.speedFactor} onChange={this.onChangeSpeedFactor}/>\n                    </div>\n                }\n                <div className=\"property\">\n                    <label className=\"name\">World Space</label>\n                    <select className=\"editor-select\" onChange={this.onChangeWorldSpace} value={this.getValueOfBoolean(this.props.particleSystem.worldSpace)}>\n                        <option key={0} value=\"True\" >True</option>\n                        <option key={1} value=\"False\" >False</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Blend Mode</label>\n                    <select className=\"editor-select\" onChange={this.onChangeBlending} value={this.getValueOfBlending(this.props.particleSystem.blending)}>\n                        <option key={0} value=\"Normal\" >Normal</option>\n                        <option key={1} value=\"Additive\" >Additive</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">RenderOrder:</label><NumberInput value={this.props.particleSystem.renderOrder} onChange={this.onChangeRenderOrder}/>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">UVTile</label>\n                    <label>Column:</label><NumberInput value={this.props.particleSystem.uTileCount} onChange={this.onChangeUTileCount}/>\n                    <label>Row:</label><NumberInput value={this.props.particleSystem.vTileCount} onChange={this.onChangeVTileCount}/>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Start Tile Index</label><NumberInput value={this.props.particleSystem.startTileIndex} onChange={this.onChangeStartTile}/>\n                </div>\n                <ApplicationContextConsumer>\n                    {context => {\n                        let texture;\n                        for (let i = 0; i < context!.textures.length; i ++) {\n                            if (context!.textures[i].texture === this.props.particleSystem.texture) {\n                                texture = context!.textures[i];\n                            }\n                        }\n                        let gridWidth=1, gridHeight=1;\n                        if (texture && texture.texture.image) {\n                            gridWidth = texture.texture.image.width / this.props.particleSystem.uTileCount;\n                            gridHeight = texture.texture.image.height / this.props.particleSystem.vTileCount;\n                        }\n                        return <div className=\"property\">\n                            <label className=\"name\">Texture</label>\n                            {texture && <img className=\"texture-preview\" src={texture.img} alt={texture.texture.name}\n                                             style={{objectPosition: `-${(this.props.particleSystem.startTileIndex % this.props.particleSystem.uTileCount) * gridWidth}px -${Math.floor(this.props.particleSystem.startTileIndex / this.props.particleSystem.uTileCount) * gridHeight}px`,\n                                                 width: gridWidth,\n                                                 height: gridHeight}}/>}\n                            {/*this.props.particleSystem.texture ? this.props.particleSystem.texture.name : \"..\"*/}\n                            <Button onClick={this.openTexturePicker} variant={'contained'}>Pick</Button>\n                        </div>;\n                    }}\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <TexturePicker handleClose={this.closeTexturePicker} handleSelect={this.onChangeTexture} handleUpload={this.onUploadTexture(context)} open={this.state.texturePickerOpen} textures={context.textures}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport \"./ScriptEditor.scss\";\n\ninterface ScriptEditorProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const ScriptEditor : React.FC<ScriptEditorProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (value: string) => {\n        if (focus) {\n            setInputValue(value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return(\n        <Editor\n            value={focus? inputValue: props.value}\n            onValueChange={onInputChange}\n            highlight={code => highlight(code, languages.javascript, \"javascript\")}\n            padding={10}\n            onBlur={onInputBlur} onFocus={onInputFocus} //onKeyDown={onKeyDown}\n            style={{\n                fontFamily: '\"Consolas\", monospace',\n                fontSize: 12,\n            }}\n        />);\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScriptPropertiesProps {\n    object3d: Object3D,\n    updateProperties: () => void,\n}\n\n\nexport class ScriptProperties extends React.PureComponent<ScriptPropertiesProps> {\n    constructor(props: Readonly<ScriptPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeScript = (script: string) => {\n        if (this.props.object3d.userData === null) {\n            this.props.object3d.userData = {};\n        }\n        this.props.object3d.userData.script = script;\n        this.props.object3d.userData.func = new Function(\"delta\", script);\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                        <label className=\"script\">Script:</label>\n                        <ScriptEditor value={this.props.object3d.userData.script || \"\"} onChange={this.onChangeScript}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ConeEmitter, DonutEmitter, EmitterShape, ParticleSystem, PointEmitter, SphereEmitter} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport React, {ChangeEvent} from \"react\";\n\n\ninterface EmitterShapePropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: ()=>void,\n}\n\ninterface EmitterShapePropertiesState {\n\n}\n\nexport class EmitterShapeProperties extends React.PureComponent<EmitterShapePropertiesProps, EmitterShapePropertiesState> {\n    constructor(props: Readonly<EmitterShapePropertiesProps>) {\n        super(props);\n    }\n\n    getValueOfShape = (shape: EmitterShape) => {\n        if (this.props.particleSystem.emitterShape instanceof PointEmitter) {\n            return \"PointEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof ConeEmitter) {\n            return \"ConeEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof SphereEmitter) {\n            return \"SphereEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof DonutEmitter) {\n            return \"DonutEmitter\";\n        } else\n            return \"\";\n    };\n\n    onChangeShape = (e: ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"PointEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof PointEmitter)) {\n                    this.props.particleSystem.emitterShape = new PointEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"ConeEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof ConeEmitter)) {\n                    this.props.particleSystem.emitterShape = new ConeEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"SphereEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof SphereEmitter)) {\n                    this.props.particleSystem.emitterShape = new SphereEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"DonutEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof DonutEmitter)) {\n                    this.props.particleSystem.emitterShape = new DonutEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n        }\n    };\n\n    onChangeKeyValue = (k: string, v: number) => {\n        (this.props.particleSystem.emitterShape as any)[k] = v;\n        this.props.updateProperties();\n    };\n\n    renderShapeProperties() {\n        const properties = [];\n        for (const key in this.props.particleSystem.emitterShape) {\n            properties.push(\n                <div key={key} className=\"property\">\n                    <label className=\"name\">{key}:</label>\n                    <NumberInput value={(this.props.particleSystem.emitterShape as any)[key]} onChange={(value) => this.onChangeKeyValue(key, value)}/>\n                </div>\n            );\n        }\n        return properties;\n    }\n\n    render() {\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Shape</label>\n                            <select className=\"editor-select\" onChange={this.onChangeShape} value={this.getValueOfShape(this.props.particleSystem.emitterShape)}>\n                                <option key={0} value=\"PointEmitter\" >PointEmitter</option>\n                                <option key={1} value=\"ConeEmitter\" >ConeEmitter</option>\n                                <option key={2} value=\"SphereEmitter\" >SphereEmitter</option>\n                                <option key={3} value=\"DonutEmitter\" >DonutEmitter</option>\n                            </select>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context && this.renderShapeProperties()}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {\n    ParticleSystem,\n    ParticleEmitter\n} from \"three.quarks\";\nimport {Object3D} from \"three\";\nimport {ButtonGroup} from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButtonGroup from '@mui/lab/ToggleButtonGroup';\n\ninterface ParticleSystemControllerProps {\n    object3d: Object3D,\n    updateProperties: ()=>void,\n}\n\nexport class ParticleSystemController extends React.PureComponent<ParticleSystemControllerProps> {\n    constructor(props: Readonly<ParticleSystemControllerProps>) {\n        super(props);\n    }\n\n    getSystems = () => {\n        const systems: Array<ParticleSystem> = [];\n        if (this.props.object3d instanceof ParticleEmitter) {\n            systems.push(this.props.object3d.system);\n        }\n        this.props.object3d.traverse(object => {\n            if (object instanceof ParticleEmitter) {\n                systems.push(object.system);\n            }\n        });\n        return systems;\n    };\n\n    checkPause = (systems: Array<ParticleSystem>) => {\n        let paused = true;\n        systems.forEach(system => {\n            if (!system.paused) {\n                paused = false;\n            }\n        });\n        return paused;\n    };\n\n    togglePause = () => {\n        const systems: Array<ParticleSystem> = this.getSystems();\n        const paused = this.checkPause(systems);\n\n        if (paused) {\n            systems.forEach(system => {\n                system.play();\n            });\n        } else {\n            systems.forEach(system => {\n                system.pause();\n            });\n        }\n        this.props.updateProperties();\n    };\n\n    onRestart = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n        });\n        this.props.updateProperties();\n    };\n\n    onStop = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n            system.pause();\n        });\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ToggleButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                </ToggleButtonGroup>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                        <Button disabled={!this.checkPause(this.getSystems())} onClick={this.togglePause}>Play</Button>\n                        <Button disabled={this.checkPause(this.getSystems())} onClick={this.togglePause}>Pause</Button>\n                        <Button onClick={this.onRestart}>Restart</Button>\n                        <Button onClick={this.onStop}>Stop</Button>\n                    </ButtonGroup>}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {\n    Behavior, Bezier,\n    ColorOverLife, ColorRange,\n    FrameOverLife,\n    OrbitOverLife,\n    PiecewiseBezier,\n    RotationOverLife,\n    SizeOverLife, SpeedOverLife\n} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport { FunctionColorGenerator} from \"three.quarks\";\nimport {ListItem, List, Theme, createStyles, ListItemIcon, Box} from \"@mui/material\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport makeStyles from \"@mui/material/styles/makeStyles\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {Vector4} from \"three\";\n\ninterface BehaviorsPropertiesProps {\n    behaviors: Array<Behavior>,\n    updateProperties: ()=>void,\n}\n/*\n<GeneratorEditor name=\"Start Speed\"\n                 allowedType={valueFunctionTypes}\n                 generator={this.props.particleSystem.startSpeed}\n                 updateGenerator={this.onChangeStartSpeed}/>*/\n\nfunction BehaviorsPropertiesFunc(props: BehaviorsPropertiesProps) {\n    const [checked, setChecked] = React.useState([0, 1, 2, 3]);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const handleListItemClick = (event: any, index: number) => {\n        setSelectedIndex(index);\n    };\n\n    const handleToggle = (value: number) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n\n    const deleteBehavior = () => {\n        props.behaviors.splice(selectedIndex, 1);\n        props.updateProperties();\n    }\n\n    const onAddNewBehavior = (type: string) => () => {\n        let behavior;\n        switch (type) {\n            case 'ColorOverLife':\n                behavior = new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0)));\n                break;\n            case 'RotationOverLife':\n                behavior = new RotationOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SizeOverLife':\n                behavior = new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'FrameOverLife':\n                behavior = new FrameOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'OrbitOverLife':\n                behavior = new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SpeedOverLife':\n                behavior = new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.6667, 0.3333, 0.0), 0]]));\n                break;\n            default:\n                break;\n        }\n        if (behavior) {\n            props.behaviors.push(behavior);\n            props.updateProperties();\n        }\n        setAnchorEl(null);\n    }\n\n    const onChangeBehaviorFunc = (index: number) => (generator: GenericGenerator) => {\n        const behavior = props.behaviors[index];\n        switch (behavior.type) {\n            case 'ColorOverLife':\n                (behavior as ColorOverLife).func = generator as FunctionColorGenerator;\n                break;\n            case 'RotationOverLife':\n                (behavior as RotationOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            case 'SizeOverLife':\n                (behavior as SizeOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'FrameOverLife':\n                (behavior as FrameOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'OrbitOverLife':\n                (behavior as OrbitOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            default:\n                break;\n        }\n        console.log(\"changing\")\n        props.updateProperties();\n    }\n\n    return (\n        <Box sx={{width: '100%'}}>\n            <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                <Button color=\"inherit\" aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\" onClick={handleClick} id=\"new-button\">\n                    New\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={onAddNewBehavior('SizeOverLife')}>SizeOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('ColorOverLife')}>ColorOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('RotationOverLife')}>RotationOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('FrameOverLife')}>FrameOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('OrbitOverLife')}>OrbitOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('SpeedOverLife')}>SpeedOverLife</MenuItem>\n                </Menu>\n                <Button onClick={deleteBehavior}>Remove</Button>\n            </ButtonGroup>\n            <List dense sx={{\n                width: '100%',\n                backgroundColor: theme => theme.palette.background.paper}}>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    props.behaviors.map((behavior, index) => {\n                        const labelId = `behavior-list-label-${index}`;\n                        let valueTypes: Array<ValueType>;\n                        let func: FunctionColorGenerator | FunctionValueGenerator | ValueGenerator | null = null;\n                        switch (behavior.type) {\n                            case 'ColorOverLife':\n                                valueTypes = ['functionColor'];\n                                func = (behavior as ColorOverLife).func;\n                                break;\n                            case 'RotationOverLife':\n                                valueTypes = ['functionValue', 'value'];\n                                func = (behavior as RotationOverLife).angularVelocityFunc;\n                                break;\n                            case 'SizeOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SizeOverLife).func;\n                                break;\n                            case 'FrameOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as FrameOverLife).func;\n                                break;\n                            case 'OrbitOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as OrbitOverLife).angularVelocityFunc;\n                                break;\n                            case 'SpeedOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SpeedOverLife).func;\n                                break;\n                            default:\n                                valueTypes = ['functionValue'];\n                                break;\n                        }\n\n                        let editor;\n                        if (func) {\n                            editor = <GeneratorEditor name=\"Func\"\n                                                      allowedType={valueTypes}\n                                                      generator={func!}\n                                                      updateGenerator={onChangeBehaviorFunc(index)}/>;\n                        }\n\n                        return (\n                            <ListItem key={index}\n                                      selected={selectedIndex === index}\n                                      onClick={(event) => handleListItemClick(event, index)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"end\"\n                                        onChange={handleToggle(index)}\n                                        checked={checked.indexOf(index) !== -1}\n                                        inputProps={{'aria-labelledby': labelId}}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={behavior.type}\n                                              secondary={editor}/>\n                            </ListItem>\n                        );\n                    })\n                }\n                </ApplicationContextConsumer>\n            </List>\n        </Box>\n    );\n}\n\nexport const BehaviorsProperties = React.memo(BehaviorsPropertiesFunc);\n","import * as React from \"react\";\nimport {ConstantValue} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {Object3D, Vector4} from \"three\";\nimport {ObjectProperties} from \"./ObjectProperties\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {ParticleSystemProperties} from \"./ParticleSystemProperties\";\nimport {ParticleRendererProperties} from \"./ParticleRendererProperties\";\nimport {ScriptProperties} from \"./ScriptProperties\";\nimport {EmitterShapeProperties} from \"./EmitterShapeProperties\";\nimport {ParticleSystemController} from \"./ParticleSystemController\";\nimport {AccordionProps, AccordionSummaryProps, Box, createStyles, makeStyles, styled, Theme} from \"@mui/material\";\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\nimport MuiAccordion from \"@mui/material/Accordion\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport \"./PropertiesEditor.scss\";\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport {BehaviorsProperties} from \"./BehaviorsProperties\";\nimport {useState} from \"react\";\n\nconst Accordion = styled((props: AccordionProps) => (\n    <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({theme})=>({\n    border: `1px solid ${theme.palette.divider}`,\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    },\n    '&:before': {\n        display: 'none',\n    },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n    <MuiAccordionSummary\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n        {...props}\n    />))(({theme})=>({\n    minHeight: 0,\n    backgroundColor:\n        theme.palette.mode === 'dark'\n            ? 'rgba(255, 255, 255, .05)'\n            : 'rgba(0, 0, 0, .03)',\n    flexDirection: 'row-reverse',\n    //marginBottom: -1,\n    '& .MuiAccordionSummary-content': {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(90deg)',\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n    padding: theme.spacing(2),\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\n\nconst StyledHeading = styled(Typography)(({theme})=>({\n    fontWeight: theme.typography.fontWeightRegular,\n}));\n\ninterface PropertiesEditorProps {\n    object3d: Object3D\n}\n\nexport default function PropertiesEditor(props: PropertiesEditorProps) {\n    const [expanded, setExpanded] = useState(['Object', 'EmitterShape', 'ParticleRenderer','ParticleEmitter','Behaviors','Script']);\n\n    const handleChange = (panel: string) => (event: any, isExpanded: boolean) => {\n        if (isExpanded) {\n            expanded.push(panel);\n        } else {\n            expanded.splice(expanded.indexOf(panel), 1);\n        }\n        setExpanded(expanded);\n    };\n\n    return (\n        <Box sx={{width: '100%'}}>\n            <ApplicationContextConsumer>\n                {context => context &&\n                    <ParticleSystemController object3d={props.object3d}\n                                              updateProperties={context.updateProperties}/>\n                }\n            </ApplicationContextConsumer>\n            <Accordion expanded={(expanded.indexOf('Object') !== -1)} onChange={handleChange('Object')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"object-content\"\n                    id=\"object-header\"\n                >\n                    <StyledHeading>Object</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ObjectProperties object3d={props.object3d}\n                                              updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('EmitterShape') !== -1)} onChange={handleChange('EmitterShape')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"emitter-shape-content\"\n                    id=\"emitter-shape-header\">\n                    <StyledHeading>Emitter Shape</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <EmitterShapeProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                    updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleRenderer') !== -1)} onChange={handleChange('ParticleRenderer')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-renderer-content\"\n                    id=\"particle-renderer-header\">\n                    <StyledHeading>Particle Renderer</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleRendererProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                        updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleEmitter') !== -1)} onChange={handleChange('ParticleEmitter')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-emitter-content\"\n                    id=\"particle-emitter-header\">\n                    <StyledHeading>Particle Emitter</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleSystemProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                      updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('Behaviors') !== -1)} onChange={handleChange('Behaviors')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"behaviors-content\"\n                    id=\"behaviors-header\">\n                    <StyledHeading>Behaviors</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <BehaviorsProperties behaviors={(props.object3d as ParticleEmitter).system.behaviors}\n                                                        updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            <Accordion expanded={(expanded.indexOf('Script') !== -1)} onChange={handleChange('Script')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"script-content\"\n                    id=\"script-header\"\n                >\n                    <StyledHeading>Script</StyledHeading>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ScriptProperties object3d={props.object3d}\n                                              updateProperties={context.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n        </Box>\n    );\n}\n","import {Object3D, Vector4} from \"three\";\nimport {\n    Behavior,\n    Bezier,\n    ColorGenerator, ColorRange, ConeEmitter, ConstantColor, ConstantValue, DonutEmitter, EmitterShape,\n    FunctionColorGenerator,\n    FunctionValueGenerator, Gradient, IntervalValue,\n    ParticleEmitter, PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, SphereEmitter,\n    ValueGenerator,\n    ColorGeneratorFromJSON,\n    ColorOverLife, FrameOverLife, OrbitOverLife,\n    RotationOverLife, SizeOverLife, SpeedOverLife,\n    ValueGeneratorFromJSON\n} from \"three.quarks\";\n\n\nexport class CodeExporter {\n    /*static traverseObject(parent: Object3D): string {\n        for (let i = 0; i < parent.children.length; i ++) {\n\n        }\n    }*/\n\n    static camelize(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return index === 0 ? word.toLowerCase() : word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static camelizeClass(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static exportBezier(func: Bezier) {\n        return `new Bezier(${func.p[0]}, ${func.p[1]}, ${func.p[2]}, ${func.p[3]})`;\n    }\n    static exportColor(color: Vector4) {\n        return `new Vector4(${color.x}, ${color.y}, ${color.z}, ${color.w})`;\n    }\n    static exportFunction(func: ValueGenerator | ColorGenerator | FunctionValueGenerator | FunctionColorGenerator, indent = 0): string {\n        if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        } else if (func instanceof ConstantColor) {\n            return `new ConstantColor(${CodeExporter.exportColor(func.color)})`;\n        } else if (func instanceof IntervalValue) {\n            return `new IntervalValue(${func.a}, ${func.b})`;\n        } else if (func instanceof ColorRange) {\n            return `new ColorRange(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof RandomColor) {\n            return `new RandomColor(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        }  else if (func instanceof Gradient) {\n            let code = `new Gradient(\\n`;\n            for (let i = 0; i < func.functions.length - 1; i ++) {\n                code += ' '.repeat(indent + 4) + `[${CodeExporter.exportFunction(func.functions[i][0])}, ${func.functions[i][1]}], `;\n            }\n            code += ' '.repeat(indent + 4) + `[${CodeExporter.exportFunction(func.functions[func.functions.length - 1][0])}, ${func.functions[func.functions.length - 1][1]}]`;\n            code += ' '.repeat(indent) + `)`;\n            return code;\n        } else if (func instanceof PiecewiseBezier) {\n            let code = `new PiecewiseBezier(\\n`;\n            for (let i = 0; i < func.functions.length - 1; i ++) {\n                code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[i][0])}, ${func.functions[i][1]}], `;\n            }\n            code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[func.functions.length - 1][0])}, ${func.functions[func.functions.length - 1][1]}]`;\n            code += ' '.repeat(indent) + `)`;\n            return code;\n        }\n        throw new Error();\n    }\n\n    static exportParticleEmitter(emitter: ParticleEmitter): string {\n\n        const name = CodeExporter.camelize(emitter.name);\n        const system = emitter.system;\n        let code = `        this.${name} = new ParticleSystem(renderer, {\\n`;\n        code += `            duration: ${system.duration},\\n`;\n        code += `            looping: ${system.looping},\\n`;\n        code += `            startLife: ${CodeExporter.exportFunction(system.startLife)},\\n`;\n        code += `            startSpeed: ${CodeExporter.exportFunction(system.startSpeed)},\\n`;\n        code += `            startSize: ${CodeExporter.exportFunction(system.startSize)},\\n`;\n        code += `            startColor: ${CodeExporter.exportFunction(system.startColor)},\\n`;\n        code += `            worldSpace: ${system.worldSpace},\\n`;\n        code += `            maxParticle: ${system.maxParticle},\\n`;\n        code += `            emissionOverTime: ${CodeExporter.exportFunction(system.emissionOverTime)},\\n`;\n        code += `            emissionBursts: ${system.emissionBursts},\\n`;\n        code += `            shape: ${CodeExporter.exportShape(system.emitterShape)},\\n`;\n        code += `            texture: texture,\\n`;\n        code += `            blending: ${system.blending},\\n`;\n        code += `            startTileIndex: ${system.startTileIndex},\\n`;\n        code += `            uTileCount: ${system.uTileCount},\\n`;\n        code += `            vTileCount: ${system.vTileCount},\\n`;\n        code += `            renderMode: ${system.renderMode},\\n`;\n        if (system.renderMode === RenderMode.StretchedBillBoard) {\n            code += `            speedFactor: ${system.speedFactor},\\n`;\n        }\n        code += '        });\\n';\n\n        for (let i = 0; i < system.behaviors.length; i ++) {\n            code += `        this.${name}.addBehavior(${CodeExporter.exportBehavior(system.behaviors[i])});\\n`;\n        }\n        code += `        this.${name}.emitter.renderOrder = ${system.emitter.renderOrder};\\n`\n        code += `        this.${name}.emitter.name = '${name}';\\n`\n        code += `        this.${name}.emitter.rotation.set(${system.emitter.rotation.x}, ${system.emitter.rotation.y}, ${system.emitter.rotation.z});\\n`;\n        code += `        this.add(this.${name}.emitter);\\n`\n        code += '\\n';\n        return code;\n    }\n\n    static exportShape(shape: EmitterShape) {\n        const json = shape.toJSON();\n        //@ts-ignore\n        delete json.type;\n        const params = JSON.stringify(json);\n        const unquoted = params.replace(/\"([^\"]+)\":/g, '$1:');\n\n        if (shape instanceof PointEmitter) {\n            return \"new PointEmitter()\";\n        }if (shape instanceof SphereEmitter) {\n            return \"new SphereEmitter(\" + unquoted + \")\";\n        }if (shape instanceof ConeEmitter) {\n            return \"new ConeEmitter(\" + unquoted + \")\";\n        }if (shape instanceof DonutEmitter) {\n            return \"new DonutEmitter(\" + unquoted + \")\";\n        }\n    }\n\n    static exportBehavior(behavior: Behavior) {\n        let func;\n        switch (behavior.type) {\n            case 'ColorOverLife':\n                func = CodeExporter.exportFunction((behavior as ColorOverLife).func)\n                break;\n            case 'RotationOverLife':\n                func = CodeExporter.exportFunction((behavior as RotationOverLife).angularVelocityFunc)\n                break;\n            case 'SizeOverLife':\n                func = CodeExporter.exportFunction((behavior as SizeOverLife).func)\n                break;\n            case 'SpeedOverLife':\n                func = CodeExporter.exportFunction((behavior as SpeedOverLife).func)\n                break;\n            case 'FrameOverLife':\n                func = CodeExporter.exportFunction((behavior as FrameOverLife).func)\n                break;\n            case 'OrbitOverLife':\n                func = CodeExporter.exportFunction((behavior as OrbitOverLife).angularVelocityFunc)\n                break;\n            default:\n                func = behavior;\n        }\n        return \"new \" + behavior.type + \"(\" + func + \")\";\n    }\n\n    static exportCode(root: Object3D): string {\n\n        let code = `export class ${CodeExporter.camelizeClass(root.name)} extends Group {\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `    private ${CodeExporter.camelize(root.children[i].name)}: ParticleSystem;\\n`\n            }\n        }\n\n        code += '\\n';\n        code += `    constructor() {\\n`;\n        code += `        super();\\n`;\n        code += `        this.name = '${root.name}';\\n`;\n        code += `        let texture = new TextureLoader().load( \"textures/texture1.png\");\\n`;\n        code += `        texture.name = \"textures/texture1.png\";\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += CodeExporter.exportParticleEmitter(root.children[i] as ParticleEmitter);\n            }\n        }\n\n        code += '    }\\n';\n        code += '\\n';\n\n        code += '    update(delta: number) {\\n';\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `        this.${CodeExporter.camelize(root.children[i].name)}.update(delta);\\n`\n            }\n        }\n        code += '    }\\n';\n        code += '}';\n        return code;\n    }\n}\n","import React from \"react\";\nimport Dialog, {DialogProps} from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScrollDialogProps {\n    content: string,\n    open: boolean,\n    handleClose: () =>void,\n}\n\nexport function ScrollDialog(props: ScrollDialogProps) {\n\n    const descriptionElementRef = React.useRef<HTMLElement>(null);\n    /*React.useEffect(() => {\n        if (props.open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [props.open]);\n    <DialogContentText\n        id=\"scroll-dialog-description\"\n        ref={descriptionElementRef}\n        tabIndex={-1}\n    >\n        {props.content}\n    </DialogContentText>*/\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={props.handleClose}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Particle System Code</DialogTitle>\n                <DialogContent dividers={true}>\n                    <ScriptEditor value={props.content} onChange={()=>{}}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {AppContext} from \"./ApplicationContext\";\nimport {Object3D, Scene} from \"three\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport './SceneGraphView.scss';\nimport {Item, Menu, MenuProvider, Separator, Submenu} from \"react-contexify\";\nimport {MenuItemEventHandler} from \"react-contexify/lib/types\";\nimport 'react-contexify/dist/ReactContexify.min.css';\nimport {treeItemClasses, TreeView} from \"@mui/lab\";\nimport {Box, styled, SvgIconProps} from \"@mui/material\";\nimport TreeItem, { TreeItemProps, TreeItemClassKey } from \"@mui/lab/TreeItem\";\nimport {Typography} from \"@mui/material\";\nimport {CodeExporter} from \"../util/CodeExporter\";\nimport {ScrollDialog} from \"./ScrollDialog\";\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport CollectionsIcon from '@mui/icons-material/Collections';\nimport CodeIcon from '@mui/icons-material/Code';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\ninterface SceneGraphViewMaterialProps {\n    context: AppContext;\n    scene: Scene;\n}\n\n/*\nconst StyledTreeItemRoot = styled(TreeItem)(({ theme }) => ({\n    color: theme.palette.text.secondary,\n    [`& .${treeItemClasses.content}`]: {\n        color: theme.palette.text.secondary,\n        borderTopRightRadius: theme.spacing(2),\n        borderBottomRightRadius: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        fontWeight: theme.typography.fontWeightMedium,\n        '&.Mui-expanded': {\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        '&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused': {\n            backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\n            color: 'var(--tree-view-color)',\n        },\n        [`& .${treeItemClasses.label}`]: {\n            fontWeight: 'inherit',\n            color: 'inherit',\n        },\n    },\n    [`& .${treeItemClasses.group}`]: {\n        marginLeft: 0,\n        [`& .${treeItemClasses.content}`]: {\n            paddingLeft: theme.spacing(2),\n        },\n    },\n}));\n\nfunction StyledTreeItem(props: StyledTreeItemProps) {\n    const {\n        bgColor,\n        color,\n        labelIcon: LabelIcon,\n        labelInfo,\n        labelText,\n        ...other\n    } = props;\n\n    return (\n        <StyledTreeItemRoot\n            label={\n                <Box sx={{ display: 'flex', alignItems: 'center', p: 0.5, pr: 0 }}>\n                    <Box component={LabelIcon} color=\"inherit\" sx={{ mr: 1 }} />\n                    <Box sx={{ fontWeight: 'inherit', flexGrow: 1 }}>\n                        <Typography variant=\"body2\">\n                            {labelText}\n                        </Typography>\n                    </Box>\n                    <Typography variant=\"caption\" color=\"inherit\">\n                        {labelInfo}\n                    </Typography>\n                </Box>\n            }\n            style={{\n                '--tree-view-color': color,\n                '--tree-view-bg-color': bgColor,\n            }}\n            {...other}\n        />\n    );\n}*/\ndeclare module 'react' {\n    interface CSSProperties {\n        '--tree-view-color'?: string;\n        '--tree-view-bg-color'?: string;\n    }\n}\n\ntype StyledTreeItemProps = TreeItemProps & {\n    bgColor?: string;\n    color?: string;\n    labelIcon: React.ElementType<SvgIconProps>;\n    labelInfo?: string;\n    labelText: string;\n    object3d: Object3D;\n};\n\nconst StyledTreeItemRoot = styled(TreeItem)(({ theme }) => ({\n    color: theme.palette.text.secondary,\n    [`& .${treeItemClasses.content}`]: {\n        color: theme.palette.text.secondary,\n        borderTopRightRadius: theme.spacing(2),\n        borderBottomRightRadius: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        fontWeight: theme.typography.fontWeightMedium,\n        '&.Mui-expanded': {\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        '&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused': {\n            backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\n            color: 'var(--tree-view-color)',\n        },\n        [`& .${treeItemClasses.label}`]: {\n            fontWeight: 'inherit',\n            color: 'inherit',\n        },\n    },\n    [`& .${treeItemClasses.group}`]: {\n        marginLeft: 0,\n        [`& .${treeItemClasses.content}`]: {\n            paddingLeft: theme.spacing(2),\n        },\n    },\n}));\n\nfunction StyledTreeItem(props: StyledTreeItemProps) {\n    const {\n        bgColor,\n        color,\n        labelIcon: LabelIcon,\n        labelInfo,\n        labelText,\n        object3d,\n        ...other\n    } = props;\n\n    return (\n        <StyledTreeItemRoot\n            label={\n                <MenuProvider id=\"scene-graph-menu\" data={{object3d: object3d}}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', p: 0.5, pr: 0 }}>\n                        <Box component={LabelIcon} color=\"inherit\" sx={{ mr: 1 }} />\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'inherit', flexGrow: 1 }}>\n                            {labelText}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"inherit\">\n                            {labelInfo}\n                        </Typography>\n                    </Box>\n                </MenuProvider>\n            }\n            style={{\n                '--tree-view-color': color,\n                '--tree-view-bg-color': bgColor,\n            }}\n            {...other}\n        />\n    );\n}\n\nexport const SceneGraphTreeView: React.FC<SceneGraphViewMaterialProps> = (props) => {\n    const [selected, setSelected] = React.useState<string>(\"\");\n    const [expanded, setExpanded] = React.useState<string[]>(['1']);\n\n    const [code, setCode] = React.useState<string>('');\n\n    const countIndex = (index: number, object3d: Object3D): [Object3D | null, number] => {\n        if (index === 0)\n            return [object3d, 0];\n        index --;\n        for (const child of object3d.children) {\n            if (child.type !== 'BatchedParticleRenderer' && child.type !== 'AxesHelper' && child.name !== 'TransformControls') {\n                const [res, newIndex] = countIndex(index, child);\n                if (res)\n                    return [res, newIndex];\n                index = newIndex;\n            }\n        }\n        return [null, index];\n    }\n    const handleSelect = (event: React.ChangeEvent<any>, nodeIds: string) => {\n        if (nodeIds.length > 0) {\n            const index = parseInt(nodeIds);\n            const [object3d, ] = countIndex(index, props.scene);\n            if (object3d) {\n                props.context.actions.select(object3d);\n            }\n        }\n        setSelected(nodeIds);\n    };\n    const handleToggle = (event: React.ChangeEvent<any>, nodeIds: string[]) => {\n        //console.log(event.target);\n        if ((event.target as HTMLElement).tagName === 'svg') {\n            setExpanded(nodeIds);\n        }\n    };\n\n    const getObjectName = (object3d: Object3D) => {\n        let type = 'object';\n        if (object3d instanceof ParticleEmitter) {\n            type = 'ParticleSystem';\n        } else {\n            type =  object3d.type;\n        }\n        let name = 'unnamed';\n        if (object3d.name) {\n            name = object3d.name;\n        }\n        return `[${type}] ${name}`;\n    };\n\n    const renderObject = (context: AppContext, object3d: THREE.Object3D, index: number): [React.ReactNode, number] => {\n        const items = [];\n        const originIndex = index;\n        index ++;\n        for (const child of object3d.children) {\n            if (child.type !== 'BatchedParticleRenderer' && child.type !== 'AxesHelper' && child.name !== 'TransformControls') {\n                const result = renderObject(context, child, index);\n                items.push(result[0]);\n                index = result[1];\n            }\n        }\n        //selected={context.selection.indexOf(object3d) !== -1}\n        if (originIndex !== 0) {\n            let icon:  React.ElementType<SvgIconProps>;\n            switch (object3d.type) {\n                case \"BatchedParticleRenderer\":\n                    icon = CodeIcon;\n                    break;\n                case \"ParticleSystemBatch\":\n                    icon = CodeIcon;\n                    break;\n                case \"ParticleEmitter\":\n                    icon = CodeIcon;\n                    break;\n                case \"AmbientLight\":\n                    icon = LightbulbIcon;\n                    break;\n                case \"Group\":\n                    icon = CollectionsIcon;\n                    break;\n                default:\n                    icon = CodeIcon;\n                    break;\n            }\n\n            return [<StyledTreeItem key={object3d.uuid} nodeId={originIndex + \"\"}\n                                         labelIcon={icon}\n                                         labelText={getObjectName(object3d)}\n                                         object3d={object3d}>\n                {items}\n            </StyledTreeItem>\n                , index];\n        } else {\n            return [<React.Fragment>{items}</React.Fragment>, index];\n        }\n    }\n\n    const onContextMenuClick = ({event, props}: MenuItemEventHandler) => console.log(event,props);\n\n    const onContextMenuAddParticleSystem = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.addObject3d('particle', (contextProps! as any).object3d);\n        }\n    };\n    const onContextMenuRemove = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.removeObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuDuplicate = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.duplicateObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuExport = ({event, props: contextProps}: MenuItemEventHandler) => {\n        console.log(contextProps);\n        if ((contextProps! as any).object3d) {\n            const a = document.createElement(\"a\");\n            const json = (contextProps! as any).object3d.toJSON();\n            //json.images.forEach((image: any) => image.url = \"http://localhost:3000/textures/texture1.png\");\n            const file = new Blob([JSON.stringify(json)], {type: \"application/json\"});\n            a.href = URL.createObjectURL(file);\n            a.download = \"scene.json\";\n            a.click();\n        }\n    };\n\n    const onContextMenuCopyCode = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps! as any).object3d) {\n            setCode(CodeExporter.exportCode((contextProps! as any).object3d));\n        }\n    }\n\n    const renderScene = (context: AppContext, scene: THREE.Scene) => {\n        return <TreeView\n            sx={{height: 240,\n                flexGrow: 1}}\n            selected={selected}\n            expanded={expanded}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            multiSelect={false}\n        >\n            {renderObject(context, scene, 0)[0]}\n        </TreeView>;\n    }\n\n    return <Box sx={{height: 270, flexGrow: 1, overflow: 'auto' }}>\n        <Typography sx={{\n            fontSize: theme => theme.typography.pxToRem(15),\n            fontWeight: theme =>theme.typography.fontWeightRegular}}> Scene Graph </Typography>\n        {renderScene(props.context, props.scene)}\n        <Menu id=\"scene-graph-menu\">\n            <Submenu label=\"Add\">\n                <Item onClick={onContextMenuAddParticleSystem}>Particle System</Item>\n                <Item onClick={onContextMenuClick}>Ball</Item>\n            </Submenu>\n            <Separator />\n            <Item onClick={onContextMenuDuplicate}>Duplicate</Item>\n            <Item onClick={onContextMenuRemove}>Remove</Item>\n            <Separator />\n            <Item onClick={onContextMenuExport}>Export</Item>\n            <Item onClick={onContextMenuCopyCode}>Copy JS Code</Item>\n        </Menu>\n        <ScrollDialog content={code} open={code !== ''} handleClose={()=>{setCode('')}} />\n    </Box>;\n}\n","import * as React from \"react\";\nimport MainMenu from \"./MainMenu\";\nimport {ThreejsViewport} from \"./ThreejsViewport\";\nimport PropertiesEditor from \"./PropertiesEditor\";\n\nimport './layout.scss';\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {SceneGraphTreeView} from \"./SceneGraphTreeView\";\n\nexport interface ApplicationProps {\n\n}\n\nexport const Application: React.FC<ApplicationProps> = (props) => {\n\n    return (\n        <ApplicationContextProvider>\n            <div className=\"application\">\n                <div className=\"main-menu\">\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <MainMenu onSaveAs={context.actions.onSaveAs}\n                                      onImport={context.actions.onImport}\n                                      onOpenDemo={context.actions.onOpenDemo}/>\n                        }\n                    </ApplicationContextConsumer>\n                </div>\n                <div className=\"main\">\n                    <div className=\"viewport\">\n                        <ThreejsViewport width={600} height={600}/>\n                    </div>\n                    <div className=\"sidebar\">\n                        <ApplicationContextConsumer>\n                            {\n                                context => context && <SceneGraphTreeView context={context} scene={context.scene}/>\n                            }\n                        </ApplicationContextConsumer>\n                        <ApplicationContextConsumer>\n                            {context => context && context.selection.length > 0 &&\n                                <PropertiesEditor object3d={context.selection[0]}/>\n                            }\n                        </ApplicationContextConsumer>\n                    </div>\n                </div>\n            </div>\n        </ApplicationContextProvider>);\n}\n","import React, {useState} from 'react';\nimport {Application} from \"./components/Application\";\nimport blue from \"@mui/material/colors/blue\";\nimport red from \"@mui/material/colors/red\";\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: red[500],\n        },\n    },\n    typography: {\n        fontSize: 12,\n    }\n});\n\nconst App: React.FC = () => {\n  /*const [bezierCurves, setBezierCurves] = useState(\n      new PiecewiseBezier([\n        [new Bezier(0, 0.5 / 3, 0.5 / 3 * 2, 0.5), 0],\n        [new Bezier(0.5, 0.5, 0.5, 0.5), 0.5],\n      ])\n  );return <div className=\"App\">\n        <header className=\"App-header\">\n            <BezierCurvesEditor width={200} height={100} value={bezierCurves} onChange={(bezierCurves) => {setBezierCurves(bezierCurves)}}/>\n        </header>\n    </div>;*/\n\n    return (<ThemeProvider theme={theme}><Application /></ThemeProvider>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}