{"version":3,"sources":["components/MainMenu.tsx","WebGL.ts","../../three.quarks-core/dist/three.quarks.esm.js","example/ToonProjectile.ts","example/BulletMuzzle.ts","example/BulletProjectile.ts","example/ToonExplosion.ts","example/Explosion.ts","example/LevelUp.ts","example/ShipSmoke.ts","example/ElectricBall.ts","example/ShipTrail.ts","example/Explosion2.ts","example/EnergyRifleMuzzle.ts","components/ApplicationContext.tsx","components/ThreejsViewport.tsx","components/editors/NumberInput.tsx","components/editors/Vector3Editor.tsx","components/editors/StringInput.tsx","components/ObjectProperties.tsx","components/editors/ColorEditor.tsx","components/editors/bezier/TransformComponent.tsx","components/editors/bezier/CurveComponent.tsx","components/editors/bezier/HandleComponent.tsx","components/editors/bezier/BezierCurvesEditor.tsx","components/editors/GeneratorEditor.tsx","components/ParticleSystemProperties.tsx","components/editors/FileInput.tsx","components/TexturePicker.tsx","components/ParticleRendererProperties.tsx","components/editors/ScriptEditor.tsx","components/ScriptProperties.tsx","components/EmitterShapeProperties.tsx","components/ParticleSystemController.tsx","components/BehaviorsProperties.tsx","components/PropertiesEditor.tsx","util/CodeExporter.ts","components/ScrollDialog.tsx","components/SceneGraphViewMaterial.tsx","components/Application.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styles","createStyles","theme","root","flexGrow","menuIcon","marginRight","spacing","menuButton","title","MainMenu","props","fileRef","openFileDialog","e","current","click","importFile","target","files","onImport","openDemo","demoIndex","onOpenDemo","handleMenuClick","event","console","log","currentTarget","setState","anchorEl","handleMenuClose","undefined","state","React","classes","this","className","AppBar","position","Toolbar","variant","IconButton","edge","color","aria-label","Typography","Button","aria-controls","aria-haspopup","onClick","id","Menu","keepMounted","open","Boolean","onClose","MenuItem","onSaveAs","ref","type","multiple","accept","style","display","onChange","withStyles","withTheme","WEBGL","isWebGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","isWebGL2Available","WebGL2RenderingContext","getWebGLErrorMessage","getErrorMessage","getWebGL2ErrorMessage","version","contexts","1","2","message","element","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","replace","innerHTML","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","RenderMode","particle_frag","_Mesh","ParticleEmitter","_super","system","parameters","_this","call","geometry","renderMode","BillBoard","speedFactor","instancingGeometry","texture","blending","setIndex","getIndex","setAttribute","getAttribute","offsetBuffer","Float32Array","maxParticle","setUsage","colorBuffer","rotationBuffer","sizeBuffer","tiling","rebuildMaterial","frustumCulled","uniforms","defines","copy","matrix","uTileCount","vTileCount","uvTileBuffer","worldSpace","LocalSpaceBillBoard","vertexShader","side","material","fragmentShader","transparent","depthWrite","StretchedBillBoard","Error","velocityBuffer","clone","emitter","particles","particleNum","instanceCount","i","particle","setXYZ","x","y","z","setXYZW","w","setX","rotation","size","velocity","uvTile","updateRange","count","needsUpdate","dispose","cache","values","data","metadata","push","meta","isRootObject","output","geometries","materials","textures","images","shapes","generator","object","uuid","name","castShadow","receiveShadow","visible","renderOrder","JSON","stringify","userData","layers","mask","toArray","matrixAutoUpdate","ps","toJSON","children","length","extractFromCache","Particle","ConstantValue","json","IntervalValue","a","b","lerp","Math","random","PiecewiseFunction","functions","Array","t","mid","left","right","getStartX","getEndX","index","func","get","Bezier","p1","p2","p3","p4","p","t2","t3","mt","mt2","mt3","points","dpoints","c","list","j","dpt","derivativeCoefficients","d0","d1","pt","_p","q","idx","l","hull","span","p0","_PiecewiseFunction","PiecewiseBezier","_super2","_this2","curves","arguments","findFunction","error","genValue","segments","result","join","map","_ref","_ref2","bezier","start","function","_ref3","_ref4","piecewiseFunction","fromJSON","ValueGeneratorFromJSON","ColorToJSON","r","g","RandomColor","rand","ColorRange","ConstantColor","ColorGeneratorFromJSON","ColorOverLife","delta","genColor","age","life","startColor","RotationOverLife","angularVelocityFunc","angularVelocity","SizeOverLife","startSize","SpeedOverLife","normalize","multiplyScalar","startSpeed","FrameOverLife","floor","OrbitOverLife","atan2","len","sqrt","cos","sin","ConeEmitter","radius","arc","PI","thickness","angle","u","theta","sinTheta","cosTheta","set","addScaledVector","SphereEmitter","v","phi","acos","cbrt","sinPhi","cosPhi","setScalar","PointEmitter","DonutEmitter","ParticleSystem","autoDestroy","duration","looping","startLife","startRotation","emissionOverTime","emissionOverDistance","emissionBursts","emitterShape","shape","behaviors","tileCount","startTileIndex","burstIndex","burstWaveIndex","time","paused","waitEmiting","emitEnded","markForDestroy","initialize","applyMatrix4","matrixWorld","applyMatrix3","normalMatrix","parent","remove","endEmit","getNormalMatrix","totalSpawn","spawn","probability","_i","_particle","update","oldWorldMatrix","image","url","behavior","_step","newEmissionBursts","_iterator","s","n","done","emissionBurst","newEmissionBurst","assign","err","f","_step2","newBehaviors","_iterator2","BehaviorFromJSON","TEXTURE_MAPPING","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","TEXTURE_WRAPPING","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","TEXTURE_FILTER","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","QuarksLoader","manager","resourcePath","path","crossOrigin","onLoad","onProgress","onError","scope","extractUrlBase","loader","setPath","load","text","parse","toLowerCase","itemStart","itemEnd","itemError","setCrossOrigin","il","isArray","jl","currentUrl","test","loadImage","parseConstant","warn","mapping","offset","fromArray","repeat","center","wrap","wrapS","wrapT","format","encoding","minFilter","magFilter","anisotropy","flipY","premultiplyAlpha","unpackAlignment","decompose","quaternion","scale","add","parseObject","parseImages","parseTextures","_PiecewiseFunction2","Gradient","_super3","_this3","getFunction","_ref5","_ref6","range","_ref7","_ref8","ToonProjectile","smoke","glowBeam","mainBeam","Vector4","AdditiveBlending","addBehavior","NormalBlending","rotateY","script","Function","Group","BulletMuzzle","beam","muzzle1","muzzle2","flash","cycle","interval","muzzle","BulletProjectile","hProjectile","vProjectile","TextureLoader","projectileParam","ToonExplosion","circle","Explosion","gatherParticles","mainColor","yellowColor","secColor","yellowColor2","LevelUp","glow","glow2","yellow","glowParam","glow2Param","particleParam","ShipSmoke","grey","ElectricBall","beamWorld","electricity","electricBall","texture2","ShipTrail","Explosion2","circle2","EnergyRifleMuzzle","glowTop","ringBase","coneBufferGeometry","CylinderBufferGeometry","rotateX","ApplicationContext","ApplicationContextConsumer","Consumer","ApplicationContextProvider","removeObject3d","object3D","duplicateObject3d","addObject3d","scene","Mesh","BoxBufferGeometry","MeshStandardMaterial","actions","select","animate","updateProperties","texture1","createScene","selection","img","file","Blob","href","URL","createObjectURL","download","nFiles","nFileId","jsonURL","selectAddition","indexOf","updateParticleSystem","addTexture","textureImage","demoObject","THREE","Color","axisHelper","AxesHelper","light","PointLight","ambientLight","AmbientLight","Provider","ThreejsViewport","container","stats","camera","renderer","clock","controls","appContext","onResize","domElement","parentElement","clientWidth","clientHeight","height","newWidth","newHeight","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","renderScene","init","prevProps","prevState","snapshot","body","appendChild","WebGLRenderer","Clock","PerspectiveCamera","OrbitControls","enableKeys","enableDamping","dampingFactor","rotateSpeed","setPixelRatio","devicePixelRatio","Stats","dom","getDelta","traverse","render","context","NumberInput","inputValue","setInputValue","focus","setFocus","onBlur","parseFloat","onFocus","onKeyDown","Vector3Editor","unitConversion","StringInput","ObjectProperties","onChangeName","object3d","onChangePosition","onChangeScale","onChangeRotation","ConvertToColor","ColorEditor","setOpen","backgroundColor","colorResult","min","rgb","interp","TransformComponent","xFrom","xTo","yFrom","yTo","nextProps","Component","CurveComponent","curveColor","curveWidth","curve","fill","stroke","strokeWidth","d","HandleComponent","xstart","ystart","handleRadius","handleColor","hover","down","handleStroke","xval","yval","onMouseEnter","onMouseLeave","onMouseDown","sx","sy","cx","cy","cxs","cys","x1","y1","x2","y2","BezierCurvesEditor","rootRef","createRef","positionForEvent","rect","getBoundingClientRect","clientX","clientY","top","inversex","inversey","onDownLeave","onDownMove","preventDefault","curveIndex","old","setStartX","pCurve","setFunction","setEndX","numOfFunctions","nCurve","onDownUp","h","defaultP","slope0","getSlope","slope1","onDownHandle","onEnterHandle","onLeaveHandle","onMouseMove","onMouseUp","ValueToEditor","GeneratorEditor","changeEditor","updateGenerator","changeValue","changeColor","changeValueA","changeValueB","changeColorRangeA","colorRange","changeColorRangeB","changeRandomColorA","randomColor","changeRandomColorB","changeCurve","allowedType","editorTypes","valueType","editorType","editor","currentEditor","getEditorType","ParticleSystemProperties","onChangeStartSpeed","particleSystem","onChangeStartLife","onChangeStartSize","onChangeStartColor","OnChangeStartRotation","OnChangeEmissionOverTime","valueFunctionTypes","colorValueFunctionTypes","FileInput","handleChange","htmlFor","component","useStyles","makeStyles","flexWrap","justifyContent","overflow","palette","paper","gridList","DialogTitle","closeButton","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","TexturePicker","useState","selected","setSelected","Dialog","handleClose","aria-labelledby","dividers","GridList","cellHeight","cols","GridListTile","src","alt","GridListTileBar","subtitle","handleUpload","handleSelect","ParticleRendererProperties","onChangeStartTile","onChangeUTileCount","onChangeVTileCount","onChangeBlending","getValueOfBlending","onChangeRenderMode","getValueOfRenderMode","onChangeWorldSpace","getValueOfBoolean","onUploadTexture","Texture","onload","reader","FileReader","readAsDataURL","onChangeTexture","closeTexturePicker","texturePickerOpen","openTexturePicker","gridWidth","gridHeight","objectPosition","ScriptEditor","onValueChange","highlight","code","languages","javascript","ScriptProperties","onChangeScript","EmitterShapeProperties","getValueOfShape","onChangeShape","onChangeKeyValue","k","properties","renderShapeProperties","PureComponent","ParticleSystemController","getSystems","systems","checkPause","forEach","togglePause","play","pause","onRestart","restart","onStop","ToggleButtonGroup","ButtonGroup","disabled","listRoot","BehaviorsProperties","checked","setChecked","selectedIndex","setSelectedIndex","setAnchorEl","onAddNewBehavior","onChangeBehaviorFunc","splice","List","dense","valueTypes","labelId","ListItem","handleListItemClick","ListItemIcon","Checkbox","currentIndex","newChecked","inputProps","ListItemText","primary","secondary","Accordion","border","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","marginBottom","minHeight","content","expandIcon","MuiAccordionSummary","heading","typography","pxToRem","fontWeightRegular","PropertiesEditor","setExpanded","panel","isExpanded","AccordionDetails","CodeExporter","str","word","toUpperCase","indent","exportColor","exportBezier","camelize","exportFunction","camelizeClass","exportParticleEmitter","ScrollDialog","useRef","scroll","aria-describedby","SceneGraphViewMaterial","setCode","nodeIds","countIndex","res","newIndex","parseInt","handleToggle","tagName","getObjectName","TreeView","onNodeToggle","onNodeSelect","defaultCollapseIcon","defaultExpandIcon","renderObject","items","originIndex","TreeItem","nodeId","label","Fragment","contextProps","exportCode","Application","createMuiTheme","main","blue","red","App","ThemeProvider","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78cf4236.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {createStyles, Theme, Typography, Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface MainMenuProps {\n    onSaveAs: () => void;\n    onImport: (files: FileList) => void;\n    onOpenDemo: (demoIndex: number) => void;\n    classes: any\n}\n\ninterface MainMenuState {\n    anchorEl?: Element\n}\n\nconst styles = createStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuIcon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        marginRight: theme.spacing(1),\n        //flexGrow: 1,\n    },\n}));\n\nclass MainMenu extends React.PureComponent<MainMenuProps, MainMenuState> {\n    private fileRef: React.RefObject<HTMLInputElement>;\n\n    constructor(props: Readonly<MainMenuProps>) {\n        super(props);\n        this.state = {\n            anchorEl: undefined\n        }\n\n        this.fileRef = React.createRef();\n    }\n\n    openFileDialog = (e: React.MouseEvent<Element, MouseEvent>) => {\n        if (this.fileRef.current)\n            this.fileRef.current.click();\n    };\n\n    importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onImport(e.target.files);\n    };\n\n    openDemo = (demoIndex: number) => {\n        this.props.onOpenDemo(demoIndex);\n    };\n\n    handleMenuClick = (event: React.MouseEvent<Element, MouseEvent>) => {\n        console.log(event.currentTarget);\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: undefined});\n    };\n\n    render() {\n        //<Image size='mini' src='/logo.png' style={{ marginRight: '1.5em' }} />\n        //<MenuIcon />\n        //<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n        //</IconButton>\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\">\n                        <IconButton edge=\"start\" className={classes.menuIcon} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Three.Quarks\n                        </Typography>\n                        <Button color=\"inherit\" className={classes.menuButton} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"file-button\">\n                            File\n                        </Button>\n                        <Menu\n                            id=\"file-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"file-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem>New</MenuItem>\n                            <MenuItem onClick={this.openFileDialog}>Open</MenuItem>\n                            <MenuItem onClick={this.props.onSaveAs}>Download</MenuItem>\n                            <input ref={this.fileRef} type=\"file\" id=\"fileElem\" multiple accept=\"application/json\"\n                                   style={{display: \"none\"}}\n                                   onChange={this.importFile}/>\n                        </Menu>\n                        <Button color=\"inherit\" className={classes.menuButton} aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\" onClick={this.handleMenuClick} id=\"demo-button\">\n                            Demo\n                        </Button>\n                        <Menu\n                            id=\"demo-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl && this.state.anchorEl.id === \"demo-button\")}\n                            onClose={this.handleMenuClose}\n                        >\n                            <MenuItem onClick={() => this.openDemo(0)}>PlasmaProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(1)}>BulletMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(2)}>BulletProjectile</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(3)}>ShipSmoke</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(4)}>HitImpact</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(5)}>Explosion</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(6)}>Levelup</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(7)}>EnergyMuzzle</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(8)}>ElectricBall</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(9)}>ShipTrail</MenuItem>\n                            <MenuItem onClick={() => this.openDemo(10)}>Explosion2</MenuItem>\n                        </Menu>\n                    </Toolbar>\n                </AppBar>\n            </div>);\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(MainMenu);","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport const WEBGL = {\n    isWebGLAvailable: function () {\n\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n        } catch ( e ) {\n            return false;\n        }\n\n    },\n\n    isWebGL2Available: function () {\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n        } catch ( e ) {\n            return false;\n        }\n    },\n\n    getWebGLErrorMessage: function () {\n        return this.getErrorMessage( 1 );\n    },\n\n    getWebGL2ErrorMessage: function () {\n        return this.getErrorMessage( 2 );\n    },\n\n    getErrorMessage: function ( version: number ) {\n        const names :{[version:number]: string} = {\n            1: 'WebGL',\n            2: 'WebGL 2'\n        };\n\n        const contexts :{[version:number]: string} = {\n            // @ts-ignore\n            1: window.WebGLRenderingContext,\n            // @ts-ignore\n            2: window.WebGL2RenderingContext\n        };\n\n        let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n        const element = document.createElement( 'div' );\n        element.id = 'webglmessage';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if ( contexts[ version ] ) {\n            message = message.replace( '$0', 'graphics card' );\n        } else {\n            message = message.replace( '$0', 'browser' );\n        }\n        message = message.replace( '$1', names[ version ] );\n        element.innerHTML = message;\n\n        return element;\n    }\n\n};\n","import _createForOfIteratorHelper from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Projects\\\\three.quarks-editor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\n/**\n * three.quarks v0.3.0 build Tue Mar 16 2021\n * https://github.com/Alchemist0823/three.quarks#readme\n * Copyright 2021 undefined, MIT\n */\nimport { Mesh, InstancedBufferGeometry, PlaneBufferGeometry, NormalBlending, InstancedBufferAttribute, DynamicDrawUsage, Uniform, Matrix3, Vector2, ShaderMaterial, AdditiveBlending, DoubleSide, FrontSide, Vector4, Vector3, MathUtils, Matrix4, DefaultLoadingManager, LoaderUtils, FileLoader, LoadingManager, ImageLoader, CubeTexture, Texture, Object3D, Group, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter } from 'three';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar particle_frag =\n/* glsl */\n\"\\n\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\n\\nvarying vec4 vColor;\\n\\nvoid main() {\\n\\n    #include <clipping_planes_fragment>\\n    \\n    vec3 outgoingLight = vec3( 0.0 );\\n    vec4 diffuseColor = vColor;\\n    \\n    #include <logdepthbuf_fragment>\\n    \\n    #ifdef USE_MAP\\n    vec4 texelColor = texture2D( map, vUv);\\n    diffuseColor *= texelColor;\\n    #endif\\n\\n    outgoingLight = diffuseColor.rgb;\\n\\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n    \\n    #include <tonemapping_fragment>\\n\\n}\\n\";\n/*\n    gl_FragColor = vec4(vUv.x, vUv.y, 1.0, 1.0);\n\n    #ifdef USE_MAP\n    vec4 texelColor = texture2D( map, vUv);\n    diffuseColor *= texelColor;\n    #endif\n\n    outgoingLight = diffuseColor.rgb;\n\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n*/\n\nvar particle_vert =\n/* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset, 1.0 );\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n\\t#endif\\n\\t\\n    vec2 alignedPosition = ( position.xy ) * size;\\n    \\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n    \\n    mvPosition.xy += rotatedPosition;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar local_particle_vert =\n/* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n    vec2 alignedPosition = ( position.xy ) * size;\\n    \\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n    \\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset + vec3(rotatedPosition, position.z), 1.0 );\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset + vec3(rotatedPosition, position.z), 1.0 );\\n\\t#endif\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\nvar stretched_bb_particle_vert =\n/* glsl */\n\"\\n\\n#include <uv_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n\\nattribute vec3 offset;\\nattribute float rotation;\\nattribute float size;\\nattribute vec4 color;\\nattribute vec3 velocity;\\nattribute float uvTile;\\n\\nvarying vec4 vColor;\\n\\n#ifdef UV_TILE\\nuniform vec2 tileCount;\\n#endif\\n\\nuniform float speedFactor;\\n\\nvoid main() {\\n\\n    #ifdef UV_TILE\\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\\n    #else\\n        #include <uv_vertex>\\n    #endif\\n\\t\\n\\t#ifdef WORLD_SPACE\\n\\t    vec4 mvPosition = viewMatrix * vec4( offset, 1.0 );\\n        vec3 viewVelocity = vec3(viewMatrix * vec4(velocity, 1.0));\\n\\t#else\\n\\t    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\\n        vec3 viewVelocity = vec3(modelViewMatrix * vec4(velocity, 1.0));\\n\\t#endif\\n\\n    vec3 scaledPos = vec3(position.xy * size, position.z);\\n    mvPosition.xyz += scaledPos + dot(scaledPos, viewVelocity) * viewVelocity / length(viewVelocity) * speedFactor;\\n\\n\\tvColor = color;\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n}\\n\";\n/*\n\n    vec3 instancePos = vec3(position.xy * size, position.z);\n    instancePos += dot(instancePos, viewVelocity) * viewVelocity * speedFactor;\n    mvPosition.xyz += instancePos;\n\n\tvColor = color; //vec4(1, 1, 1, 1); //color; //length(viewVelocity) * 0.1\n\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n\nvar RenderMode;\n\n(function (RenderMode) {\n  RenderMode[RenderMode[\"BillBoard\"] = 0] = \"BillBoard\";\n  RenderMode[RenderMode[\"StretchedBillBoard\"] = 1] = \"StretchedBillBoard\";\n  RenderMode[RenderMode[\"LocalSpaceBillBoard\"] = 2] = \"LocalSpaceBillBoard\";\n})(RenderMode || (RenderMode = {}));\n\nvar ParticleEmitter = /*#__PURE__*/function (_Mesh) {\n  _inherits(ParticleEmitter, _Mesh);\n\n  var _super = _createSuper(ParticleEmitter);\n\n  //interleavedBuffer: InterleavedBuffer;\n  function ParticleEmitter(system, parameters) {\n    var _this;\n\n    _classCallCheck(this, ParticleEmitter);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", \"ParticleEmitter\");\n\n    _defineProperty(_assertThisInitialized(_this), \"system\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"geometry\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"material\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"sizeBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"colorBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"tiling\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uvTileBuffer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"speedFactor\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"texture\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"blending\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"instancingGeometry\", void 0);\n\n    _this.system = system;\n    _this.geometry = new InstancedBufferGeometry();\n    _this.renderMode = parameters.renderMode || RenderMode.BillBoard;\n    _this.speedFactor = parameters.speedFactor || 1; //this.worldSpace = (parameters.worldSpace !== undefined) ? parameters.worldSpace : false;\n\n    _this.instancingGeometry = parameters.instancingGeometry || new PlaneBufferGeometry(1, 1, 1, 1);\n    _this.texture = parameters.texture;\n    _this.blending = parameters.blending || NormalBlending;\n    /*const instancingGeometry = new Float32Array([\n        -0.5, -0.5, 0, 0, 0,\n        0.5, -0.5, 0, 1, 0,\n        0.5, 0.5, 0, 1, 1,\n        -0.5, 0.5, 0, 0, 1\n    ]);*/\n    //this.interleavedBuffer = new InterleavedBuffer(instancingGeometry., 5);\n\n    _this.geometry.setIndex(_this.instancingGeometry.getIndex());\n\n    _this.geometry.setAttribute('position', _this.instancingGeometry.getAttribute('position')); //new InterleavedBufferAttribute(this.interleavedBuffer, 3, 0, false));\n\n\n    _this.geometry.setAttribute('uv', _this.instancingGeometry.getAttribute('uv')); //new InterleavedBufferAttribute(this.interleavedBuffer, 2, 3, false));\n\n\n    _this.offsetBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle * 3), 3);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('offset', _this.offsetBuffer);\n\n    _this.colorBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle * 4), 4);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('color', _this.colorBuffer);\n\n    _this.rotationBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('rotation', _this.rotationBuffer);\n\n    _this.sizeBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n\n    _this.offsetBuffer.setUsage(DynamicDrawUsage);\n\n    _this.geometry.setAttribute('size', _this.sizeBuffer);\n\n    _this.tiling = true;\n\n    _this.rebuildMaterial(); // TODO: implement boundingVolume\n\n\n    _this.frustumCulled = false;\n    return _this;\n  }\n\n  _createClass(ParticleEmitter, [{\n    key: \"rebuildMaterial\",\n    value: function rebuildMaterial() {\n      var uniforms = {};\n      var defines = {};\n\n      if (this.texture) {\n        defines['USE_MAP'] = '';\n        defines['USE_UV'] = '';\n        uniforms['map'] = new Uniform(this.texture); //@ts-ignore\n\n        uniforms['uvTransform'] = new Uniform(new Matrix3().copy(this.texture.matrix));\n        var uTileCount = this.system.uTileCount || 1;\n        var vTileCount = this.system.vTileCount || 1; //this.tiling = uTileCount > 1 || vTileCount > 1;\n\n        if (this.tiling) {\n          this.uvTileBuffer = new InstancedBufferAttribute(new Float32Array(this.system.maxParticle), 1);\n          this.uvTileBuffer.setUsage(DynamicDrawUsage);\n          this.geometry.setAttribute('uvTile', this.uvTileBuffer);\n          defines['UV_TILE'] = '';\n          uniforms['tileCount'] = new Uniform(new Vector2(uTileCount, vTileCount));\n        }\n      }\n\n      if (this.system.worldSpace) {\n        defines['WORLD_SPACE'] = '';\n      }\n\n      if (this.renderMode === RenderMode.BillBoard || this.renderMode === RenderMode.LocalSpaceBillBoard) {\n        var vertexShader;\n        var side;\n\n        if (this.renderMode === RenderMode.LocalSpaceBillBoard) {\n          vertexShader = local_particle_vert;\n          side = DoubleSide;\n        } else {\n          vertexShader = particle_vert;\n          side = FrontSide;\n        }\n\n        this.material = new ShaderMaterial({\n          uniforms: uniforms,\n          defines: defines,\n          vertexShader: vertexShader,\n          fragmentShader: particle_frag,\n          transparent: true,\n          depthWrite: false,\n          blending: this.blending || AdditiveBlending,\n          side: side\n        });\n      } else if (this.renderMode === RenderMode.StretchedBillBoard) {\n        this.velocityBuffer = new InstancedBufferAttribute(new Float32Array(this.system.maxParticle * 3), 3);\n        this.velocityBuffer.setUsage(DynamicDrawUsage);\n        this.geometry.setAttribute('velocity', this.velocityBuffer);\n        uniforms['speedFactor'] = new Uniform(this.speedFactor);\n        this.material = new ShaderMaterial({\n          uniforms: uniforms,\n          defines: defines,\n          vertexShader: stretched_bb_particle_vert,\n          fragmentShader: particle_frag,\n          transparent: true,\n          depthWrite: false,\n          blending: this.blending || AdditiveBlending\n        });\n      } else {\n        throw new Error(\"render mode unavailable\");\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var system = this.system.clone();\n      return system.emitter;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var particles = this.system.particles;\n      var particleNum = this.system.particleNum;\n      this.geometry.instanceCount = particleNum;\n\n      for (var i = 0; i < particleNum; i++) {\n        var particle = particles[i];\n        this.offsetBuffer.setXYZ(i, particle.position.x, particle.position.y, particle.position.z);\n        this.colorBuffer.setXYZW(i, particle.color.x, particle.color.y, particle.color.z, particle.color.w);\n        this.rotationBuffer.setX(i, particle.rotation);\n        this.sizeBuffer.setX(i, particle.size);\n\n        if (this.renderMode === RenderMode.StretchedBillBoard) {\n          this.velocityBuffer.setXYZ(i, particle.velocity.x, particle.velocity.y, particle.velocity.z);\n        }\n\n        if (this.tiling) {\n          this.uvTileBuffer.setX(i, particle.uvTile);\n        }\n      }\n\n      if (particleNum > 0) {\n        this.offsetBuffer.updateRange.count = particleNum * 3;\n        this.offsetBuffer.needsUpdate = true;\n        this.colorBuffer.updateRange.count = particleNum * 4;\n        this.colorBuffer.needsUpdate = true;\n        this.rotationBuffer.updateRange.count = particleNum;\n        this.rotationBuffer.needsUpdate = true;\n        this.sizeBuffer.updateRange.count = particleNum;\n        this.sizeBuffer.needsUpdate = true;\n\n        if (this.renderMode === RenderMode.StretchedBillBoard) {\n          this.velocityBuffer.updateRange.count = particleNum * 3;\n          this.velocityBuffer.needsUpdate = true;\n        }\n\n        if (this.tiling) {\n          this.uvTileBuffer.updateRange.count = particleNum;\n          this.uvTileBuffer.needsUpdate = true;\n        }\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n    } // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n  }, {\n    key: \"extractFromCache\",\n    value: function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n      if (this.system !== null) object.ps = this.system.toJSON(meta);\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = this.extractFromCache(meta.geometries);\n        var materials = this.extractFromCache(meta.materials);\n        var textures = this.extractFromCache(meta.textures);\n        var images = this.extractFromCache(meta.images);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n      }\n\n      output.object = object;\n      return output;\n    }\n  }]);\n\n  return ParticleEmitter;\n}(Mesh);\n\nvar Particle = function Particle() {\n  _classCallCheck(this, Particle);\n\n  _defineProperty(this, \"startSpeed\", 0);\n\n  _defineProperty(this, \"startColor\", new Vector4());\n\n  _defineProperty(this, \"startSize\", 1);\n\n  _defineProperty(this, \"velocity\", new Vector3());\n\n  _defineProperty(this, \"age\", 0);\n\n  _defineProperty(this, \"life\", 1);\n\n  _defineProperty(this, \"angularVelocity\", void 0);\n\n  _defineProperty(this, \"position\", new Vector3());\n\n  _defineProperty(this, \"rotation\", 0);\n\n  _defineProperty(this, \"size\", 1);\n\n  _defineProperty(this, \"color\", new Vector4());\n\n  _defineProperty(this, \"uvTile\", 0);\n};\n\nvar ConstantValue = /*#__PURE__*/function () {\n  function ConstantValue(value) {\n    _classCallCheck(this, ConstantValue);\n\n    this.value = value;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return this.value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantValue\",\n        value: this.value\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantValue(this.value);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantValue(json.value);\n    }\n  }]);\n\n  return ConstantValue;\n}();\n\nvar IntervalValue = /*#__PURE__*/function () {\n  function IntervalValue(a, b) {\n    _classCallCheck(this, IntervalValue);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(IntervalValue, [{\n    key: \"genValue\",\n    value: function genValue() {\n      return MathUtils.lerp(this.a, this.b, Math.random());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"IntervalValue\",\n        a: this.a,\n        b: this.b\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new IntervalValue(this.a, this.b);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new IntervalValue(json.a, json.b);\n    }\n  }]);\n\n  return IntervalValue;\n}();\n\nvar PiecewiseFunction = /*#__PURE__*/function () {\n  function PiecewiseFunction() {\n    _classCallCheck(this, PiecewiseFunction);\n\n    _defineProperty(this, \"functions\", void 0);\n\n    this.functions = new Array();\n  }\n\n  _createClass(PiecewiseFunction, [{\n    key: \"findFunction\",\n    value: function findFunction(t) {\n      var mid = 0;\n      var left = 0,\n          right = this.functions.length - 1;\n\n      while (left + 1 < right) {\n        mid = (left + right) / 2;\n        if (t < this.getStartX(mid)) right = mid - 1;else if (t > this.getEndX(mid)) left = mid + 1;else return mid;\n      }\n\n      for (var i = left; i <= right; i++) {\n        if (t >= this.functions[i][1] && t <= this.getEndX(i)) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"getStartX\",\n    value: function getStartX(index) {\n      return this.functions[index][1];\n    }\n  }, {\n    key: \"setStartX\",\n    value: function setStartX(index, x) {\n      if (index > 0) this.functions[index][1] = x;\n    }\n  }, {\n    key: \"getEndX\",\n    value: function getEndX(index) {\n      if (index + 1 < this.functions.length) return this.functions[index + 1][1];\n      return 1;\n    }\n  }, {\n    key: \"setEndX\",\n    value: function setEndX(index, x) {\n      if (index + 1 < this.functions.length) this.functions[index + 1][1] = x;\n    }\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(index) {\n      return this.functions[index][0];\n    }\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(index, func) {\n      this.functions[index][0] = func;\n    }\n  }, {\n    key: \"numOfFunctions\",\n    get: function get() {\n      return this.functions.length;\n    }\n  }]);\n\n  return PiecewiseFunction;\n}();\n\nvar Bezier = /*#__PURE__*/function () {\n  function Bezier(p1, p2, p3, p4) {\n    _classCallCheck(this, Bezier);\n\n    _defineProperty(this, \"p\", void 0);\n\n    this.p = [p1, p2, p3, p4];\n  }\n\n  _createClass(Bezier, [{\n    key: \"genValue\",\n    value: function genValue(t) {\n      var t2 = t * t;\n      var t3 = t * t * t;\n      var mt = 1 - t;\n      var mt2 = mt * mt;\n      var mt3 = mt2 * mt;\n      return this.p[0] * mt3 + this.p[1] * mt2 * t * 3 + this.p[2] * mt * t2 * 3 + this.p[3] * t3;\n    } // get the coefficients of the polynomial's derivatives\n\n  }, {\n    key: \"derivativeCoefficients\",\n    value: function derivativeCoefficients(points) {\n      var dpoints = [];\n\n      for (var p = points, c = p.length - 1; c > 0; c--) {\n        var list = [];\n\n        for (var j = 0; j < c; j++) {\n          var dpt = c * (p[j + 1] - p[j]);\n          list.push(dpt);\n        }\n\n        dpoints.push(list);\n        p = list;\n      }\n\n      return dpoints;\n    } // calculate the slope\n\n  }, {\n    key: \"getSlope\",\n    value: function getSlope(t) {\n      var p = this.derivativeCoefficients(this.p)[0];\n      var mt = 1 - t;\n      var a = mt * mt;\n      var b = mt * t * 2;\n      var c = t * t;\n      return a * p[0] + b * p[1] + c * p[2]; //return  a * (p[1] - p[0]) * 3 + b * (p[2] - p[1]) * 3 + c * (p[3] - p[2]) * 3;\n    } // derivative(0) = (p[1] - p[0]) * 3\n    // derivative(1) = (p[3] - p[2]) * 3\n\n  }, {\n    key: \"controlCurve\",\n    value: function controlCurve(d0, d1) {\n      this.p[1] = d0 / 3 + this.p[0];\n      this.p[2] = this.p[3] - d1 / 3;\n    }\n  }, {\n    key: \"hull\",\n    value: function hull(t) {\n      var p = this.p;\n      var _p = [],\n          pt,\n          q = [],\n          idx = 0,\n          i = 0,\n          l = 0;\n      q[idx++] = p[0];\n      q[idx++] = p[1];\n      q[idx++] = p[2];\n      q[idx++] = p[3]; // we lerp between all points at each iteration, until we have 1 point left.\n\n      while (p.length > 1) {\n        _p = [];\n\n        for (i = 0, l = p.length - 1; i < l; i++) {\n          pt = t * p[i] + (1 - t) * p[i + 1];\n          q[idx++] = pt;\n\n          _p.push(pt);\n        }\n\n        p = _p;\n      }\n\n      return q;\n    }\n  }, {\n    key: \"split\",\n    value: function split(t) {\n      // no shortcut: use \"de Casteljau\" iteration.\n      var q = this.hull(t);\n      var result = {\n        left: new Bezier(q[0], q[4], q[7], q[9]),\n        right: new Bezier(q[9], q[8], q[6], q[3]),\n        span: q\n      };\n      return result;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Bezier(this.p[0], this.p[1], this.p[2], this.p[3]);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        p0: this.p[0],\n        p1: this.p[1],\n        p2: this.p[2],\n        p3: this.p[3]\n      };\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Bezier(json.p0, json.p1, json.p2, json.p3);\n    }\n  }]);\n\n  return Bezier;\n}();\n\nvar PiecewiseBezier = /*#__PURE__*/function (_PiecewiseFunction) {\n  _inherits(PiecewiseBezier, _PiecewiseFunction);\n\n  var _super2 = _createSuper(PiecewiseBezier);\n\n  // default linear bezier\n  function PiecewiseBezier() {\n    var _this2;\n\n    var curves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new Bezier(0, 1.0 / 3, 1.0 / 3 * 2, 1), 0]];\n\n    _classCallCheck(this, PiecewiseBezier);\n\n    _this2 = _super2.call(this);\n\n    _defineProperty(_assertThisInitialized(_this2), \"type\", void 0);\n\n    _this2.type = \"function\";\n    _this2.functions = curves;\n    return _this2;\n  }\n\n  _createClass(PiecewiseBezier, [{\n    key: \"genValue\",\n    value: function genValue() {\n      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return 0;\n      }\n\n      return this.functions[index][0].genValue((t - this.getStartX(index)) / (this.getEndX(index) - this.getStartX(index)));\n    }\n  }, {\n    key: \"toSVG\",\n    value: function toSVG(length, segments) {\n      if (segments < 1) return \"\";\n      var result = [\"M\", 0, this.functions[0][0].p[0]].join(\" \");\n\n      for (var i = 1.0 / segments; i <= 1; i += 1.0 / segments) {\n        result = [result, \"L\", i * length, this.genValue(i)].join(\" \");\n      }\n\n      return result;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"PiecewiseBezier\",\n        functions: this.functions.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              bezier = _ref2[0],\n              start = _ref2[1];\n\n          return {\n            function: bezier.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PiecewiseBezier(this.functions.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            bezier = _ref4[0],\n            start = _ref4[1];\n\n        return [bezier.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new PiecewiseBezier(json.functions.map(function (piecewiseFunction) {\n        return [Bezier.fromJSON(piecewiseFunction.function), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return PiecewiseBezier;\n}(PiecewiseFunction);\n\nfunction ValueGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantValue':\n      return ConstantValue.fromJSON(json);\n\n    case 'IntervalValue':\n      return IntervalValue.fromJSON(json);\n\n    case 'PiecewiseBezier':\n      return PiecewiseBezier.fromJSON(json);\n\n    default:\n      return new ConstantValue(0);\n  }\n}\n\nvar ColorToJSON = function ColorToJSON(color) {\n  return {\n    r: color.x,\n    g: color.y,\n    b: color.z,\n    a: color.w\n  };\n};\n\nvar JSONToColor = function JSONToColor(json) {\n  return new Vector4(json.r, json.g, json.b, json.a);\n};\n\nvar RandomColor = /*#__PURE__*/function () {\n  function RandomColor(a, b) {\n    _classCallCheck(this, RandomColor);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"value\";\n  }\n\n  _createClass(RandomColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      var rand = Math.random();\n      return color.copy(this.a).lerp(this.b, rand);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"RandomColor\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RandomColor(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new RandomColor(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return RandomColor;\n}();\n\nvar ColorRange = /*#__PURE__*/function () {\n  function ColorRange(a, b) {\n    _classCallCheck(this, ColorRange);\n\n    this.a = a;\n    this.b = b;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = \"function\";\n  }\n\n  _createClass(ColorRange, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      return color.copy(this.a).lerp(this.b, t);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ColorRange\",\n        a: ColorToJSON(this.a),\n        b: ColorToJSON(this.b)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorRange(this.a.clone(), this.b.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ColorRange(JSONToColor(json.a), JSONToColor(json.b));\n    }\n  }]);\n\n  return ColorRange;\n}();\n\nvar ConstantColor = /*#__PURE__*/function () {\n  function ConstantColor(color) {\n    _classCallCheck(this, ConstantColor);\n\n    this.color = color;\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.type = 'value';\n  }\n\n  _createClass(ConstantColor, [{\n    key: \"genColor\",\n    value: function genColor(color) {\n      return color.copy(this.color);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"ConstantColor\",\n        color: ColorToJSON(this.color)\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConstantColor(this.color.clone());\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new ConstantColor(JSONToColor(json.color));\n    }\n  }]);\n\n  return ConstantColor;\n}();\n\nfunction ColorGeneratorFromJSON(json) {\n  switch (json.type) {\n    case 'ConstantColor':\n      return ConstantColor.fromJSON(json);\n\n    case 'ColorRange':\n      return ColorRange.fromJSON(json);\n\n    case 'RandomColor':\n      return RandomColor.fromJSON(json);\n\n    default:\n      return new ConstantColor(new Vector4(1, 1, 1, 1));\n  }\n}\n\nvar ColorOverLife = /*#__PURE__*/function () {\n  function ColorOverLife(func) {\n    _classCallCheck(this, ColorOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'ColorOverLife');\n  }\n\n  _createClass(ColorOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      this.func.genColor(particle.color, particle.age / particle.life);\n      particle.color.x *= particle.startColor.x;\n      particle.color.y *= particle.startColor.y;\n      particle.color.z *= particle.startColor.z;\n      particle.color.w *= particle.startColor.w;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ColorOverLife(this.func.clone());\n    }\n  }]);\n\n  return ColorOverLife;\n}();\n\nvar RotationOverLife = /*#__PURE__*/function () {\n  function RotationOverLife(angularVelocityFunc) {\n    _classCallCheck(this, RotationOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'RotationOverLife');\n  }\n\n  _createClass(RotationOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.rotation += delta * particle.angularVelocity;\n      } else {\n        particle.rotation += delta * this.angularVelocityFunc.genValue(particle.age / particle.life);\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new RotationOverLife(this.angularVelocityFunc);\n    }\n  }]);\n\n  return RotationOverLife;\n}();\n\nvar SizeOverLife = /*#__PURE__*/function () {\n  _createClass(SizeOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }]);\n\n  function SizeOverLife(func) {\n    _classCallCheck(this, SizeOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SizeOverLife');\n  }\n\n  _createClass(SizeOverLife, [{\n    key: \"update\",\n    value: function update(particle) {\n      particle.size = particle.startSize * this.func.genValue(particle.age / particle.life);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SizeOverLife(this.func.clone());\n    }\n  }]);\n\n  return SizeOverLife;\n}();\n\nvar SpeedOverLife = /*#__PURE__*/function () {\n  _createClass(SpeedOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }]);\n\n  function SpeedOverLife(func) {\n    _classCallCheck(this, SpeedOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'SpeedOverLife');\n  }\n\n  _createClass(SpeedOverLife, [{\n    key: \"update\",\n    value: function update(particle) {\n      particle.velocity.normalize().multiplyScalar(particle.startSpeed * this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SpeedOverLife(this.func.clone());\n    }\n  }]);\n\n  return SpeedOverLife;\n}();\n\nvar FrameOverLife = /*#__PURE__*/function () {\n  function FrameOverLife(func) {\n    _classCallCheck(this, FrameOverLife);\n\n    this.func = func;\n\n    _defineProperty(this, \"type\", 'FrameOverLife');\n  }\n\n  _createClass(FrameOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {}\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      particle.uvTile = Math.floor(this.func.genValue(particle.age / particle.life));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.func.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new FrameOverLife(this.func.clone());\n    }\n  }]);\n\n  return FrameOverLife;\n}();\n\nvar V3_ZERO = new Vector3();\n\nvar OrbitOverLife = /*#__PURE__*/function () {\n  function OrbitOverLife(angularVelocityFunc) {\n    _classCallCheck(this, OrbitOverLife);\n\n    this.angularVelocityFunc = angularVelocityFunc;\n\n    _defineProperty(this, \"type\", 'OrbitOverLife');\n  }\n\n  _createClass(OrbitOverLife, [{\n    key: \"initialize\",\n    value: function initialize(particle) {\n      if (this.angularVelocityFunc.type === 'value') {\n        particle.angularVelocity = this.angularVelocityFunc.genValue();\n      } else {\n        particle.angularVelocity = 0;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      var rotation = Math.atan2(particle.position.y, particle.position.x);\n      var len = Math.sqrt(particle.position.x * particle.position.x + particle.position.y * particle.position.y);\n      rotation += this.angularVelocityFunc.genValue(particle.age / particle.life) * delta;\n      particle.position.x = Math.cos(rotation) * len;\n      particle.position.y = Math.sin(rotation) * len; //let v1x = particle.position.x\n      //let v1y = particle.position.y;\n\n      /*let v2x = particle.position.y;\n      let v2y = -particle.position.x;\n      v2x /= len;\n      v2y /= len;\n      particle.position.distanceTo(V3_ZERO) * this.angularVelocityFunc.genValue(particle.age / particle.life);*/\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        func: this.angularVelocityFunc.toJSON()\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new OrbitOverLife(this.angularVelocityFunc.clone());\n    }\n  }]);\n\n  return OrbitOverLife;\n}();\n\nfunction BehaviorFromJSON(json) {\n  switch (json.type) {\n    case 'ColorOverLife':\n      return new ColorOverLife(ColorGeneratorFromJSON(json.func));\n\n    case 'RotationOverLife':\n      return new RotationOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'SizeOverLife':\n      return new SizeOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'SpeedOverLife':\n      return new SpeedOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'FrameOverLife':\n      return new FrameOverLife(ValueGeneratorFromJSON(json.func));\n\n    case 'OrbitOverLife':\n      return new OrbitOverLife(ValueGeneratorFromJSON(json.func));\n\n    default:\n      return new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)));\n  }\n}\n\nvar ConeEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function ConeEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ConeEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(ConeEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"cone\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConeEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return ConeEmitter;\n}();\n\nvar SphereEmitter = /*#__PURE__*/function () {\n  //[0, 1]\n  function SphereEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SphereEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n  }\n\n  _createClass(SphereEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var rand = MathUtils.lerp(1 - this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.position.x = r * sinPhi * cosTheta;\n      p.position.y = r * sinPhi * sinTheta;\n      p.position.z = r * cosPhi;\n      p.velocity.setScalar(0).addScaledVector(p.position, p.startSpeed);\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"sphere\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new SphereEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness\n      });\n    }\n  }]);\n\n  return SphereEmitter;\n}();\n\nvar PointEmitter = /*#__PURE__*/function () {\n  function PointEmitter() {\n    _classCallCheck(this, PointEmitter);\n  }\n\n  _createClass(PointEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var v = Math.random();\n      var theta = u * Math.PI * 2;\n      var phi = Math.acos(2.0 * v - 1.0);\n      var r = Math.cbrt(Math.random());\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      p.velocity.x = r * sinPhi * cosTheta;\n      p.velocity.y = r * sinPhi * sinTheta;\n      p.velocity.z = r * cosPhi;\n      p.velocity.multiplyScalar(p.startSpeed);\n      p.position.setScalar(0);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: 'point'\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new PointEmitter();\n    }\n  }]);\n\n  return PointEmitter;\n}();\n\nvar DonutEmitter = /*#__PURE__*/function () {\n  // [0, Math.PI * 2]\n  // [0, Math.PI / 2]\n  function DonutEmitter() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DonutEmitter);\n\n    _defineProperty(this, \"radius\", void 0);\n\n    _defineProperty(this, \"arc\", void 0);\n\n    _defineProperty(this, \"thickness\", void 0);\n\n    _defineProperty(this, \"angle\", void 0);\n\n    this.radius = parameters.radius || 10;\n    this.arc = parameters.arc || 2.0 * Math.PI;\n    this.thickness = parameters.thickness || 1;\n    this.angle = parameters.angle || Math.PI / 6;\n  }\n\n  _createClass(DonutEmitter, [{\n    key: \"initialize\",\n    value: function initialize(p) {\n      var u = Math.random();\n      var rand = MathUtils.lerp(this.thickness, 1, Math.random());\n      var theta = u * this.arc;\n      var r = Math.sqrt(rand);\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      p.position.x = r * cosTheta;\n      p.position.y = r * sinTheta;\n      p.position.z = 0;\n      var angle = this.angle * r;\n      p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed); //const v = Math.random();\n\n      p.position.multiplyScalar(this.radius);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"donut\",\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new DonutEmitter({\n        radius: this.radius,\n        arc: this.arc,\n        thickness: this.thickness,\n        angle: this.angle\n      });\n    }\n  }]);\n\n  return DonutEmitter;\n}();\n\nvar ParticleSystem = /*#__PURE__*/function () {\n  _createClass(ParticleSystem, [{\n    key: \"texture\",\n    // parameters\n    // runtime data\n    get: function get() {\n      return this.emitter.texture;\n    },\n    set: function set(texture) {\n      this.emitter.texture = texture;\n      this.emitter.material.uniforms.map.value = texture;\n    }\n  }, {\n    key: \"uTileCount\",\n    get: function get() {\n      return this.tileCount.x;\n    },\n    set: function set(u) {\n      this.tileCount.x = u;\n      this.emitter.material.uniforms.tileCount.value.x = u;\n    }\n  }, {\n    key: \"vTileCount\",\n    get: function get() {\n      return this.tileCount.y;\n    },\n    set: function set(v) {\n      this.tileCount.y = v;\n      this.emitter.material.uniforms.tileCount.value.y = v;\n    }\n  }, {\n    key: \"renderMode\",\n    get: function get() {\n      return this.emitter.renderMode;\n    },\n    set: function set(renderMode) {\n      this.emitter.renderMode = renderMode;\n      this.emitter.rebuildMaterial();\n    }\n  }, {\n    key: \"speedFactor\",\n    get: function get() {\n      return this.emitter.speedFactor;\n    },\n    set: function set(v) {\n      this.emitter.speedFactor = v;\n      this.emitter.material.uniforms.speedFactor.value = v;\n    }\n  }, {\n    key: \"blending\",\n    get: function get() {\n      return this.emitter.material.blending;\n    },\n    set: function set(blending) {\n      this.emitter.material.blending = blending;\n    }\n  }]);\n\n  function ParticleSystem() {\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ParticleSystem);\n\n    _defineProperty(this, \"autoDestroy\", void 0);\n\n    _defineProperty(this, \"looping\", void 0);\n\n    _defineProperty(this, \"duration\", void 0);\n\n    _defineProperty(this, \"maxParticle\", void 0);\n\n    _defineProperty(this, \"startLife\", void 0);\n\n    _defineProperty(this, \"startSpeed\", void 0);\n\n    _defineProperty(this, \"startRotation\", void 0);\n\n    _defineProperty(this, \"startSize\", void 0);\n\n    _defineProperty(this, \"startColor\", void 0);\n\n    _defineProperty(this, \"startTileIndex\", void 0);\n\n    _defineProperty(this, \"emissionOverTime\", void 0);\n\n    _defineProperty(this, \"emissionOverDistance\", void 0);\n\n    _defineProperty(this, \"emissionBursts\", void 0);\n\n    _defineProperty(this, \"tileCount\", void 0);\n\n    _defineProperty(this, \"worldSpace\", void 0);\n\n    _defineProperty(this, \"particleNum\", void 0);\n\n    _defineProperty(this, \"burstIndex\", void 0);\n\n    _defineProperty(this, \"burstWaveIndex\", void 0);\n\n    _defineProperty(this, \"time\", void 0);\n\n    _defineProperty(this, \"paused\", void 0);\n\n    _defineProperty(this, \"waitEmiting\", void 0);\n\n    _defineProperty(this, \"emitEnded\", void 0);\n\n    _defineProperty(this, \"markForDestroy\", void 0);\n\n    _defineProperty(this, \"behaviors\", void 0);\n\n    _defineProperty(this, \"particles\", void 0);\n\n    _defineProperty(this, \"emitterShape\", void 0);\n\n    _defineProperty(this, \"emitter\", void 0);\n\n    _defineProperty(this, \"oldWorldMatrix\", new Matrix4());\n\n    _defineProperty(this, \"normalMatrix\", new Matrix3());\n\n    this.autoDestroy = parameters.autoDestroy === undefined ? false : parameters.autoDestroy;\n    this.duration = parameters.duration || 1;\n    this.maxParticle = parameters.maxParticle || 100;\n    this.looping = parameters.looping === undefined ? true : parameters.looping;\n    this.startLife = parameters.startLife || new ConstantValue(5);\n    this.startSpeed = parameters.startSpeed || new ConstantValue(0);\n    this.startRotation = parameters.startRotation || new ConstantValue(0);\n    this.startSize = parameters.startSize || new ConstantValue(1);\n    this.startColor = parameters.startColor || new ConstantColor(new Vector4(1, 1, 1, 1));\n    this.emissionOverTime = parameters.emissionOverTime || new ConstantValue(10);\n    this.emissionOverDistance = parameters.emissionOverDistance || new ConstantValue(0);\n    this.emissionBursts = parameters.emissionBursts || [];\n    this.emitterShape = parameters.shape || new SphereEmitter();\n    this.behaviors = parameters.behaviors || new Array();\n    this.worldSpace = parameters.worldSpace === undefined ? false : parameters.worldSpace;\n    this.tileCount = new Vector2(parameters.uTileCount, parameters.vTileCount);\n    this.particles = new Array();\n    this.startTileIndex = parameters.startTileIndex || 0;\n    this.emitter = new ParticleEmitter(this, parameters);\n    this.particleNum = 0;\n    this.burstIndex = 0;\n    this.burstWaveIndex = 0;\n    this.time = 0;\n    this.paused = false;\n    this.waitEmiting = 0;\n    this.emitEnded = false;\n    this.markForDestroy = false;\n  }\n\n  _createClass(ParticleSystem, [{\n    key: \"pause\",\n    value: function pause() {\n      this.paused = true;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.paused = false;\n    }\n  }, {\n    key: \"spawn\",\n    value: function spawn(count) {\n      for (var i = 0; i < count && this.particleNum < this.maxParticle; i++) {\n        this.particleNum++;\n\n        while (this.particles.length < this.particleNum) {\n          this.particles.push(new Particle());\n        }\n\n        var particle = this.particles[this.particleNum - 1];\n        this.startColor.genColor(particle.startColor, this.time);\n        particle.color.copy(particle.startColor);\n        particle.startSpeed = this.startSpeed.genValue(this.time);\n        particle.life = this.startLife.genValue(this.time);\n        particle.age = 0;\n        particle.rotation = this.startRotation.genValue(this.time);\n        particle.startSize = particle.size = this.startSize.genValue(this.time);\n        particle.uvTile = this.startTileIndex;\n        this.emitterShape.initialize(particle);\n\n        if (this.worldSpace) {\n          particle.position.applyMatrix4(this.emitter.matrixWorld);\n          particle.velocity.applyMatrix3(this.normalMatrix);\n        }\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].initialize(particle);\n        }\n      }\n    }\n  }, {\n    key: \"endEmit\",\n    value: function endEmit() {\n      this.emitEnded = true;\n\n      if (this.autoDestroy) {\n        this.markForDestroy = true;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.emitter.dispose();\n      if (this.emitter.parent) this.emitter.parent.remove(this.emitter);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.paused = false;\n      this.particleNum = 0;\n      this.burstIndex = 0;\n      this.burstWaveIndex = 0;\n      this.time = 0;\n      this.waitEmiting = 0;\n      this.emitEnded = false;\n      this.markForDestroy = false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (delta > 0.1) delta = 0.1;\n      if (this.paused) return;\n\n      if (this.emitEnded && this.particleNum === 0) {\n        if (this.markForDestroy && this.emitter.parent) this.dispose();\n        return;\n      }\n\n      if (this.time > this.duration) {\n        if (this.looping) {\n          this.time -= this.duration;\n        } else {\n          if (!this.emitEnded) {\n            this.endEmit();\n          }\n        }\n      }\n\n      this.normalMatrix.getNormalMatrix(this.emitter.matrixWorld); // particle die\n\n      for (var i = 0; i < this.particleNum; i++) {\n        var particle = this.particles[i];\n\n        if (particle.age >= particle.life) {\n          this.particles[i] = this.particles[this.particleNum - 1];\n          this.particles[this.particleNum - 1] = particle;\n          this.particleNum--;\n          i--;\n        }\n      } // spawn\n\n\n      if (!this.emitEnded) {\n        var totalSpawn = Math.floor(this.waitEmiting);\n        this.spawn(totalSpawn);\n        this.waitEmiting -= totalSpawn;\n      } // spawn burst\n\n\n      while (this.burstIndex < this.emissionBursts.length && this.emissionBursts[this.burstIndex].time <= this.time) {\n        if (Math.random() < this.emissionBursts[this.burstIndex].probability) {\n          var count = this.emissionBursts[this.burstIndex].count;\n          this.spawn(count);\n        }\n\n        this.burstIndex++;\n      }\n\n      for (var _i = 0; _i < this.particleNum; _i++) {\n        var _particle = this.particles[_i];\n\n        for (var j = 0; j < this.behaviors.length; j++) {\n          this.behaviors[j].update(_particle, delta);\n        }\n\n        _particle.position.addScaledVector(_particle.velocity, delta);\n\n        _particle.age += delta;\n      }\n\n      this.emitter.update();\n      this.oldWorldMatrix.copy(this.emitter.matrixWorld);\n\n      if (!this.emitEnded) {\n        this.waitEmiting += delta * this.emissionOverTime.genValue(this.time / this.duration);\n      }\n\n      this.time += delta;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(meta) {\n      this.texture.toJSON(meta);\n\n      if (this.texture.image !== undefined) {\n        var image = this.texture.image;\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: this.texture.name\n        };\n      }\n\n      return {\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.toJSON(),\n        startLife: this.startLife.toJSON(),\n        startSpeed: this.startSpeed.toJSON(),\n        startRotation: this.startRotation.toJSON(),\n        startSize: this.startSize.toJSON(),\n        startColor: this.startColor.toJSON(),\n        emissionOverTime: this.emissionOverTime.toJSON(),\n        emissionOverDistance: this.emissionOverDistance.toJSON(),\n        emissionBursts: this.emissionBursts,\n        instancingGeometry: this.emitter.instancingGeometry.toJSON(),\n        //Array.from(this.emitter.interleavedBuffer.array as Float32Array),\n        renderMode: this.renderMode,\n        speedFactor: this.renderMode === RenderMode.StretchedBillBoard ? this.speedFactor : 0,\n        texture: this.texture.uuid,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: this.behaviors.map(function (behavior) {\n          return behavior.toJSON();\n        }),\n        worldSpace: this.worldSpace\n      };\n    }\n  }, {\n    key: \"addBehavior\",\n    value: function addBehavior(behavior) {\n      this.behaviors.push(behavior);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newEmissionBursts = [];\n\n      var _iterator = _createForOfIteratorHelper(this.emissionBursts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var emissionBurst = _step.value;\n          var newEmissionBurst = {};\n          Object.assign(newEmissionBurst, emissionBurst);\n          newEmissionBursts.push(newEmissionBurst);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var newBehaviors = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.behaviors),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var behavior = _step2.value;\n          newBehaviors.push(behavior.clone());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return new ParticleSystem(renderer, {\n        autoDestroy: this.autoDestroy,\n        looping: this.looping,\n        duration: this.duration,\n        maxParticle: this.maxParticle,\n        shape: this.emitterShape.clone(),\n        startLife: this.startLife.clone(),\n        startSpeed: this.startSpeed.clone(),\n        startRotation: this.startRotation.clone(),\n        startSize: this.startSize.clone(),\n        startColor: this.startColor.clone(),\n        emissionOverTime: this.emissionOverTime.clone(),\n        emissionOverDistance: this.emissionOverDistance.clone(),\n        emissionBursts: newEmissionBursts,\n        instancingGeometry: this.emitter.instancingGeometry.clone(),\n        //.interleavedBuffer.array,\n        renderMode: this.renderMode,\n        speedFactor: this.speedFactor,\n        texture: this.texture,\n        startTileIndex: this.startTileIndex,\n        uTileCount: this.uTileCount,\n        vTileCount: this.vTileCount,\n        blending: this.blending,\n        behaviors: newBehaviors,\n        worldSpace: this.worldSpace\n      });\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json, textures) {\n      var shape;\n\n      switch (json.shape.type) {\n        case 'cone':\n          shape = new ConeEmitter(json.shape);\n          break;\n\n        case 'donut':\n          shape = new DonutEmitter(json.shape);\n          break;\n\n        case 'point':\n          shape = new PointEmitter();\n          break;\n\n        case 'sphere':\n          shape = new SphereEmitter(json.shape);\n          break;\n\n        default:\n          shape = new PointEmitter();\n          break;\n      }\n\n      return new ParticleSystem(renderer, {\n        autoDestroy: json.autoDestroy,\n        looping: json.looping,\n        duration: json.duration,\n        maxParticle: json.maxParticle,\n        shape: shape,\n        startLife: ValueGeneratorFromJSON(json.startLife),\n        startSpeed: ValueGeneratorFromJSON(json.startSpeed),\n        startRotation: ValueGeneratorFromJSON(json.startRotation),\n        startSize: ValueGeneratorFromJSON(json.startSize),\n        startColor: ColorGeneratorFromJSON(json.startColor),\n        emissionOverTime: ValueGeneratorFromJSON(json.emissionOverTime),\n        emissionOverDistance: ValueGeneratorFromJSON(json.emissionOverDistance),\n        emissionBursts: json.emissionBursts,\n        //instancingGeometry: json.instancingGeometry, //TODO: Support instancing Geometry in deserialization\n        renderMode: json.renderMode,\n        speedFactor: json.speedFactor,\n        texture: textures[json.texture],\n        startTileIndex: json.startTileIndex,\n        uTileCount: json.uTileCount,\n        vTileCount: json.vTileCount,\n        blending: json.blending,\n        behaviors: json.behaviors.map(function (behavior) {\n          return BehaviorFromJSON(behavior);\n        }),\n        worldSpace: json.worldSpace\n      });\n    }\n  }]);\n\n  return ParticleSystem;\n}();\n\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  //SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipMapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipMapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipMapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipMapLinearFilter\n};\n\nvar QuarksLoader = /*#__PURE__*/function () {\n  function QuarksLoader(manager) {\n    _classCallCheck(this, QuarksLoader);\n\n    _defineProperty(this, \"manager\", void 0);\n\n    _defineProperty(this, \"crossOrigin\", \"anonymous\");\n\n    _defineProperty(this, \"path\", void 0);\n\n    _defineProperty(this, \"resourcePath\", void 0);\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.resourcePath = '';\n  }\n\n  _createClass(QuarksLoader, [{\n    key: \"setPath\",\n    value: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  }, {\n    key: \"setResourcePath\",\n    value: function setResourcePath(value) {\n      this.resourcePath = value;\n      return this;\n    }\n  }, {\n    key: \"setCrossOrigin\",\n    value: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === undefined ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(scope.manager);\n      if (this.path) loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(loader, url) {\n      var scope = this;\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    }\n  }, {\n    key: \"parseImages\",\n    value: function parseImages(json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n              images[image.uuid].push(this.loadImage(loader, path));\n            }\n          } else {\n            // load single image\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n            images[image.uuid] = this.loadImage(loader, path);\n          }\n        }\n      }\n\n      return images;\n    }\n  }, {\n    key: \"parseTextures\",\n    value: function parseTextures(json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture;\n\n          if (Array.isArray(images[data.image])) {\n            texture = new CubeTexture(images[data.image]);\n          } else {\n            texture = new Texture(images[data.image]);\n          }\n\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.type !== undefined) texture.type = data.type;\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    }\n  }, {\n    key: \"parseObject\",\n    value: function parseObject(data, textures) {\n      var object;\n\n      switch (data.type) {\n        case 'ParticleEmitter':\n          object = ParticleSystem.fromJSON(data.ps, textures).emitter;\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], textures));\n        }\n      }\n\n      return object;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(json, onLoad) {\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var object = this.parseObject(json.object, textures);\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    }\n  }]);\n\n  return QuarksLoader;\n}();\n\nvar Gradient = /*#__PURE__*/function (_PiecewiseFunction2) {\n  _inherits(Gradient, _PiecewiseFunction2);\n\n  var _super3 = _createSuper(Gradient);\n\n  // default linear bezier\n  function Gradient() {\n    var _this3;\n\n    var functions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [[new ColorRange(new Vector4(0, 0, 0, 1), new Vector4(1, 1, 1, 1)), 0]];\n\n    _classCallCheck(this, Gradient);\n\n    _this3 = _super3.call(this);\n\n    _defineProperty(_assertThisInitialized(_this3), \"type\", void 0);\n\n    _this3.type = \"function\";\n    _this3.functions = functions;\n    return _this3;\n  }\n\n  _createClass(Gradient, [{\n    key: \"genColor\",\n    value: function genColor(color, t) {\n      var index = this.findFunction(t);\n\n      if (index === -1) {\n        console.error(t);\n        return color.copy(this.functions[0][0].a);\n      }\n\n      return this.getFunction(index).genColor(color, t);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: \"Gradient\",\n        functions: this.functions.map(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 2),\n              range = _ref6[0],\n              start = _ref6[1];\n\n          return {\n            function: range.toJSON(),\n            start: start\n          };\n        })\n      };\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Gradient(this.functions.map(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            range = _ref8[0],\n            start = _ref8[1];\n\n        return [range.clone(), start];\n      }));\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Gradient(json.functions.map(function (piecewiseFunction) {\n        return [ColorRange.fromJSON(piecewiseFunction.function), piecewiseFunction.start];\n      }));\n    }\n  }]);\n\n  return Gradient;\n}(PiecewiseFunction);\n\nexport { BehaviorFromJSON, Bezier, ColorGeneratorFromJSON, ColorOverLife, ColorRange, ConeEmitter, ConstantColor, ConstantValue, DonutEmitter, FrameOverLife, Gradient, IntervalValue, OrbitOverLife, Particle, ParticleEmitter, ParticleSystem, PiecewiseBezier, PiecewiseFunction, PointEmitter, QuarksLoader, RandomColor, RenderMode, RotationOverLife, SizeOverLife, SpeedOverLife, SphereEmitter, ValueGeneratorFromJSON };","import {AdditiveBlending, Group, NormalBlending, Texture, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ToonProjectile extends Group {\n    private particles: ParticleSystem;\n    private smoke: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private mainBeam: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(3.5),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(2, 5),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 4.8423 / 180 * Math.PI,\n                radius: .3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .01,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n\n        this.add(this.particles.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            startLife: new IntervalValue(0.25, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(.75, 1.25),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new SphereEmitter({\n                radius: .2,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n\n        this.add(this.smoke.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class BulletMuzzle extends Group {\n    private beam: ParticleSystem;\n    private muzzle1: ParticleSystem;\n    private muzzle2: ParticleSystem;\n    private flash: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.585716, 0.1691176, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        let muzzle = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.muzzle1 = new ParticleSystem(muzzle);\n        this.muzzle1.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle1.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle1.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle1.emitter.renderOrder = 2;\n        this.muzzle1.emitter.name = 'muzzle1';\n        this.muzzle1.emitter.position.x = 1;\n        this.add(this.muzzle1.emitter);\n\n        this.muzzle2 = new ParticleSystem(muzzle);\n        this.muzzle2.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.3882312, 0.125, 1), new Vector4(1, 0.826827, 0.3014706, 1))));\n        this.muzzle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.muzzle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(91, 94, 97, 100), 0]])));\n        this.muzzle2.emitter.renderOrder = 2;\n        this.muzzle2.emitter.name = 'muzzle2';\n        this.muzzle2.emitter.position.x = 1;\n        this.muzzle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.muzzle2.emitter);\n\n        this.flash = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.flash.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.95, 0.82, 1), new Vector4(1, 0.38, 0.12, 1))));\n        this.flash.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(81, 84.333, 87.666, 91), 0]])));\n        this.flash.emitter.renderOrder = 2;\n        this.flash.emitter.name = 'flash';\n        this.add(this.flash.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.smoke.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.rotation.y = Math.PI / 2;\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(1, 15),\n            startSize: new IntervalValue(0.1, 0.3),\n            startColor: new RandomColor(new Vector4(1, 0.91, 0.51, 1), new Vector4(1, 0.44, 0.16, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.emitter.renderOrder = 1;\n        this.particles.emitter.name = 'particles';\n        this.particles.emitter.rotation.y = Math.PI / 2;\n        this.add(this.particles.emitter);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.muzzle1.update(delta);\n        this.muzzle2.update(delta);\n        this.flash.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\n\nexport class BulletProjectile extends Group {\n    private hProjectile: ParticleSystem;\n    private vProjectile: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/projectile.png\");\n        texture.name = \"textures/projectile.png\";\n\n        let projectileParam = {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(4),\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 1,\n            vTileCount: 1,\n            /*instancingGeometry: [\n                -2, -0.5, 0, 0, 0,\n                2, -0.5, 0, 1, 0,\n                2, 0.5, 0, 1, 1,\n                -2, 0.5, 0, 0, 1\n            ],*/\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.hProjectile = new ParticleSystem(projectileParam);\n        this.hProjectile.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));\n        this.hProjectile.emitter.renderOrder = 2;\n        this.hProjectile.emitter.name = 'hProjectile';\n        this.add(this.hProjectile.emitter);\n\n        this.vProjectile = new ParticleSystem(projectileParam);\n        this.vProjectile.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));\n        this.vProjectile.emitter.renderOrder = 2;\n        this.vProjectile.emitter.name = 'vProjectile';\n        this.vProjectile.emitter.rotation.x = Math.PI / 2;\n        this.add(this.vProjectile.emitter);\n    }\n\n    update(delta: number) {\n        this.hProjectile.update(delta);\n        this.vProjectile.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ToonExplosion extends Group {\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(5, 15),\n            startSize: new IntervalValue(1.5, 1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 25 * Math.PI / 180,\n                radius: 0.2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(0.7, 1.5),\n            startSize: new IntervalValue(0.4, 0.8),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 80 * Math.PI / 180,\n                radius: 0.25,\n                thickness: 0.5,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n        this.beam.update(delta);\n        this.circle.update(delta);\n    }\n}","import {AdditiveBlending, Group, NormalBlending, Scene, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier, ColorOverLife, ColorRange, ConstantColor,\n    ConstantValue, FrameOverLife,\n    IntervalValue,\n    ParticleSystem,\n    PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, RotationOverLife,\n    SizeOverLife,\n    SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Explosion extends Group {\n\n    static yellowColor = new Vector4(0.9, 0.60, 0.25, 1);\n    static yellowColor2 = new Vector4(1, 0.95, 0.4, 1);\n\n    private gatherParticles: ParticleSystem;\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private circle: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n        let mainColor = Explosion.yellowColor;\n        let secColor = Explosion.yellowColor2;\n\n        this.gatherParticles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 3),\n            startColor: new ConstantColor(new Vector4(1,1,1,1)),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n            shape: new SphereEmitter({\n                radius: 40,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(mainColor.x, mainColor.y, mainColor.z, .2), new Vector4(mainColor.x, mainColor.y, mainColor.z, 1))));\n        this.gatherParticles.emitter.renderOrder = 2;\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.add(this.gatherParticles.emitter);\n\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(100, 300),\n            startSize: new IntervalValue(1.5, 12.5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(20, 45),\n            startSize: new IntervalValue(4, 8),\n            startColor: new ConstantColor(mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new IntervalValue(10, 15),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 7.5,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(mainColor, new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(40, 200),\n            startSize: new IntervalValue(1, 4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.35,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.beam.emitter.renderOrder = -2;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0.4,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n    }\n\n    update(delta: number) {\n        //delta /= 1000;\n        this.gatherParticles.update(delta);\n        this.beam.update(delta);\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.circle.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class LevelUp extends Group {\n\n    private gatherParticles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glow2: ParticleSystem;\n    private particle: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n        this.name = 'levelUp';\n\n        let texture = textures[0].texture;\n\n        let yellow = new Vector4(.8,.8,.2, 1);\n\n        this.gatherParticles = new ParticleSystem(renderer, {\n            duration: 0.5,\n            looping: false,\n            startLife: new IntervalValue(0.3, 0.4),\n            startSpeed: new IntervalValue(-100, -150),\n            startSize: new IntervalValue(1, 2),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(100),\n            shape: new SphereEmitter({\n                radius: 60,\n                thickness: .8,\n                arc: Math.PI\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.05\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.gatherParticles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(.2, .2, .2, 1), new Vector4(1, 1, 1, 1))));\n        this.gatherParticles.emitter.name = 'gatherParticles';\n        this.gatherParticles.emitter.renderOrder = 2;\n        this.add(this.gatherParticles.emitter);\n\n        let glowParam = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(120, 160),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            /*instancingGeometry: [\n                -1, -1, 0, 0, 0,\n                1, -1, 0, 1, 0,\n                1, 1, 0, 1, 1,\n                -1, 1, 0, 0, 1\n            ],*/\n            renderMode: RenderMode.LocalSpaceBillBoard\n        };\n\n        this.glow = new ParticleSystem(glowParam);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.glow.emitter.renderOrder = 0;\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.glow.emitter);\n\n\n        let glow2Param = {\n            duration: 2,\n            looping: false,\n            startLife: new ConstantValue(2.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        };\n\n        this.glow2 = new ParticleSystem(glow2Param);\n        /*this.glow.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 0), new Vector4(0, 1, 0.25, 1)), 0],\n            [new ColorRange(new Vector4(0, 1, 0.25, 1), new Vector4(1, 1, 1, 0)), 0.5]\n        ])));*/\n        this.glow2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1), 0], [new Bezier(1, 0.90, 0.75, 0), 0.2]])));\n        this.glow2.emitter.renderOrder = 0;\n        this.glow2.emitter.name = 'glow2';\n        this.add(this.glow2.emitter);\n\n        let particleParam = {\n            duration: 1.0,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(120, 180),\n            startSize: new IntervalValue(2, 4),\n            startColor: new ConstantColor(yellow),\n            worldSpace: false,\n            maxParticle: 100,\n            emissionOverTime: new PiecewiseBezier([[new Bezier(0, 0, 0, 0), 0], [new Bezier(50, 80, 80, 50), 0.4]]),\n            /*emissionBursts: [{\n                time: 0,\n                count: 30,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],*/\n            shape: new ConeEmitter({\n                radius: 25,\n                thickness: 0.2,\n                angle: Math.PI / 100\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            //speedFactor: 0.1,\n            renderMode: RenderMode.BillBoard\n        };\n\n        this.particle = new ParticleSystem(particleParam);\n        this.particle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.75, 0.90, 1),0], [new Bezier(1, 0.90, 0.75, 0), 0.5]])));\n        this.particle.addBehavior(new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, Math.PI * 4* 0.75, Math.PI * 4 * 0.90, Math.PI * 4),0]])));\n        this.particle.emitter.renderOrder = 2;\n        this.particle.emitter.name = 'particle';\n        this.particle.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.particle.emitter);\n\n    }\n\n    update(delta: number) {\n        this.gatherParticles.update(delta);\n        this.glow.update(delta);\n        this.glow2.update(delta);\n        this.particle.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorOverLife, ColorRange, ConeEmitter,\n    ConstantColor,\n    ConstantValue, Gradient,\n    IntervalValue, OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    PointEmitter,\n    RenderMode, SizeOverLife, SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipSmoke extends Group {\n\n    private smoke: ParticleSystem;\n    constructor(textures: TextureImage[]) {\n        super();\n        this.name = 'shipSmoke';\n\n        let texture = textures[0].texture;\n\n        let grey = new Vector4(.5, .5, .5, 1);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 5,\n            looping: true,\n            startLife: new IntervalValue(1.5, 3),\n            startSpeed: new IntervalValue(20, 30),\n            startSize: new IntervalValue(10, 15),\n            startColor: new ConstantColor(grey),\n            worldSpace: true,\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new ConeEmitter({\n                radius: 10,\n                thickness: 1,\n                angle: 0.2\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard,\n        });\n        //this.gatherParticles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(.8, .8, .8, 0))));\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.2, 1, 1, 1), 0]])));\n        this.smoke.emitter.name = 'smoke';\n        this.smoke.emitter.renderOrder = 2;\n        this.smoke.emitter.rotation.x = -Math.PI / 2;\n        this.add(this.smoke.emitter);\n    }\n\n    update(delta: number) {\n        this.smoke.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {FrameOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {ColorOverLife} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\n// TODO\nexport class ElectricBall extends Group {\n    private beam: ParticleSystem;\n    private beamWorld: ParticleSystem;\n    private electricity: ParticleSystem;\n    private electricBall: ParticleSystem;\n    /*private sparks: ParticleSystem;*/\n\n    constructor(textures: TextureImage[]) {\n        super();\n        this.name = 'ElectricBall';\n\n        let texture2 = textures[1].texture;\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(15.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.beamWorld = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(7.5, 15),\n            startColor: new RandomColor(new Vector4(0.1397059 * 0.8, 0.3592291 * 0.8, 1 * 0.8, 1), new Vector4(1 * 0.8, 0.9275356 * 0.8, 0.1029412 * 0.8, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n            shape: new SphereEmitter({\n                radius: 0.01,\n                thickness: 1,\n                arc: Math.PI * 2\n            }),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beamWorld.emitter.renderOrder = 0;\n        this.beamWorld.emitter.name = 'beamWorld';\n        this.beamWorld.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0))));\n        this.add(this.beamWorld.emitter);\n\n        this.electricity = new ParticleSystem(renderer, {\n            duration: 0.5,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(3, 6),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new IntervalValue(5, 10),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        //this.electricity.addBehavior(new ColorOverLife(([[new Bezier(61, 64, 67, 70), 0]])));\n        this.electricity.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(53, 56, 59, 62), 0]])));\n        this.electricity.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1.0, 1.0, 0.75, 0), 0]])));\n        this.electricity.emitter.renderOrder = 2;\n        this.electricity.emitter.name = 'electricity';\n        this.add(this.electricity.emitter);\n\n        this.electricBall = new ParticleSystem(renderer, {\n            duration: 0.4,\n            looping: true,\n\n            startLife: new IntervalValue(0.2, 0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(5, 10),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.1397059, 0.3592291, 1, 1), new Vector4(1, 0.9275356, 0.1029412, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(3),\n            emissionBursts: [],\n\n            shape: new PointEmitter(),\n            texture: texture2,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.electricBall.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(62, 65, 68, 71), 0]])));\n        this.electricBall.emitter.renderOrder = 1;\n        this.electricBall.emitter.name = 'electricBall';\n        this.add(this.electricBall.emitter);\n        /*\n        this.sparks = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.5, 0.8),\n            startSpeed: new IntervalValue(1, 2.5),\n            startSize: new IntervalValue(1, 1.5),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: .75,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(2, 10),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), new Vector4(1, 0.1509503, 0.07352942, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 50 / 180 * Math.PI,\n                radius: .5,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.5,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(7),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(4),\n            startColor: new ConstantColor(new Vector4(1, 0.3059356, 0.2426471, 1)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n*/\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 30;\\n\" +\n                \"    if (this.position.x > 20)\\n\" +\n                \"        this.position.x = -20;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.beamWorld.update(delta);\n        this.electricity.update(delta);\n        this.electricBall.update(delta);\n        /*this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.circle.update(delta);*/\n    }\n}","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {RotationOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class ShipTrail extends Group {\n    private particles: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private beam: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(1.0),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(20.0),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(1),\n            emissionBursts: [],\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.beam.emitter.renderOrder = 0;\n        this.beam.emitter.name = 'beam';\n        this.add(this.beam.emitter);\n\n        this.add(this.beam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new ConstantValue(0.5),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(10),\n            startColor: new ConstantColor(new Vector4(0.5220588* 0.772549, 0.6440161* 0.772549, 1 * 0.772549, 0.772549)),\n            worldSpace: true,\n\n            maxParticle: 500,\n            emissionOverTime: new ConstantValue(120),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 1.0, 0.8, 0.5), 0]])));\n        this.glowBeam.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1,1,1,1), new Vector4(0,0,0,0))));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(20, 40),\n            startSize: new IntervalValue(1, 2),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(0.5220588, 0.6440161, 1, 0.772549)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 80 / 180 * Math.PI,\n                radius: 1,\n                thickness: 0.3,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: .2,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.userData = {\n            script:\n                \"    this.position.x += delta * 200;\\n\" +\n                \"    if (this.position.x > 200)\\n\" +\n                \"        this.position.x = -200;\\n\"\n        };\n        this.userData.func = new Function(\"delta\", this.userData.script);\n    }\n\n    update(delta: number) {\n        this.beam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import {AdditiveBlending, Group, NormalBlending, Scene, TextureLoader, Vector4} from \"three\";\nimport {\n    Bezier, ColorOverLife, ColorRange, ConstantColor,\n    ConstantValue, FrameOverLife,\n    IntervalValue,\n    ParticleSystem,\n    PiecewiseBezier, PointEmitter, RandomColor,\n    RenderMode, RotationOverLife,\n    SizeOverLife, SpeedOverLife,\n    SphereEmitter\n} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class Explosion2 extends Group {\n\n    static yellowColor = new Vector4(0.9, 0.60, 0.25, 1);\n    static yellowColor2 = new Vector4(1, 0.95, 0.4, 1);\n\n    private mainBeam: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private smoke: ParticleSystem;\n    private particles: ParticleSystem;\n    private beam: ParticleSystem;\n    private circle: ParticleSystem;\n    private circle2: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[0].texture;\n        let mainColor = Explosion2.yellowColor;\n        let secColor = Explosion2.yellowColor2;\n\n        this.mainBeam = new ParticleSystem(renderer, {\n            duration: 2,\n            looping: false,\n            startLife: new IntervalValue(0.1, 0.3),\n            startSpeed: new IntervalValue(100, 300),\n            startSize: new IntervalValue(1.5, 12.5),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new IntervalValue(1, 1.6),\n            startSpeed: new IntervalValue(20, 45),\n            startSize: new IntervalValue(4, 8),\n            startColor: new ConstantColor(mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 8,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n        this.add(this.glowBeam.emitter);\n\n        this.smoke = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.8, 1.2),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new IntervalValue(10, 15),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 7.5,\n                arc: Math.PI,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColorOverLife(new ColorRange(mainColor, new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.addBehavior(new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n        this.add(this.smoke.emitter);\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 1.2),\n            startSpeed: new IntervalValue(40, 200),\n            startSize: new IntervalValue(1, 4),\n            startColor: new RandomColor(new Vector4(1,1,1,1), mainColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 12,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new SphereEmitter({\n                radius: 2,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.add(this.particles.emitter);\n\n        this.beam = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n\n            startLife: new ConstantValue(0.2),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(100),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 2,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.beam.emitter.renderOrder = -2;\n        this.beam.emitter.name = 'beam';\n        this.beam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.66666, 0.33333, 0), 0]])));\n        this.add(this.beam.emitter);\n\n        this.circle = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.circle.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle.emitter.renderOrder = 2;\n        this.circle.emitter.name = 'circle';\n        this.add(this.circle.emitter);\n\n\n        this.circle2 = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.4),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(40),\n            startColor: new ConstantColor(secColor),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 10,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.LocalSpaceBillBoard\n        });\n        this.circle2.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.3, 0.6, 0.9, 1), 0]])));\n        this.circle2.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(10, 13, 16, 19), 0]])));\n        this.circle2.emitter.renderOrder = 2;\n        this.circle2.emitter.name = 'circle';\n        this.circle2.emitter.rotation.x = Math.PI / 2;\n        this.add(this.circle2.emitter);\n    }\n\n    update(delta: number) {\n        //delta /= 1000;\n        this.beam.update(delta);\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.circle.update(delta);\n        this.smoke.update(delta);\n        this.particles.update(delta);\n        this.circle2.update(delta);\n    }\n}\n","import {\n    AdditiveBlending,\n    ConeBufferGeometry,\n    CylinderBufferGeometry,\n    Group,\n    NormalBlending,\n    TextureLoader,\n    Vector4\n} from \"three\";\nimport {ColorOverLife, ParticleSystem, PointEmitter, RenderMode, RotationOverLife} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {IntervalValue} from \"three.quarks\";\nimport {SizeOverLife} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {SphereEmitter} from \"three.quarks\";\nimport {FrameOverLife} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Bezier} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {TextureImage} from \"../components/ApplicationContext\";\n\nexport class EnergyRifleMuzzle extends Group {\n    private particles: ParticleSystem;\n    private glow: ParticleSystem;\n    private glowTop: ParticleSystem;\n    //private ringTop: ParticleSystem;\n    private ringBase: ParticleSystem;\n\n    constructor(textures: TextureImage[]) {\n        super();\n\n        let texture = textures[1].texture;\n\n        this.particles = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.2, 0.6),\n            startSpeed: new IntervalValue(20, 50),\n            startSize: new ConstantValue(2),\n            startColor: new ConstantColor(new Vector4(0.5, 0.5, 0.5, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 24,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({angle: .2, radius: 5}),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.StretchedBillBoard,\n            speedFactor: 0.1,\n        });\n        this.particles.emitter.renderOrder = 0;\n        this.particles.emitter.name = 'particles';\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.particles.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0.8, 1, 1))));\n        this.add(this.particles.emitter);\n\n        let glow = {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(60, 80),\n            startColor: new ConstantColor(new Vector4(0, 0.3, 0.3, 1)),\n            worldSpace: false,\n\n            maxParticle: 5,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        };\n\n        this.glow = new ParticleSystem(glow);\n        this.glow.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1))));\n        //this.glow.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glow.emitter.renderOrder = -2;\n        this.glow.emitter.name = 'glow';\n        this.glow.emitter.position.x = 1;\n        this.add(this.glow.emitter);\n\n        this.glowTop = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0, 50),\n            startSize: new IntervalValue(40, 60),\n            startRotation: new ConstantValue(0),\n            startColor: new ConstantColor(new Vector4(0, 0.2, 0.2, 1)),\n            worldSpace: false,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({angle: .01, radius: 1}),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.glowTop.emitter.renderOrder = -2;\n        this.glowTop.emitter.name = 'glowTop';\n        this.glowTop.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)), 0],\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1)), 0.5],\n        ])));\n        //this.glowTop.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.add(this.glowTop.emitter);\n\n        /*\n        this.ringTop = new ParticleSystem(renderer, {\n            duration: 2.5,\n            looping: false,\n            startLife: new IntervalValue(0.6, 0.8),\n            startSpeed: new IntervalValue(0.1, 3),\n            startSize: new IntervalValue(0.75, 1.5),\n            startRotation: new IntervalValue(-Math.PI, Math.PI),\n            startColor: new RandomColor(new Vector4(0.6323, 0.6323, 0.6323, .31), new Vector4(1, 1, 1, 0.54)),\n            worldSpace: true,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 5,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new ConeEmitter({\n                angle: 20 * Math.PI / 180,\n                radius: 0.3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 81,\n            uTileCount: 10,\n            vTileCount: 10,\n            renderMode: RenderMode.BillBoard\n        });\n        this.ringTop.addBehavior(new ColorOverLife(new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 0))));\n        this.ringTop.addBehavior(new RotationOverLife(new IntervalValue(- Math.PI / 4, Math.PI / 4)));\n        this.ringTop.addBehavior(new FrameOverLife(new PiecewiseBezier([[new Bezier(28, 31, 34, 37), 0]])));\n        this.ringTop.emitter.renderOrder = -2;\n        this.ringTop.emitter.name = 'smoke';\n        this.ringTop.emitter.rotation.y = Math.PI / 2;\n        this.add(this.ringTop.emitter);\n*/\n        let coneBufferGeometry = new CylinderBufferGeometry(10, 6, 4, 16, 1, true);\n        coneBufferGeometry.rotateX(Math.PI / 2);\n        /*console.log(coneBufferGeometry.getIndex()!.array);\n        console.log(coneBufferGeometry.getAttribute('position').array);\n        console.log(coneBufferGeometry.getAttribute('uv').array);*/\n\n\n        this.ringBase = new ParticleSystem(renderer, {\n            duration: 1,\n            looping: false,\n            startLife: new ConstantValue(0.8),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(0, 1, 1, 1)),\n            worldSpace: false,\n\n            maxParticle: 10,\n            emissionOverTime: new ConstantValue(0),\n            emissionBursts: [{\n                time: 0,\n                count: 1,\n                cycle: 1,\n                interval: 0.01,\n                probability: 1,\n            }],\n\n            shape: new PointEmitter(),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 91,\n            uTileCount: 10,\n            vTileCount: 10,\n            instancingGeometry: coneBufferGeometry,\n            renderMode: RenderMode.LocalSpaceBillBoard,\n        });\n        this.ringBase.addBehavior(new ColorOverLife(new Gradient([\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(1, 1, 1, 1)), 0],\n            [new ColorRange(new Vector4(1, 1, 1, 1), new Vector4(0, 0, 0, 1)), 0.5],\n        ])));\n        this.ringBase.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(0.5, 0.75, 0.95, 1), 0]])));\n        this.ringBase.emitter.renderOrder = 1;\n        this.ringBase.emitter.name = 'ringBase';\n        //this.ringBase.emitter.rotation.y = Math.PI / 2;\n        this.add(this.ringBase.emitter);\n    }\n\n    update(delta: number) {\n        //this.ringTop.update(delta);\n        this.ringBase.update(delta);\n        this.glowTop.update(delta);\n        this.glow.update(delta);\n        this.particles.update(delta);\n    }\n}\n","import * as React from \"react\";\nimport * as THREE from \"three\";\nimport {Object3D, Scene, Texture} from \"three\";\nimport {ParticleEmitter, QuarksLoader} from \"three.quarks\";\nimport {Application} from \"./Application\";\nimport {TextureLoader} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ConeEmitter} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {ConstantColor} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {AdditiveBlending} from \"three\";\nimport {Mesh} from \"three\";\nimport {BoxBufferGeometry} from \"three\";\nimport {MeshStandardMaterial} from \"three\";\nimport {ToonProjectile} from \"../example/ToonProjectile\";\nimport {Color} from \"three\";\nimport {AxesHelper} from \"three\";\nimport {PointLight} from \"three\";\nimport {AmbientLight} from \"three\";\nimport {BulletMuzzle} from \"../example/BulletMuzzle\";\nimport {BulletProjectile} from \"../example/BulletProjectile\";\nimport {BulletHit} from \"../example/BulletHit\";\nimport {ToonExplosion} from \"../example/ToonExplosion\";\nimport {Explosion} from \"../example/Explosion\";\nimport {LevelUp} from \"../example/LevelUp\";\nimport {PickUp} from \"../example/PickUp\";\nimport {ShipSmoke} from \"../example/ShipSmoke\";\nimport {ElectricBall} from \"../example/ElectricBall\";\nimport {ShipTrail} from \"../example/ShipTrail\";\nimport {Explosion2} from \"../example/Explosion2\";\nimport {EnergyRifleMuzzle} from \"../example/EnergyRifleMuzzle\";\n\n\nexport interface TextureImage {\n    img: string,\n    texture: Texture,\n}\n\nexport interface AppContext {\n    scene: THREE.Scene;\n    script: (delta: number) => void;\n    selection: Array<Object3D>;\n    textures: Array<TextureImage>;\n    actions: {\n        onOpenDemo: (index: number)=>void;\n        onSaveAs: ()=>void;\n        onImport: (files: FileList)=>void;\n        select: (object: Object3D) => void;\n        selectAddition: (object: Object3D) => void;\n        addObject3d: (type: string, parent: Object3D) => void;\n        removeObject3d: (object: Object3D) => void;\n        duplicateObject3d: (object: Object3D) => void;\n        updateParticleSystem: (object: ParticleEmitter) => void;\n        addTexture: (textureImage: TextureImage) => void;\n        updateProperties: () => void;\n    }\n}\n\nconst ApplicationContext = React.createContext<AppContext | null>(null);\n\nexport const ApplicationContextConsumer = ApplicationContext.Consumer;\n\nexport class ApplicationContextProvider extends React.Component<{ }, AppContext> {\n\n    createScene(demoIndex: number) {\n        const scene = new THREE.Scene();\n\n        scene.background = new Color(0x666666);\n\n        let demoObject;\n        if (demoIndex === 0) {\n            demoObject = new ToonProjectile(this.state.textures);\n            demoObject.name = \"Toon Projectile\";\n        } else if (demoIndex === 1) {\n            demoObject = new BulletMuzzle(this.state.textures);\n            demoObject.name = \"BulletMuzzle\";\n        } else if (demoIndex === 2) {\n            demoObject = new BulletProjectile();\n            demoObject.name = \"BulletProjectile\";\n        } else if (demoIndex === 3) {\n            demoObject = new ShipSmoke(this.state.textures);\n            demoObject.name = \"shipSmoke\";\n        } else if (demoIndex === 4) {\n            demoObject = new ToonExplosion(this.state.textures);\n            demoObject.name = \"ToonExplosion\";\n        } else if (demoIndex === 5) {\n            demoObject = new Explosion(this.state.textures);\n            demoObject.name = \"Explosion\";\n        } else if (demoIndex === 6) {\n            demoObject = new LevelUp(this.state.textures);\n            demoObject.name = \"LevelUp\";\n        } else if (demoIndex === 7) {\n            demoObject = new EnergyRifleMuzzle(this.state.textures);\n            demoObject.name = \"EnergyRifleMuzzle\";\n        } else if (demoIndex == 8) {\n            demoObject = new ElectricBall(this.state.textures);\n            demoObject.name = \"ElectricBall\";\n        } else if (demoIndex == 9){\n            demoObject = new ShipTrail(this.state.textures);\n            demoObject.name = \"ShipTrail\";\n        } else if (demoIndex == 10) {\n            demoObject = new Explosion2(this.state.textures);\n            demoObject.name = \"Explosion2\";\n        }\n        if (demoObject)\n            scene.add(demoObject);\n\n        const axisHelper = new AxesHelper(100);\n        axisHelper.name = \"axisHelper\";\n        scene.add(axisHelper);\n\n        const light = new PointLight(new Color(1, 1, 1), 0.8, 200);\n        light.position.set(50, 50, 50);\n        scene.add(light);\n\n        const ambientLight = new AmbientLight(new Color(1, 1, 1), 0.2);\n        scene.add(ambientLight);\n\n        return scene;\n    }\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        const texture1 = new TextureLoader().load(\"textures/texture1.png\");\n        texture1.name = \"textures/texture1.png\";\n        const texture2 = new TextureLoader().load(\"textures/texture2.png\");\n        texture2.name = \"textures/texture2.png\";\n\n        const state: AppContext = {\n            scene: this.createScene(-1),\n            script: this.animate,\n            selection: [],\n            textures: [\n                {img: './textures/texture1.png', texture: texture1},\n                {img: './textures/texture2.png', texture: texture2},\n            ],\n            actions: {\n                onOpenDemo: (index: number) => {\n                    const scene = this.createScene(index);\n                    this.setState({scene: scene});\n                },\n                onSaveAs: () => {\n                    const a = document.createElement(\"a\");\n                    const file = new Blob([JSON.stringify(this.state.scene.toJSON())], {type: \"application/json\"});\n                    a.href = URL.createObjectURL(file);\n                    a.download = \"scene.json\";\n                    a.click();\n                },\n                onImport: (files: FileList) => {\n                    const nFiles = files.length;\n                    for (let nFileId = 0; nFileId < nFiles; nFileId++) {\n                        const jsonURL = URL.createObjectURL( files[nFileId] );\n\n                        const loader = new QuarksLoader();\n                        loader.setCrossOrigin(\"\");\n                        loader.load(jsonURL, (object3D: Object3D)=>{\n                            this.state.scene.add(object3D);\n                        }, ()=>{}, ()=>{});\n                    }\n                },\n                select: object => {\n                    this.setState({selection: [object]});\n                },\n                selectAddition: object => {\n                    if (this.state.selection.indexOf(object) === -1) {\n                        this.state.selection.push(object);\n                        this.setState({selection: this.state.selection});\n                    }\n                },\n                addObject3d: this.addObject3d,\n                removeObject3d: this.removeObject3d,\n                duplicateObject3d: this.duplicateObject3d,\n                updateParticleSystem: () => {\n                },\n                updateProperties: () => {\n                    this.setState({scene: this.state.scene});\n                },\n                addTexture: (textureImage: TextureImage) => {\n                    this.state.textures.push(textureImage);\n                    this.setState({textures: this.state.textures});\n                }\n            }\n        };\n\n        this.state = state;\n    }\n\n    removeObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.remove(object3D);\n        }\n    };\n\n    duplicateObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.add(object3D.clone());\n        }\n    }\n\n    addObject3d = (type: string, parent: Object3D) => {\n        let object;\n        switch (type) {\n            case 'particle':\n                const texture = this.state.textures[0].texture;\n                const particleSystem = new ParticleSystem(renderer, {\n                    maxParticle: 10000,\n                    shape: new ConeEmitter(),\n                    emissionOverTime: new ConstantValue(100),\n                    startLife: new ConstantValue(30),\n                    startSpeed: new ConstantValue(10),\n                    startSize: new ConstantValue(1),\n                    startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n                    texture: texture,\n                    blending: AdditiveBlending,\n                    startTileIndex: 0,\n                    uTileCount: 10,\n                    vTileCount: 10,\n                    worldSpace: true,\n                });\n                object = particleSystem.emitter;\n                this.state.scene.add(object);\n                break;\n            case 'box':\n                object = new Mesh(new BoxBufferGeometry(10, 10, 10), new MeshStandardMaterial({color: 0xcccccc}));\n                this.state.scene.add(object);\n                break;\n        }\n        if (object) {\n            parent.add(object);\n            this.state.actions.select(object);\n            this.setState({});\n        }\n    };\n\n\n    update = 0;\n    animate = (delta: number) => {\n        /*this.toonProjectile!.position.x += delta * 30;\n        if (this.toonProjectile!.position.x > 20)\n            this.toonProjectile!.position.x = -20;*/\n\n        this.update += delta;\n        if (this.update > 0.1) {\n            this.state.actions.updateProperties();\n            this.update = 0;\n        }\n    };\n\n    render() {\n        //console.log( \"rendering ApplicationContext \");\n        return (\n            <ApplicationContext.Provider value={this.state}>\n                {this.props.children}\n            </ApplicationContext.Provider>\n        )\n    }\n}\n/*\n        this.particleSystem = new ParticleSystem(renderer, {\n            maxParticle: 10000,\n            shape: new ConeEmitter(),\n            emissionOverTime: new ConstantValue(100),\n            startLife: new ConstantValue(30),\n            startSpeed: new ConstantValue(10),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(1,1,1, 1)),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            worldSpace: true,\n        });*/\n//this.particleSystem.emitter.position.set(10, 0, 0);\n//scene.add(this.particleSystem.emitter);","import * as React from \"react\";\nimport Stats from \"stats.js\";\nimport {WEBGL} from \"../WebGL\";\nimport {\n    PerspectiveCamera,\n    WebGLRenderer,\n    Clock,\n} from \"three\";\nimport {RefObject} from \"react\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\n\ninterface ThreejsViewportProps {\n    width: number;\n    height: number;\n}\n\nexport class ThreejsViewport extends React.PureComponent<ThreejsViewportProps> {\n    container: RefObject<HTMLDivElement>;\n    stats?: Stats;\n    camera?: PerspectiveCamera;\n    renderer?: WebGLRenderer;\n    private clock?: Clock;\n    private controls?: OrbitControls;\n\n    private appContext?: AppContext;\n\n    constructor(props: Readonly<ThreejsViewportProps>) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    componentDidMount(): void {\n        if ( this.init() ) {\n            this.animate();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ThreejsViewportProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        this.camera!.aspect = this.props.width / this.props.height;\n        this.camera!.updateProjectionMatrix();\n        this.renderer!.setSize( this.props.width, this.props.height );\n    }\n\n    init() {\n        if (!this.container.current) {\n            return false;\n        }\n\n        if ( !WEBGL.isWebGLAvailable() ) {\n            document.body.appendChild( WEBGL.getWebGLErrorMessage() );\n            return false;\n        }\n\n        this.renderer = new WebGLRenderer();\n\n        /*if ( this.renderer.extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n            document.getElementById( 'notSupported' )!.style.display = '';\n            return false;\n        }*/\n\n        const width = this.props.width;\n        const height = this.props.height;\n\n        this.clock = new Clock();\n\n        this.camera = new PerspectiveCamera( 50, width / height, 1, 1000 );\n        this.camera.position.set(50, 50, 50);\n\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.controls.enableKeys = false;\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.1;\n        this.controls.rotateSpeed = 0.2;\n        this.controls.update();\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( width, height );\n        this.container.current!.appendChild( this.renderer.domElement );\n\n        this.stats = new Stats();\n        this.stats.dom.style.position = \"absolute\";\n        this.stats.dom.style.left = \"\";\n        this.stats.dom.style.right = \"0\";\n        this.container.current!.appendChild( this.stats.dom );\n\n        //window.addEventListener( 'resize', this.onWindowResize, false );\n\n        this.onResize(null);\n\n        return true;\n\n    }\n\n    onResize = (event: any ) => {\n\n        if (this.renderer!.domElement.parentElement!.clientWidth - 10 !== this.renderer!.domElement.width ||\n            this.renderer!.domElement.parentElement!.clientHeight - 10 !== this.renderer!.domElement.height) {\n\n            const newWidth = this.renderer!.domElement.parentElement!.clientWidth - 10;\n            const newHeight = this.renderer!.domElement.parentElement!.clientHeight - 10;\n\n            this.camera!.aspect = newWidth / newHeight;\n            this.camera!.updateProjectionMatrix();\n            this.renderer!.domElement.style.width = '100%';\n            this.renderer!.domElement.style.height = '100%';\n            this.renderer!.setSize(newWidth, newHeight);\n        }\n    };\n\n    animate = () => {\n        requestAnimationFrame( this.animate );\n\n        this.onResize(null);\n        this.renderScene();\n        this.stats!.update();\n    };\n\n    renderScene() {\n        if (this.appContext) {\n            this.controls!.update();\n            const delta = this.clock!.getDelta();\n            //console.log(delta);\n            //let time = performance.now() * 0.0005;\n            //this.particleSystem!.update(this.clock!.getDelta());\n            this.appContext.script(delta);\n            //this.particleSystem!.emitter.rotation.y = this.clock!.getElapsedTime();\n            //this.particleSystem!.emitter.position.set(Math.cos(this.clock!.getElapsedTime()) * 20, 0, Math.sin(this.clock!.getElapsedTime()) * 20);\n            //console.log(this.particleSystem!.emitter.modelViewMatrix);\n\n            this.appContext.scene.traverse(object => {\n                if (object.userData && object.userData.func) {\n                    object.userData.func.call(object, delta);\n                }\n                if (object instanceof ParticleEmitter) {\n                    /*if (object.name === 'muzzle1' && object.system.particleNum > 0) {\n                        console.log(object.system.particles);\n                    }*/\n                    object.system.update(delta);\n                }\n            });\n\n            this.renderer!.render(this.appContext.scene, this.camera!);\n        }\n    }\n\n    render() {\n        console.log( \"rendering ThreejsViewPort\");\n        return (\n        <ApplicationContextConsumer>\n            { context => {\n                    if (context) {\n                        this.appContext = context;\n                        return <div ref={this.container} style={{width: '100%', height: '100%'}}></div>;\n                    }\n                }\n            }\n        </ApplicationContextConsumer>);\n    }\n}\n","import * as React from 'react';\nimport \"./NumberInput.scss\";\n\ninterface NumberInputProps{\n    value: number;\n    onChange: (value: number)=>void;\n}\n\nexport const NumberInput : React.FC<NumberInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value + '');\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        const x = parseFloat(inputValue);\n        if (x !== props.value)\n            props.onChange(x);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value + '') {\n            setInputValue(props.value + '');\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            const x = parseFloat(inputValue);\n            if (x !== props.value)\n                props.onChange(x);\n        }\n    };\n\n    return <input className=\"number-input\" value={focus? inputValue: props.value} size={5}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {NumberInput} from \"./NumberInput\";\n\ninterface Vector3Props {\n    name: string;\n    x: number;\n    y: number;\n    z: number;\n    onChange: (x: number, y: number, z: number)=>void;\n    unitConversion?: number;\n}\n\nexport class Vector3Editor extends React.PureComponent<Vector3Props> {\n    render() {\n        console.log('rendered Vector3');\n        const {x, y, z, unitConversion = 1, onChange, name} = this.props;\n        return(<div className=\"property\">\n                <label className=\"name\">{name}</label>\n                <label>X:</label><NumberInput value={x * unitConversion} onChange={value => {onChange(value / unitConversion, y, z)}}/>\n                <label>Y:</label><NumberInput value={y * unitConversion} onChange={value => {onChange(x, value / unitConversion, z)}}/>\n                <label>Z:</label><NumberInput value={z * unitConversion} onChange={value => {onChange(x, y, value / unitConversion)}}/>\n            </div>\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringInputProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const StringInput : React.FC<StringInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return <input className=\"string-input\" value={focus? inputValue: props.value} size={20}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\n\n\ninterface ObjectPropertiesProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ObjectPropertiesState {\n\n}\n\nexport class ObjectProperties extends React.PureComponent<ObjectPropertiesProps, ObjectPropertiesState> {\n    constructor(props: Readonly<ObjectPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeName = (name: string) => {\n        this.props.object3d.name = name;\n        this.props.updateProperties();\n    };\n    onChangePosition = (x: number, y: number, z: number) => {\n        this.props.object3d.position.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeScale = (x: number, y: number, z: number) => {\n        this.props.object3d.scale.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeRotation = (x: number, y: number, z: number) => {\n        this.props.object3d.rotation.set(x, y, z);\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Name:</label>\n                            <StringInput value={this.props.object3d.name} onChange={this.onChangeName}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Position\" x={this.props.object3d.position.x}\n                                       y={this.props.object3d.position.y} z={this.props.object3d.position.z}\n                                       onChange={this.onChangePosition}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Rotation\" x={this.props.object3d.rotation.x}\n                                       y={this.props.object3d.rotation.y} z={this.props.object3d.rotation.z}\n                                       onChange={this.onChangeRotation} unitConversion={180 / Math.PI}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Scale\" x={this.props.object3d.scale.x}\n                                       y={this.props.object3d.scale.y} z={this.props.object3d.scale.z}\n                                       onChange={this.onChangeScale}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport {ColorResult, SketchPicker} from \"react-color\";\nimport {Vector4} from \"three\";\nimport \"./ColorEditor.scss\";\n\ninterface ColorEditorProps {\n    color: Vector4;\n    onChange: (color: Vector4) => void;\n}\n\nfunction ConvertToColor(color: Vector4) {\n    return `rgba(${((color.x * 255) | 0)},${((color.y * 255) | 0)},${((color.z * 255) | 0)},${color.w})`;\n}\n\nexport const ColorEditor: React.FC<ColorEditorProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const togglePicker = () => {\n        setOpen(!open);\n    };\n\n    const closePicker = () => {\n        setOpen(false);\n    };\n\n    const colorChange = (colorResult: ColorResult) => {\n        const color = new Vector4();\n        color.x = Math.min(255, colorResult.rgb.r) / 255;\n        color.y = Math.min(255, colorResult.rgb.g) / 255;\n        color.z = Math.min(255, colorResult.rgb.b) / 255;\n        color.w = colorResult.rgb.a!;\n        onChange(color);\n    };\n\n    const {color, onChange} = props;\n\n    return (\n        <div className=\"color-editor\">\n            <button style={{backgroundColor: ConvertToColor(color), height: '20px'}} onClick={togglePicker}/>\n            {ConvertToColor(color)}\n            {\n                open ? <div className=\"popover\">\n                    <div className=\"cover\" onClick={closePicker}/>\n                    <SketchPicker\n                        color={{\n                            r: ((color.x * 255) | 0),\n                            g: ((color.y * 255) | 0),\n                            b: ((color.z * 255) | 0),\n                            a: color.w\n                        }}\n                        onChange={colorChange}/>\n                </div> : null\n            }\n        </div>);\n};\n","import React from \"react\";\n\nfunction interp(a: number, b: number, x: number) {\n    return a * (1 - x) + b * x;\n}\n\nexport interface TransformProps {\n    xFrom: number;\n    yFrom: number;\n    xTo: number;\n    yTo: number;\n}\n\nexport class TransformComponent<T extends TransformProps = TransformProps, K = {}> extends React.Component<T, K> {\n\n    x = (value: number) => interp(this.props.xFrom, this.props.xTo, value);\n    y = (value: number) => interp(this.props.yFrom, this.props.yTo, value);\n\n    shouldComponentUpdate(nextProps: TransformProps) {\n        const { xFrom, yFrom, xTo, yTo } = this.props;\n        return (\n            nextProps.xFrom !== xFrom ||\n            nextProps.yFrom !== yFrom ||\n            nextProps.xTo !== xTo ||\n            nextProps.yTo !== yTo\n        );\n    }\n}","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\nimport {Bezier} from \"three.quarks\";\n\nexport interface CurveProps extends TransformProps {\n    curveColor: string;\n    curveWidth: number;\n    value: Bezier;\n}\n\nexport class CurveComponent extends TransformComponent<CurveProps> {\n    shouldComponentUpdate(nextProps: CurveProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const [p0, p1, p2, p3] = value.p;\n        return nextProps.curveColor !== curveColor ||\n            nextProps.curveWidth !== curveWidth ||\n            nextProps.value !== value;\n    }\n\n    render() {\n        const {\n            curveColor,\n            curveWidth,\n            value\n        } = this.props;\n        const {x, y} = this;\n\n        const segments = Math.floor((x(1) - x(0)) / 5);\n\n        let curve = `M${x(0)},${y(value.genValue(0))} `;\n        if (segments > 0) {\n            for (let i = 1 / segments; i <= 1; i += 1 / segments) {\n                curve += `L${x(i)},${y(value.genValue(i))} `;\n            }\n        }\n        curve += `L${x(1)},${y(value.genValue(1))} `;\n\n        return (<path\n            fill=\"none\"\n            stroke={curveColor}\n            strokeWidth={curveWidth}\n            d={curve} />);\n    }\n}\n","import React from \"react\";\nimport {TransformComponent, TransformProps} from \"./TransformComponent\";\n\ninterface HandleProps extends TransformProps {\n    handleRadius: number,\n    handleColor: string,\n    hover: boolean,\n    down: boolean,\n    background: string,\n    handleStroke: number,\n    xstart: number,\n    ystart: number,\n    xval: number,\n    yval: number,\n    onMouseEnter: (event: React.MouseEvent)=>void,\n    onMouseLeave: (event: React.MouseEvent)=>void,\n    onMouseDown: (event: React.MouseEvent)=>void,\n}\n\nexport class HandleComponent extends TransformComponent<HandleProps> {\n    shouldComponentUpdate(nextProps: HandleProps) {\n        if (super.shouldComponentUpdate(nextProps)) return true;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n        return nextProps.xstart !== xstart ||\n            nextProps.ystart !== ystart ||\n            nextProps.handleRadius !== handleRadius ||\n            nextProps.handleColor !== handleColor ||\n            nextProps.hover !== hover ||\n            nextProps.down !== down ||\n            nextProps.background !== background ||\n            nextProps.handleStroke !== handleStroke ||\n            nextProps.xval !== xval ||\n            nextProps.yval !== yval ||\n            nextProps.onMouseDown !== onMouseDown ||\n            nextProps.onMouseLeave !== onMouseLeave ||\n            nextProps.onMouseEnter !== onMouseEnter;\n    }\n\n    render() {\n        const { x, y } = this;\n        const {\n            xstart,\n            ystart,\n            handleRadius,\n            handleColor,\n            hover,\n            down,\n            background,\n            handleStroke,\n            xval,\n            yval,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseDown\n        } = this.props;\n\n        const sx = x(xstart);\n        const sy = y(ystart);\n        const cx = x(xval);\n        const cy = y(yval);\n        const a = Math.atan2(cy-sy, cx-sx);\n        const cxs = cx - handleRadius * Math.cos(a);\n        const cys = cy - handleRadius * Math.sin(a);\n\n        return <g>\n            <line\n                stroke={handleColor}\n                strokeWidth={hover||down ? 1 + handleStroke : handleStroke}\n                x1={cxs}\n                y1={cys}\n                x2={sx}\n                y2={sy} />\n            <circle\n                cx={cx}\n                cy={cy}\n                r={handleRadius}\n                stroke={handleColor}\n                strokeWidth={down ? 2 * handleStroke : handleStroke}\n                fill={down ? background: handleColor}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseDown={onMouseDown} />\n        </g>;\n    }\n}","import * as React from \"react\";\nimport {CurveComponent} from \"./CurveComponent\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {HandleComponent} from \"./HandleComponent\";\nimport {createRef} from \"react\";\n\ninterface BezierCurvesEditorProps {\n    value: PiecewiseBezier\n    onChange?: (value:PiecewiseBezier) => void,\n    width: number,\n    height: number,\n    padding?: Array<number>,\n    className?: string,\n    background?: string,\n    gridColor?: string,\n    curveColor?: string,\n    handleColor?: string,\n    curveWidth?: number,\n    handleRadius?: number,\n    handleStroke?: number,\n    readOnly?: boolean,\n    style?: React.CSSProperties,\n    pointers?: React.CSSProperties,\n    textStyle?: React.CSSProperties,\n}\n\ninterface BezierCurvesEditorState {\n    curve: number,\n    hover: number,\n    down: number,\n}\n\nexport class BezierCurvesEditor extends React.PureComponent<BezierCurvesEditorProps, BezierCurvesEditorState> {\n\n\n    static defaultP = {\n        padding: [0, 0, 0, 0],\n        handleRadius: 4,\n    }; //[25, 5, 25, 18]\n\n    constructor(props: Readonly<BezierCurvesEditorProps>) {\n        super(props);\n        this.state = {\n            curve: -1,\n            down: -1,\n            hover: -1,\n        };\n    }\n\n    rootRef = createRef<HTMLDivElement>();\n\n    positionForEvent = (e: React.MouseEvent) => {\n        if (this.rootRef.current) {\n            const rect = this.rootRef.current.getBoundingClientRect();\n            return [e.clientX - rect.left, e.clientY - rect.top];\n        } else {\n            return [0, 0];\n        }\n    };\n\n    x = (value:number) => {\n    };\n\n    y = (value:number) => {\n    };\n\n    inversex = (x:number) => {\n    };\n\n    inversey = (y:number) => {\n    };\n\n    onDownLeave = (e: React.MouseEvent) => {\n        if (this.state.down) {\n            this.onDownMove(e);\n            this.setState({\n                down: -1,\n                hover: -1\n            });\n        }\n    };\n    onDownMove = (e: React.MouseEvent) => {\n        if (this.state.down >= 0) {\n            e.preventDefault();\n            const [x, y] = this.positionForEvent(e);\n            const value = new PiecewiseBezier(this.props.value.functions);\n\n            const valueX = x / this.props.width;\n            const curveIndex = this.state.curve;\n            const curve = value.getFunction(curveIndex);\n\n            if (this.state.down === 0) {\n                const old = curve.p[0];\n                curve.p[0] = (this.props.height - y) / this.props.height;\n                curve.p[1] += curve.p[0] - old;\n                value.setStartX(curveIndex, x / this.props.width);\n                if (curveIndex - 1 >= 0) {\n                    const pCurve = value.getFunction(curveIndex - 1);\n                    pCurve.p[3] = (this.props.height - y) / this.props.height;\n                    pCurve.p[2] += curve.p[0] - old;\n                    value.setFunction(curveIndex - 1, value.getFunction(curveIndex - 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 3) {\n                const old = curve.p[3];\n                curve.p[3] = (this.props.height - y) / this.props.height;\n                curve.p[2] += curve.p[3] - old;\n                value.setEndX(curveIndex, x / this.props.width);\n                if (curveIndex + 1 < value.numOfFunctions) {\n                    const nCurve = value.getFunction(curveIndex + 1);\n                    nCurve.p[0] = (this.props.height - y) / this.props.height;\n                    nCurve.p[1] += curve.p[3] - old;\n                    value.setFunction(curveIndex + 1, value.getFunction(curveIndex + 1).clone());\n                }\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 1) {\n                curve.p[1] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            if (this.state.down === 2) {\n                curve.p[2] = (this.props.height - y) / this.props.height;\n                value.setFunction(curveIndex, curve.clone());\n            }\n            //value[i] = this.inversex(x);\n            //value[i + 1] = this.inversey(y);\n            if (this.props.onChange)\n                this.props.onChange(value);\n        }\n    };\n\n    onDownUp = () => {\n        // this.onDownMove(e);\n        this.setState({\n            down: -1,\n        });\n    };\n\n\n    onEnterHandle(curve: number, h: number) {\n        if (!this.state.down) {\n            this.setState({\n                hover: h,\n                curve: curve,\n            });\n        }\n    }\n    onDownHandle(curve: number, h: number, e: React.MouseEvent) {\n        e.preventDefault();\n        this.setState({\n            hover: -1,\n            down: h,\n            curve: curve,\n        });\n    }\n\n    onLeaveHandle() {\n        if (!this.state.down) {\n            this.setState({\n                hover: -1,\n            });\n        }\n    }\n\n    render() {\n\n        const {\n            width,\n            height,\n            value,\n            curveWidth = 1,\n            curveColor = \"#000\",\n            handleRadius = BezierCurvesEditor.defaultP.handleRadius,\n            handleColor = \"#f00\",\n            handleStroke = 1,\n            background = \"#fff\",\n        } = this.props;\n\n        const {\n            curve: curveIndex,\n            down,\n            hover\n        } = this.state;\n\n        const curves = [];\n        for (let i = 0; i < value.numOfFunctions; i ++) {\n            const x1 = value.getStartX(i);\n            const x2 = value.getEndX(i);\n            const curve = value.getFunction(i);\n            const slope0 = curve.getSlope(0);\n            const slope1 = curve.getSlope(1);\n\n            curves.push(\n                <g key={i}>\n                    <CurveComponent xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        curveColor={curveColor} curveWidth={curveWidth} value={curve}/>\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 0, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 0)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={0}\n                        yval={curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 0}\n                        hover={curveIndex === i && hover === 0}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 1, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 1)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={0}\n                        ystart={curve.p[0]}\n                        xval={1.0 / 3}\n                        yval={1.0 / 3 * slope0 + curve.p[0]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 1}\n                        hover={curveIndex === i && hover === 1}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 2, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 2)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1 - 1.0 / 3}\n                        yval={curve.p[3] - 1.0 / 3 * slope1}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 2}\n                        hover={curveIndex === i && hover === 2}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                    <HandleComponent\n                        xFrom={x1 * width} xTo={x2 * width} yFrom={height} yTo={0}\n                        onMouseDown={(e)=>this.onDownHandle(i, 3, e)}\n                        onMouseEnter={(e)=>this.onEnterHandle(i, 3)}\n                        onMouseLeave={(e)=>this.onLeaveHandle()}\n                        xstart={1}\n                        ystart={curve.p[3]}\n                        xval={1}\n                        yval={curve.p[3]}\n                        handleRadius={handleRadius}\n                        handleColor={handleColor}\n                        down={curveIndex === i && down === 3}\n                        hover={curveIndex === i && hover === 3}\n                        handleStroke={handleStroke}\n                        background={background}\n                    />\n                </g>);\n        }\n        return <div ref={this.rootRef}\n                    onMouseMove={this.onDownMove}\n                    onMouseUp={this.onDownUp}\n                    onMouseLeave={this.onDownLeave}>\n            <svg width={width} height={height}>\n                {curves}\n            </svg>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {ConstantValue} from \"three.quarks\";\nimport {Vector4} from \"three\";\nimport {IntervalValue} from \"three.quarks\";\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {ColorRange} from \"three.quarks\";\nimport {RandomColor} from \"three.quarks\";\nimport {Gradient} from \"three.quarks\";\nimport {NumberInput} from \"./NumberInput\";\nimport {ColorEditor} from \"./ColorEditor\";\nimport \"./GeneratorEditor.scss\";\nimport {BezierCurvesEditor} from \"./bezier/BezierCurvesEditor\";\n\ntype EditorType =\n    'constant'\n    | 'intervalValue'\n    | 'piecewiseBezier'\n    | 'color'\n    | 'randomColor'\n    | 'colorRange'\n    | 'gradient';\nexport type ValueType = 'value' | 'functionValue' | 'color' | 'functionColor';\n\nconst ValueToEditor: { [a: string]: Array<EditorType> } = {\n    'value': ['constant', 'intervalValue'],\n    'functionValue': ['piecewiseBezier'],\n    'color': ['color', 'randomColor'],\n    'functionColor': ['colorRange', 'gradient'],\n};\n\nexport type GenericGenerator = ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator;\n\ninterface GeneratorEditorProps {\n    allowedType: Array<ValueType>;\n    name: string;\n    generator: GenericGenerator;\n    updateGenerator: (generator: GenericGenerator) => void;\n}\n\ninterface GeneratorEditorState {\n    open: boolean;\n}\n\nexport class GeneratorEditor extends React.PureComponent<GeneratorEditorProps, GeneratorEditorState> {\n\n    constructor(props: Readonly<GeneratorEditorProps>) {\n        super(props);\n        const currentEditor = ValueToEditor[props.allowedType[0]][0];\n        this.state = {\n            open: false,\n        }\n    }\n    changeEditor = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const editorType = e.target.value;\n        let generator: GenericGenerator | null = null;\n        switch(editorType) {\n            case \"constant\":\n                generator = new ConstantValue(0);\n                break;\n            case \"color\":\n                generator = new ConstantColor(new Vector4(1,1,1,1));\n                break;\n            case \"intervalValue\":\n                generator = new IntervalValue(0, 1);\n                break;\n            case \"colorRange\":\n                generator = new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"randomColor\":\n                generator = new RandomColor(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"piecewiseBezier\":\n                generator = new PiecewiseBezier();\n                break;\n        }\n        if (generator)\n            this.props.updateGenerator(generator);\n    }\n\n    changeValue = (x: number) => {\n        this.props.updateGenerator(new ConstantValue(x));\n    };\n\n    changeColor = (x: Vector4) => {\n        this.props.updateGenerator(new ConstantColor(x));\n    };\n\n    changeValueA = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(x, interval.b));\n    };\n\n    changeValueB = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(interval.a, x));\n    };\n\n    changeColorRangeA = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(x, colorRange.b));\n    };\n    changeColorRangeB = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(colorRange.a, x));\n    };\n    changeRandomColorA = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(x, randomColor.b));\n    };\n    changeRandomColorB = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(randomColor.a, x));\n    };\n\n    changeCurve = (x: PiecewiseBezier) => {\n        this.props.updateGenerator(new PiecewiseBezier(x.functions));\n    }\n\n    getEditorType(generator: GenericGenerator): EditorType {\n        if (generator instanceof ConstantValue) {\n            return 'constant';\n        } else if (generator instanceof IntervalValue) {\n            return 'intervalValue';\n        } else if (generator instanceof PiecewiseBezier) {\n            return 'piecewiseBezier';\n        } else if (generator instanceof ConstantColor) {\n            return 'color';\n        } else if (generator instanceof RandomColor) {\n            return 'randomColor';\n        } else if (generator instanceof ColorRange) {\n            return 'colorRange';\n        } else if (generator instanceof Gradient) {\n            return 'gradient';\n        }\n        return 'constant';\n    }\n\n    render() {\n        //console.log('render GeneratorEditor');\n        const {name, generator, allowedType} = this.props;\n\n        const editorTypes = [];\n        for (const valueType of allowedType) {\n            for (const editorType of ValueToEditor[valueType]) {\n                editorTypes.push(editorType);\n            }\n        }\n\n        const currentEditor = this.getEditorType(generator);\n        //console.log(currentEditor);\n\n        let editor;\n        switch (currentEditor) {\n            case \"constant\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as ConstantValue).value}\n                                 onChange={this.changeValue}/></React.Fragment>;\n                break;\n            case \"color\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ConstantColor).color} onChange={this.changeColor}/>\n                </React.Fragment>);\n                break;\n            case \"intervalValue\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as IntervalValue).a}\n                                 onChange={this.changeValueA}/>-<NumberInput\n                    value={(generator as IntervalValue).b} onChange={this.changeValueB}/></React.Fragment>;\n                break;\n            case \"piecewiseBezier\":\n                editor = <React.Fragment>\n                    <BezierCurvesEditor height={40} width={240} value={(generator as PiecewiseBezier)} onChange={this.changeCurve}/>\n                </React.Fragment>;\n                break;\n            case \"colorRange\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ColorRange).a} onChange={this.changeColorRangeA}/>-\n                    <ColorEditor color={(generator as ColorRange).b} onChange={this.changeColorRangeB}/>\n                </React.Fragment>);\n                break;\n            case \"randomColor\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as RandomColor).a} onChange={this.changeRandomColorA}/>-\n                    <ColorEditor color={(generator as RandomColor).b} onChange={this.changeRandomColorB}/>\n                </React.Fragment>);\n                break;\n        }\n        return <div className=\"property\">\n            <label className=\"name\">{name}</label>\n            {editor}\n            <select className=\"editor-select\" onChange={this.changeEditor} value={currentEditor}>\n                {editorTypes.map(editorType => <option key={editorType} value={editorType}>{editorType}</option>)}\n            </select>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\n\ninterface ParticleSystemPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface ParticleSystemPropertiesState {\n\n}\n\nexport class ParticleSystemProperties extends React.PureComponent<ParticleSystemPropertiesProps, ParticleSystemPropertiesState> {\n    constructor(props: Readonly<ParticleSystemPropertiesProps>) {\n        super(props);\n    }\n    onChangeStartSpeed = (g: GenericGenerator) => {\n        console.log(\"change start speed\");\n        this.props.particleSystem.startSpeed = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartLife = (g: GenericGenerator) => {\n        console.log(\"change start life\");\n        this.props.particleSystem.startLife = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartSize = (g: GenericGenerator) => {\n        console.log(\"change start size\");\n        this.props.particleSystem.startSize = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartColor = (g: GenericGenerator) => {\n        console.log(\"change start color\");\n        this.props.particleSystem.startColor = g as ColorGenerator | FunctionColorGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeStartRotation = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.startRotation = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeEmissionOverTime = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.emissionOverTime = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        const valueFunctionTypes = ['value', 'functionValue'] as Array<ValueType>;\n        const colorValueFunctionTypes = ['color', 'functionColor'] as Array<ValueType>;\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Life\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startLife}\n                                         updateGenerator={this.onChangeStartLife}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Size\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSize}\n                                         updateGenerator={this.onChangeStartSize}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Speed\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSpeed}\n                                         updateGenerator={this.onChangeStartSpeed}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Color\"\n                                         allowedType={colorValueFunctionTypes}\n                                         generator={this.props.particleSystem.startColor}\n                                         updateGenerator={this.onChangeStartColor}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Rotation\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startRotation}\n                                         updateGenerator={this.OnChangeStartRotation}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Emission Over Time\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.emissionOverTime}\n                                         updateGenerator={this.OnChangeEmissionOverTime}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\n\ninterface FileInputProps {\n    onChange: (files: FileList) => void;\n}\n\nexport class FileInput extends React.Component<FileInputProps>\n{\n    constructor(props: any)\n    {\n        super(props);\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onChange(e.target.files);\n    };\n\n    render ()\n    {\n        return <div>\n            <input\n                accept=\"image/*\"\n                type=\"file\"\n                id=\"contained-button-file\"\n                style={{display: 'none'}}\n                onChange={this.handleChange} />\n            <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload\n                </Button>\n            </label>\n        </div>;\n    }\n}","\nimport { Theme, createStyles, makeStyles, withStyles, WithStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {Button, Dialog, GridList, GridListTile, GridListTileBar} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Texture} from \"three\";\nimport {TextureImage} from \"./ApplicationContext\";\nimport {FileInput} from \"./editors/FileInput\";\nimport \"./TexturePicker.scss\";\n\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[500],\n        },\n    });\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            width: 500,\n            height: 450,\n        },\n    }),\n);\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n    id: string;\n    children: React.ReactNode;\n    onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport interface TexturePickerProps {\n    textures: Array<TextureImage>,\n    open: boolean,\n    handleSelect: (texture: TextureImage)=>void,\n    handleUpload: (files: FileList)=>void,\n    handleClose: ()=>void,\n}\n\nexport const TexturePicker: React.FC<TexturePickerProps> = (props) => {\n    const classes = useStyles();\n    const [selected, setSelected] = useState(0);\n\n    return (\n        <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n                Picker Texture\n            </DialogTitle>\n            <DialogContent dividers>\n                <div className={classes.root}>\n                    <GridList cellHeight={160} className={classes.gridList} cols={3}>\n                        {props.textures.map((texture, index) => (\n                            <GridListTile key={texture.img} cols={1} onClick={() => {setSelected(index)}} className={ index === selected ? 'selected-tile': ''}>\n                                <img src={texture.img} alt={texture.texture.name} />\n                                <GridListTileBar\n                                    title={texture.texture.name}\n                                    subtitle={<span>by: {texture.texture.name}</span>}\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <FileInput onChange={props.handleUpload} />\n                <Button variant={'contained'} onClick={() => {props.handleSelect(props.textures[selected]); props.handleClose(); }}>Confirm</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import * as React from \"react\";\nimport {AdditiveBlending, Blending, NormalBlending, Texture} from \"three\";\nimport {AppContext, ApplicationContextConsumer, TextureImage} from \"./ApplicationContext\";\nimport {ParticleSystem, RenderMode} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {TexturePicker} from \"./TexturePicker\";\nimport Button from \"@material-ui/core/Button\";\n\n\ninterface ParticleRendererPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface ParticleRendererPropertiesState {\n    texturePickerOpen: boolean,\n}\n\nexport class ParticleRendererProperties extends React.PureComponent<ParticleRendererPropertiesProps, ParticleRendererPropertiesState> {\n    constructor(props: Readonly<ParticleRendererPropertiesProps>) {\n        super(props);\n        this.state = {\n            texturePickerOpen: false,\n        };\n    }\n    onChangeStartTile = (index: number) => {\n        this.props.particleSystem.startTileIndex = index;\n        this.props.updateProperties();\n    };\n    onChangeUTileCount = (u: number) => {\n        this.props.particleSystem.uTileCount = u;\n        this.props.updateProperties();\n    };\n    onChangeVTileCount = (v: number) => {\n        this.props.particleSystem.vTileCount = v;\n        this.props.updateProperties();\n    };\n    onChangeBlending = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"Normal\":\n                this.props.particleSystem.blending = NormalBlending;\n                this.props.particleSystem.emitter.material.blending = NormalBlending;\n                break;\n            case \"Additive\":\n                this.props.particleSystem.blending = AdditiveBlending;\n                this.props.particleSystem.emitter.material.blending = AdditiveBlending;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBlending = (blending: Blending) => {\n        switch (blending) {\n            case NormalBlending:\n                return \"Normal\"\n            case AdditiveBlending:\n                return \"Additive\";\n        }\n    }\n\n    onChangeRenderMode = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"BillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.BillBoard;\n                break;\n            case \"LocalSpaceBillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.LocalSpaceBillBoard;\n                break;\n            case \"StretchedBillBoard\":\n                this.props.particleSystem.renderMode = RenderMode.StretchedBillBoard;\n                break;\n        }\n        this.props.updateProperties();\n    }\n    getValueOfRenderMode = (renderMode: RenderMode) => {\n        switch (renderMode) {\n            case RenderMode.BillBoard:\n                return \"BillBoard\"\n            case RenderMode.LocalSpaceBillBoard:\n                return \"LocalSpaceBillBoard\";\n            case RenderMode.StretchedBillBoard:\n                return \"StretchedBillBoard\";\n        }\n    }\n\n    onChangeWorldSpace = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"True\":\n                this.props.particleSystem.worldSpace = true;\n                break;\n            case \"False\":\n                this.props.particleSystem.worldSpace = false;\n                break;\n        }\n        this.props.updateProperties();\n    }\n\n    getValueOfBoolean = (worldSpace: boolean) => {\n        return worldSpace ? 'True': 'False';\n    }\n\n    onUploadTexture = (context: AppContext) => (files: FileList) => {\n        console.log(\"upload texture\");\n        const image = document.createElement( 'img' );\n        const texture = new Texture( image );\n        image.onload = function()  {\n            texture.needsUpdate = true;\n        };\n        if (files && files[0]) {\n            const reader = new FileReader();\n            reader.onload = function (e) {\n                image.src = reader.result as string;\n            };\n            reader.readAsDataURL(files[0]);\n\n            texture.name = files[0].name;\n            const textureImage = {\n                img: URL.createObjectURL(files[0]),\n                texture: texture\n            };\n            context.actions.addTexture(textureImage);\n        }\n\n    }\n\n    onChangeTexture = (textureImage: TextureImage) => {\n        console.log(\"change texture\");\n        this.props.particleSystem.texture = textureImage.texture;\n        this.props.updateProperties();\n    };\n\n    closeTexturePicker = () => {\n        this.setState({texturePickerOpen: false});\n    }\n\n    openTexturePicker = () => {\n        this.setState({texturePickerOpen: true});\n    }\n\n    render() {\n        console.log('rendered particleRendererProperties');\n        return (\n            <div className=\"property-container\">\n                <div className=\"property\">\n                    <label className=\"name\">RenderMode</label>\n                    <select className=\"editor-select\" onChange={this.onChangeRenderMode} value={this.getValueOfRenderMode(this.props.particleSystem.renderMode)}>\n                        <option key={0} value=\"BillBoard\" >BillBoard</option>\n                        <option key={1} value=\"LocalSpaceBillBoard\" >Local Space BillBoard</option>\n                        <option key={2} value=\"StretchedBillBoard\" >Stretched BillBoard</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">World Space</label>\n                    <select className=\"editor-select\" onChange={this.onChangeWorldSpace} value={this.getValueOfBoolean(this.props.particleSystem.worldSpace)}>\n                        <option key={0} value=\"True\" >True</option>\n                        <option key={1} value=\"False\" >False</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Blend Mode</label>\n                    <select className=\"editor-select\" onChange={this.onChangeBlending} value={this.getValueOfBlending(this.props.particleSystem.blending)}>\n                        <option key={0} value=\"Normal\" >Normal</option>\n                        <option key={1} value=\"Additive\" >Additive</option>\n                    </select>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">UVTile</label>\n                    <label>Column:</label><NumberInput value={this.props.particleSystem.uTileCount} onChange={this.onChangeUTileCount}/>\n                    <label>Row:</label><NumberInput value={this.props.particleSystem.vTileCount} onChange={this.onChangeVTileCount}/>\n                </div>\n                <div className=\"property\">\n                    <label className=\"name\">Start Tile Index</label><NumberInput value={this.props.particleSystem.startTileIndex} onChange={this.onChangeStartTile}/>\n                </div>\n                <ApplicationContextConsumer>\n                    {context => {\n                        let texture;\n                        for (let i = 0; i < context!.textures.length; i ++) {\n                            if (context!.textures[i].texture === this.props.particleSystem.texture) {\n                                texture = context!.textures[i];\n                            }\n                        }\n                        let gridWidth=1, gridHeight=1;\n                        if (texture) {\n                            gridWidth = texture.texture.image.width / this.props.particleSystem.uTileCount;\n                            gridHeight = texture.texture.image.height / this.props.particleSystem.vTileCount;\n                        }\n                        return <div className=\"property\">\n                            <label className=\"name\">Texture</label>\n                            {texture && <img className=\"texture-preview\" src={texture.img} alt={texture.texture.name}\n                                             style={{objectPosition: `-${(this.props.particleSystem.startTileIndex % this.props.particleSystem.uTileCount) * gridWidth}px -${Math.floor(this.props.particleSystem.startTileIndex / this.props.particleSystem.uTileCount) * gridHeight}px`,\n                                                 width: gridWidth,\n                                                 height: gridHeight}}/>}\n                            {/*this.props.particleSystem.texture ? this.props.particleSystem.texture.name : \"..\"*/}\n                            <Button onClick={this.openTexturePicker} variant={'contained'}>Pick</Button>\n                        </div>;\n                    }}\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <TexturePicker handleClose={this.closeTexturePicker} handleSelect={this.onChangeTexture} handleUpload={this.onUploadTexture(context)} open={this.state.texturePickerOpen} textures={context.textures}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport \"./ScriptEditor.scss\";\n\ninterface ScriptEditorProps{\n    value: string;\n    onChange: (value: string)=>void;\n}\n\nexport const ScriptEditor : React.FC<ScriptEditorProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value);\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (value: string) => {\n        if (focus) {\n            setInputValue(value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        if (inputValue !== props.value)\n            props.onChange(inputValue);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value) {\n            setInputValue(props.value);\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            if (inputValue !== props.value)\n                props.onChange(inputValue);\n        }\n    };\n\n    return(\n        <Editor\n            value={focus? inputValue: props.value}\n            onValueChange={onInputChange}\n            highlight={code => highlight(code, languages.javascript, \"javascript\")}\n            padding={10}\n            onBlur={onInputBlur} onFocus={onInputFocus} //onKeyDown={onKeyDown}\n            style={{\n                fontFamily: '\"Consolas\", monospace',\n                fontSize: 12,\n            }}\n        />);\n};\n","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {StringInput} from \"./editors/StringInput\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScriptPropertiesProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ScriptPropertiesState {\n\n}\n\nexport class ScriptProperties extends React.PureComponent<ScriptPropertiesProps, ScriptPropertiesState> {\n    constructor(props: Readonly<ScriptPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeScript = (script: string) => {\n        if (this.props.object3d.userData === null) {\n            this.props.object3d.userData = {};\n        }\n        this.props.object3d.userData.script = script;\n        this.props.object3d.userData.func = new Function(\"delta\", script);\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                        <label className=\"script\">Script:</label>\n                        <ScriptEditor value={this.props.object3d.userData.script || \"\"} onChange={this.onChangeScript}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import {Blending, Texture} from \"three\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ConeEmitter, DonutEmitter, EmitterShape, ParticleSystem, PointEmitter, SphereEmitter} from \"three.quarks\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {FileInput} from \"./editors/FileInput\";\nimport React, {ChangeEvent} from \"react\";\n\n\ninterface EmitterShapePropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface EmitterShapePropertiesState {\n\n}\n\nexport class EmitterShapeProperties extends React.PureComponent<EmitterShapePropertiesProps, EmitterShapePropertiesState> {\n    constructor(props: Readonly<EmitterShapePropertiesProps>) {\n        super(props);\n    }\n\n    getValueOfShape = (shape: EmitterShape) => {\n        if (this.props.particleSystem.emitterShape instanceof PointEmitter) {\n            return \"PointEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof ConeEmitter) {\n            return \"ConeEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof SphereEmitter) {\n            return \"SphereEmitter\";\n        } else if (this.props.particleSystem.emitterShape instanceof DonutEmitter) {\n            return \"DonutEmitter\";\n        } else\n            return \"\";\n    };\n\n    onChangeShape = (e: ChangeEvent<HTMLSelectElement>) => {\n        switch (e.target.value) {\n            case \"PointEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof PointEmitter)) {\n                    this.props.particleSystem.emitterShape = new PointEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"ConeEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof ConeEmitter)) {\n                    this.props.particleSystem.emitterShape = new ConeEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"SphereEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof SphereEmitter)) {\n                    this.props.particleSystem.emitterShape = new SphereEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n            case \"DonutEmitter\":\n                if (!(this.props.particleSystem.emitterShape instanceof DonutEmitter)) {\n                    this.props.particleSystem.emitterShape = new DonutEmitter();\n                    this.props.updateProperties();\n                }\n                break;\n        }\n    };\n\n    onChangeKeyValue = (k: string, v: number) => {\n        (this.props.particleSystem.emitterShape as any)[k] = v;\n        this.props.updateProperties();\n    };\n\n    renderShapeProperties() {\n        const properties = [];\n        for (const key in this.props.particleSystem.emitterShape) {\n            properties.push(\n                <div key={key} className=\"property\">\n                    <label className=\"name\">{key}:</label>\n                    <NumberInput value={(this.props.particleSystem.emitterShape as any)[key]} onChange={(value) => this.onChangeKeyValue(key, value)}/>\n                </div>\n            );\n        }\n        return properties;\n    }\n\n    render() {\n        return (\n            <div className=\"property-container\">\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Shape</label>\n                            <select className=\"editor-select\" onChange={this.onChangeShape} value={this.getValueOfShape(this.props.particleSystem.emitterShape)}>\n                                <option key={0} value=\"PointEmitter\" >PointEmitter</option>\n                                <option key={1} value=\"ConeEmitter\" >ConeEmitter</option>\n                                <option key={2} value=\"SphereEmitter\" >SphereEmitter</option>\n                                <option key={3} value=\"DonutEmitter\" >DonutEmitter</option>\n                            </select>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context && this.renderShapeProperties()}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {\n    ParticleSystem,\n    ParticleEmitter\n} from \"three.quarks\";\nimport {Object3D} from \"three\";\nimport {ButtonGroup} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\ninterface ParticleSystemControllerProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ParticleSystemControllerState {\n\n}\n\nexport class ParticleSystemController extends React.PureComponent<ParticleSystemControllerProps, ParticleSystemControllerState> {\n    constructor(props: Readonly<ParticleSystemControllerProps>) {\n        super(props);\n    }\n\n    getSystems = () => {\n        const systems: Array<ParticleSystem> = [];\n        if (this.props.object3d instanceof ParticleEmitter) {\n            systems.push(this.props.object3d.system);\n        }\n        this.props.object3d.traverse(object => {\n            if (object instanceof ParticleEmitter) {\n                systems.push(object.system);\n            }\n        });\n        return systems;\n    };\n\n    checkPause = (systems: Array<ParticleSystem>) => {\n        let paused = true;\n        systems.forEach(system => {\n            if (!system.paused) {\n                paused = false;\n            }\n        });\n        return paused;\n    };\n\n    togglePause = () => {\n        const systems: Array<ParticleSystem> = this.getSystems();\n        const paused = this.checkPause(systems);\n\n        if (paused) {\n            systems.forEach(system => {\n                system.play();\n            });\n        } else {\n            systems.forEach(system => {\n                system.pause();\n            });\n        }\n        this.props.updateProperties();\n    };\n\n    onRestart = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n        });\n        this.props.updateProperties();\n    };\n\n    onStop = () => {\n        this.getSystems().forEach((system) => {\n            system.restart();\n            system.pause();\n        });\n        this.props.updateProperties();\n    };\n\n    render() {\n        return (\n            <div>\n                <ToggleButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                </ToggleButtonGroup>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                        <Button disabled={!this.checkPause(this.getSystems())} onClick={this.togglePause}>Play</Button>\n                        <Button disabled={this.checkPause(this.getSystems())} onClick={this.togglePause}>Pause</Button>\n                        <Button onClick={this.onRestart}>Restart</Button>\n                        <Button onClick={this.onStop}>Stop</Button>\n                    </ButtonGroup>}\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {\n    Behavior, Bezier,\n    ColorOverLife, ColorRange,\n    FrameOverLife, Gradient,\n    OrbitOverLife,\n    ParticleSystem, PiecewiseBezier,\n    RotationOverLife,\n    SizeOverLife, SpeedOverLife\n} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, FunctionColorGenerator} from \"three.quarks\";\nimport {ListItem, List, Theme, createStyles, Typography, Toolbar, ListItemIcon} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {memo} from \"react\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport {Vector4} from \"three\";\n\ninterface BehaviorsPropertiesProps {\n    behaviors: Array<Behavior>,\n    updateProperties: Function,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        listRoot: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        }\n    }),\n);\n\n/*\n<GeneratorEditor name=\"Start Speed\"\n                 allowedType={valueFunctionTypes}\n                 generator={this.props.particleSystem.startSpeed}\n                 updateGenerator={this.onChangeStartSpeed}/>*/\n\nfunction BehaviorsPropertiesFunc(props: BehaviorsPropertiesProps) {\n    const classes = useStyles();\n\n\n\n    const [checked, setChecked] = React.useState([0, 1, 2, 3]);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const handleListItemClick = (event: any, index: number) => {\n        setSelectedIndex(index);\n    };\n\n    const handleToggle = (value: number) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n\n    const deleteBehavior = () => {\n        props.behaviors.splice(selectedIndex, 1);\n        props.updateProperties();\n    }\n\n    const onAddNewBehavior = (type: string) => () => {\n        let behavior;\n        switch (type) {\n            case 'ColorOverLife':\n                behavior = new ColorOverLife(new ColorRange(new Vector4(1.0, 1.0, 1.0, 1.0), new Vector4(0.0, 0.0, 0.0, 1.0)));\n                break;\n            case 'RotationOverLife':\n                behavior = new RotationOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SizeOverLife':\n                behavior = new SizeOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'FrameOverLife':\n                behavior = new FrameOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'OrbitOverLife':\n                behavior = new OrbitOverLife(new PiecewiseBezier([[new Bezier(0, 0.3333, 0.6667, 1.0), 0]]));\n                break;\n            case 'SpeedOverLife':\n                behavior = new SpeedOverLife(new PiecewiseBezier([[new Bezier(1, 0.6667, 0.3333, 0.0), 0]]));\n                break;\n            default:\n                break;\n        }\n        if (behavior) {\n            props.behaviors.push(behavior);\n            props.updateProperties();\n        }\n        setAnchorEl(null);\n    }\n\n    const onChangeBehaviorFunc = (index: number) => (generator: GenericGenerator) => {\n        const behavior = props.behaviors[index];\n        switch (behavior.type) {\n            case 'ColorOverLife':\n                (behavior as ColorOverLife).func = generator as FunctionColorGenerator;\n                break;\n            case 'RotationOverLife':\n                (behavior as RotationOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            case 'SizeOverLife':\n                (behavior as SizeOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'FrameOverLife':\n                (behavior as FrameOverLife).func = generator as FunctionValueGenerator;\n                break;\n            case 'OrbitOverLife':\n                (behavior as OrbitOverLife).angularVelocityFunc = generator as FunctionValueGenerator | ValueGenerator;\n                break;\n            default:\n                break;\n        }\n        console.log(\"changing\")\n        props.updateProperties();\n    }\n\n    return (\n        <div className={classes.root}>\n            <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n                <Button color=\"inherit\" aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\" onClick={handleClick} id=\"new-button\">\n                    New\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={onAddNewBehavior('SizeOverLife')}>SizeOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('ColorOverLife')}>ColorOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('RotationOverLife')}>RotationOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('FrameOverLife')}>FrameOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('OrbitOverLife')}>OrbitOverLife</MenuItem>\n                    <MenuItem onClick={onAddNewBehavior('SpeedOverLife')}>SpeedOverLife</MenuItem>\n                </Menu>\n                <Button onClick={deleteBehavior}>Remove</Button>\n            </ButtonGroup>\n            <List dense className={classes.listRoot}>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                    props.behaviors.map((behavior, index) => {\n                        const labelId = `behavior-list-label-${index}`;\n                        let valueTypes: Array<ValueType>;\n                        let func: FunctionColorGenerator | FunctionValueGenerator | ValueGenerator | null = null;\n                        switch (behavior.type) {\n                            case 'ColorOverLife':\n                                valueTypes = ['functionColor'];\n                                func = (behavior as ColorOverLife).func;\n                                break;\n                            case 'RotationOverLife':\n                                valueTypes = ['functionValue', 'value'];\n                                func = (behavior as RotationOverLife).angularVelocityFunc;\n                                break;\n                            case 'SizeOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SizeOverLife).func;\n                                break;\n                            case 'FrameOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as FrameOverLife).func;\n                                break;\n                            case 'OrbitOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as OrbitOverLife).angularVelocityFunc;\n                                break;\n                            case 'SpeedOverLife':\n                                valueTypes = ['functionValue'];\n                                func = (behavior as SpeedOverLife).func;\n                                break;\n                            default:\n                                valueTypes = ['functionValue'];\n                                break;\n                        }\n\n                        let editor;\n                        if (func) {\n                            editor = <GeneratorEditor name=\"Func\"\n                                                      allowedType={valueTypes}\n                                                      generator={func!}\n                                                      updateGenerator={onChangeBehaviorFunc(index)}/>;\n                        }\n\n                        return (\n                            <ListItem key={index}\n                                      selected={selectedIndex === index}\n                                      onClick={(event) => handleListItemClick(event, index)}>\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge=\"end\"\n                                        onChange={handleToggle(index)}\n                                        checked={checked.indexOf(index) !== -1}\n                                        inputProps={{'aria-labelledby': labelId}}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={behavior.type}\n                                              secondary={editor}/>\n                            </ListItem>\n                        );\n                    })\n                }\n                </ApplicationContextConsumer>\n            </List>\n        </div>\n    );\n}\n\nexport const BehaviorsProperties = React.memo(BehaviorsPropertiesFunc);","import * as React from \"react\";\nimport {ConstantValue} from \"three.quarks\";\nimport {FunctionValueGenerator, ValueGenerator} from \"three.quarks\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"three.quarks\";\nimport {Object3D, Vector4} from \"three\";\nimport {ObjectProperties} from \"./ObjectProperties\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport {ParticleSystemProperties} from \"./ParticleSystemProperties\";\nimport {ParticleRendererProperties} from \"./ParticleRendererProperties\";\nimport {ScriptProperties} from \"./ScriptProperties\";\nimport {EmitterShapeProperties} from \"./EmitterShapeProperties\";\nimport {ParticleSystemController} from \"./ParticleSystemController\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport MuiAccordion from \"@material-ui/core/Accordion\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport \"./PropertiesEditor.scss\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {BehaviorsProperties} from \"./BehaviorsProperties\";\n\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 32,\n        '&$expanded': {\n            minHeight: 32,\n        },\n    },\n    content: {\n        margin: 0,\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expandIcon: {\n        padding: 0\n    },\n    expanded: {},\n})(MuiAccordionSummary);\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\ninterface PropertiesEditorProps {\n    object3d: Object3D\n}\n\nexport default function PropertiesEditor(props: PropertiesEditorProps) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(['Object', 'EmitterShape', 'ParticleRenderer','ParticleEmitter','Behaviors','Script']);\n\n    const handleChange = (panel: string) => (event: any, isExpanded: boolean) => {\n        if (isExpanded) {\n            expanded.push(panel);\n        } else {\n            expanded.splice(expanded.indexOf(panel), 1);\n        }\n        setExpanded(expanded);\n    };\n\n    return (\n        <div className={classes.root}>\n            <ApplicationContextConsumer>\n                {context => context &&\n                    <ParticleSystemController object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                }\n            </ApplicationContextConsumer>\n            <Accordion expanded={(expanded.indexOf('Object') !== -1)} onChange={handleChange('Object')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"object-content\"\n                    id=\"object-header\"\n                >\n                    <Typography className={classes.heading}>Object</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ObjectProperties object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('EmitterShape') !== -1)} onChange={handleChange('EmitterShape')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"emitter-shape-content\"\n                    id=\"emitter-shape-header\">\n                    <Typography className={classes.heading}>Emitter Shape</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <EmitterShapeProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                    updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleRenderer') !== -1)} onChange={handleChange('ParticleRenderer')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-renderer-content\"\n                    id=\"particle-renderer-header\">\n                    <Typography className={classes.heading}>Particle Renderer</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleRendererProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                        updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('ParticleEmitter') !== -1)} onChange={handleChange('ParticleEmitter')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"particle-emitter-content\"\n                    id=\"particle-emitter-header\">\n                    <Typography className={classes.heading}>Particle Emitter</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ParticleSystemProperties particleSystem={(props.object3d as ParticleEmitter).system}\n                                                      updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            {(props.object3d instanceof ParticleEmitter) &&\n            <Accordion expanded={(expanded.indexOf('Behaviors') !== -1)} onChange={handleChange('Behaviors')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"behaviors-content\"\n                    id=\"behaviors-header\">\n                    <Typography className={classes.heading}>Behaviors</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <BehaviorsProperties behaviors={(props.object3d as ParticleEmitter).system.behaviors}\n                                                        updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n            }\n            <Accordion expanded={(expanded.indexOf('Script') !== -1)} onChange={handleChange('Script')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"script-content\"\n                    id=\"script-header\"\n                >\n                    <Typography className={classes.heading}>Script</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ScriptProperties object3d={props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}","import {Object3D, Vector4} from \"three\";\nimport {\n    Bezier,\n    ColorGenerator, ColorRange, ConstantColor, ConstantValue,\n    FunctionColorGenerator,\n    FunctionValueGenerator, IntervalValue,\n    ParticleEmitter, PiecewiseBezier, RandomColor,\n    RenderMode,\n    ValueGenerator\n} from \"three.quarks\";\n\n\nexport class CodeExporter {\n    /*static traverseObject(parent: Object3D): string {\n        for (let i = 0; i < parent.children.length; i ++) {\n\n        }\n    }*/\n\n    static camelize(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return index === 0 ? word.toLowerCase() : word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static camelizeClass(str: string): string {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n            return word.toUpperCase();\n        }).replace(/\\s+/g, '');\n    }\n\n    static exportBezier(func: Bezier) {\n        return `new Bezier(${func.p[0]}, ${func.p[1]}, ${func.p[2]}, ${func.p[3]})`;\n    }\n    static exportColor(color: Vector4) {\n        return `new Vector4(${color.x}, ${color.y}, ${color.z}, ${color.w})`;\n    }\n    static exportFunction(func: ValueGenerator | ColorGenerator | FunctionValueGenerator | FunctionColorGenerator, indent: number = 0): string {\n        if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        } else if (func instanceof ConstantColor) {\n            return `new ConstantColor(${CodeExporter.exportColor(func.color)})`;\n        } else if (func instanceof IntervalValue) {\n            return `new IntervalValue(${func.a}, ${func.b})`;\n        } else if (func instanceof ColorRange) {\n            return `new ColorRange(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof RandomColor) {\n            return `new RandomColor(${CodeExporter.exportColor(func.a)}, ${CodeExporter.exportColor(func.b)})`;\n        } else if (func instanceof PiecewiseBezier) {\n            let code = `new PiecewiseBezier(\\n`;\n            for (let i = 0; i < func.functions.length - 1; i ++) {\n                code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[i][0])}, ${func.functions[i][1]}], `;\n            }\n            code += ' '.repeat(indent + 4) + `[${CodeExporter.exportBezier(func.functions[func.functions.length - 1][0])}, ${func.functions[func.functions.length - 1][1]}]`;\n            code += ' '.repeat(indent) + `)`;\n            return code;\n        } else if (func instanceof ConstantValue) {\n            return `new ConstantValue(${func.value})`;\n        }\n        throw new Error();\n    }\n\n    static exportParticleEmitter(emitter: ParticleEmitter): string {\n\n        let name = CodeExporter.camelize(emitter.name);\n        let system = emitter.system;\n        let code = `        this.${name} = new ParticleSystem(renderer, {\\n`;\n        code += `            duration: ${system.duration},\\n`;\n        code += `            looping: ${system.looping},\\n`;\n        code += `            startLife: ${CodeExporter.exportFunction(system.startLife)},\\n`;\n        code += `            startSpeed: ${CodeExporter.exportFunction(system.startSpeed)},\\n`;\n        code += `            startSize: ${CodeExporter.exportFunction(system.startSize)},\\n`;\n        code += `            startColor: ${CodeExporter.exportFunction(system.startColor)},\\n`;\n        code += `            worldSpace: ${system.worldSpace},\\n`;\n        code += `            maxParticle: ${system.maxParticle},\\n`;\n        code += `            emissionOverTime: ${CodeExporter.exportFunction(system.emissionOverTime)},\\n`;\n        code += `            emissionBursts: ${system.emissionBursts},\\n`;\n        code += `            shape: ${system.emitterShape},\\n`;\n        code += `            texture: texture,\\n`;\n        code += `            blending: ${system.blending},\\n`;\n        code += `            startTileIndex: ${system.startTileIndex},\\n`;\n        code += `            uTileCount: ${system.uTileCount},\\n`;\n        code += `            vTileCount: ${system.vTileCount},\\n`;\n        code += `            renderMode: ${system.renderMode},\\n`;\n        if (system.renderMode == RenderMode.StretchedBillBoard) {\n            code += `            speedFactor: ${system.speedFactor},\\n`;\n        }\n        code += '        }\\n';\n\n        for (let i = 0; i < system.behaviors.length; i ++) {\n            code += `        this.${name}.addBehavior(${system.behaviors[i]});\\n`;\n        }\n        code += `        this.${name}.emitter.renderOrder = ${system.emitter.renderOrder};\\n`\n        code += `        this.${name}.emitter.name = '${name}';\\n`\n        code += `        this.${name}.emitter.rotation.set(${system.emitter.rotation.x}, ${system.emitter.rotation.y}, ${system.emitter.rotation.z});\\n`;\n        code += `        this.add(this.${name}.emitter);\\n`\n        code += '\\n';\n        return code;\n    }\n\n    static exportCode(root: Object3D): string {\n\n        let code = `export class ${CodeExporter.camelizeClass(root.name)} extends Group {\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `    private ${CodeExporter.camelize(root.children[i].name)}: ParticleSystem;\\n`\n            }\n        }\n\n        code += '\\n';\n        code += `    constructor() {\\n`;\n        code += `        super();\\n`;\n        code += `        this.name = '${root.name}';\\n`;\n        code += `        let texture = new TextureLoader().load( \"textures/texture1.png\");\\n`;\n        code += `        texture.name = \"textures/texture1.png\";\\n`;\n\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += CodeExporter.exportParticleEmitter(root.children[i] as ParticleEmitter);\n            }\n        }\n\n        code += '    }\\n';\n        code += '\\n';\n\n        code += '    update(delta: number) {\\n';\n        for (let i = 0; i < root.children.length; i ++) {\n            if (root.children[i] instanceof ParticleEmitter) {\n                code += `        ${CodeExporter.camelize(root.children[i].name)}.update(delta);\\n`\n            }\n        }\n        code += '    }\\n';\n        code += '}';\n        return code;\n    }\n}","import React from \"react\";\nimport Dialog, {DialogProps} from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {ScriptEditor} from \"./editors/ScriptEditor\";\n\ninterface ScrollDialogProps {\n    content: string,\n    open: boolean,\n    handleClose: () =>void,\n}\n\nexport function ScrollDialog(props: ScrollDialogProps) {\n\n    const descriptionElementRef = React.useRef<HTMLElement>(null);\n    /*React.useEffect(() => {\n        if (props.open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [props.open]);\n    <DialogContentText\n        id=\"scroll-dialog-description\"\n        ref={descriptionElementRef}\n        tabIndex={-1}\n    >\n        {props.content}\n    </DialogContentText>*/\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={props.handleClose}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Particle System Code</DialogTitle>\n                <DialogContent dividers={true}>\n                    <ScriptEditor value={props.content} onChange={()=>{}}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.handleClose} color=\"primary\">\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {Object3D, Scene} from \"three\";\nimport {ParticleSystem} from \"three.quarks\";\nimport {ParticleEmitter} from \"three.quarks\";\nimport './SceneGraphView.scss';\nimport {Item, Menu, MenuProvider, Separator, Submenu} from \"react-contexify\";\nimport {MenuItemEventHandler} from \"react-contexify/lib/types\";\nimport 'react-contexify/dist/ReactContexify.min.css';\nimport {TreeView} from \"@material-ui/lab\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {makeStyles, createStyles} from \"@material-ui/core\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport {Theme, Typography} from \"@material-ui/core\";\nimport {CodeExporter} from \"../util/CodeExporter\";\nimport {ScrollDialog} from \"./ScrollDialog\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n    }),\n);\n\ninterface SceneGraphViewMaterialProps {\n    context: AppContext;\n    scene: Scene;\n}\n\nexport function SceneGraphViewMaterial(props: SceneGraphViewMaterialProps) {\n    const classes = useStyles();\n\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [expanded, setExpanded] = React.useState<string[]>(['1']);\n\n    const [code, setCode] = React.useState<string>('');\n\n    const countIndex = (index: number, object3d: Object3D): [Object3D | null, number] => {\n        if (index == 0)\n            return [object3d, 0];\n        index --;\n        for (const child of object3d.children) {\n            const [res, newIndex] = countIndex(index, child);\n            if (res)\n                return [res, newIndex];\n            index = newIndex;\n        }\n        return [null, index];\n    }\n    const handleSelect = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\n        if (nodeIds.length > 0) {\n            const index = parseInt(nodeIds[0]);\n            const [object3d, ] = countIndex(index, props.scene);\n            if (object3d)\n                props.context.actions.select(object3d);\n        }\n        setSelected(nodeIds);\n    };\n    const handleToggle = (event: React.ChangeEvent<{}>, nodeIds: string[]) => {\n        //console.log(event.target);\n        if ((event.target as HTMLElement).tagName === 'svg') {\n            setExpanded(nodeIds);\n        }\n    };\n\n    const getObjectName = (object3d: Object3D) => {\n        let type = 'object';\n        if (object3d instanceof ParticleEmitter) {\n            type = 'ParticleSystem';\n        } else {\n            type =  object3d.type;\n        }\n        let name = 'unnamed';\n        if (object3d.name) {\n            name = object3d.name;\n        }\n        return `[${type}] ${name}`;\n    };\n\n    const renderObject = (context: AppContext, object3d: THREE.Object3D, index: number): [React.ReactNode, number] => {\n        const items = [];\n        const originIndex = index;\n        index ++;\n        for (const child of object3d.children) {\n            const result = renderObject(context, child, index);\n            items.push(result[0]);\n            index = result[1];\n        }\n        //selected={context.selection.indexOf(object3d) !== -1}\n        if (originIndex !== 0) {\n            return [<TreeItem key={object3d.uuid} nodeId={\"\" + originIndex}\n                              label={<MenuProvider id=\"scene-graph-menu\" data={{object3d: object3d}}>{getObjectName(object3d) + \" \" + originIndex}</MenuProvider>}>\n                {items}\n            </TreeItem>, index];\n        } else {\n            return [<React.Fragment>{items}</React.Fragment>, index];\n        }\n    }\n\n    const onContextMenuClick = ({event, props}: MenuItemEventHandler) => console.log(event,props);\n\n    const onContextMenuAddParticleSystem = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.addObject3d('particle', (contextProps! as any).object3d);\n        }\n    };\n    const onContextMenuRemove = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.removeObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuDuplicate = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps as any).object3d) {\n            props.context.actions.duplicateObject3d((contextProps! as any).object3d);\n        }\n    };\n\n    const onContextMenuExport = ({event, props: contextProps}: MenuItemEventHandler) => {\n        console.log(contextProps);\n        if ((contextProps! as any).object3d) {\n            const a = document.createElement(\"a\");\n            const json = (contextProps! as any).object3d.toJSON();\n            //json.images.forEach((image: any) => image.url = \"http://localhost:3000/textures/texture1.png\");\n            const file = new Blob([JSON.stringify(json)], {type: \"application/json\"});\n            a.href = URL.createObjectURL(file);\n            a.download = \"scene.json\";\n            a.click();\n        }\n    };\n\n    const onContextMenuCopyCode = ({event, props: contextProps}: MenuItemEventHandler) => {\n        if ((contextProps! as any).object3d) {\n            setCode(CodeExporter.exportCode((contextProps! as any).object3d));\n        }\n    }\n\n    const renderScene = (context: AppContext, scene: THREE.Scene) => {\n        return <TreeView\n            className={classes.root}\n            selected={selected}\n            expanded={expanded}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n        >\n            {renderObject(context, scene, 0)[0]}\n        </TreeView>;\n    }\n\n    return <div>\n        <Typography className={classes.heading}> Scene Graph </Typography>\n        {renderScene(props.context, props.scene)}\n        <Menu id=\"scene-graph-menu\">\n            <Submenu label=\"Add\">\n                <Item onClick={onContextMenuAddParticleSystem}>Particle System</Item>\n                <Item onClick={onContextMenuClick}>Ball</Item>\n            </Submenu>\n            <Separator />\n            <Item onClick={onContextMenuDuplicate}>Duplicate</Item>\n            <Item onClick={onContextMenuRemove}>Remove</Item>\n            <Separator />\n            <Item onClick={onContextMenuExport}>Export</Item>\n            <Item onClick={onContextMenuCopyCode}>Copy JS Code</Item>\n        </Menu>\n        <ScrollDialog content={code} open={code !== ''} handleClose={()=>{setCode('')}} />\n    </div>;\n}\n","import * as React from \"react\";\nimport MainMenu from \"./MainMenu\";\nimport {ThreejsViewport} from \"./ThreejsViewport\";\nimport PropertiesEditor from \"./PropertiesEditor\";\nimport {SceneGraphView} from \"./SceneGraphView\";\n\nimport './layout.scss';\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\nimport {SceneGraphViewMaterial} from \"./SceneGraphViewMaterial\";\n\nexport class Application extends React.Component<{}> {\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n    }\n\n    render() {\n        console.log(\"render application\");\n        return (\n            <ApplicationContextProvider>\n                <div className=\"application\">\n                    <div className=\"main-menu\">\n                        <ApplicationContextConsumer>\n                            {context => context &&\n                                <MainMenu onSaveAs={context.actions.onSaveAs}\n                                            onImport={context.actions.onImport}\n                                            onOpenDemo={context.actions.onOpenDemo}/>\n                            }\n                        </ApplicationContextConsumer>\n                    </div>\n                    <div className=\"main\">\n                        <div className=\"viewport\">\n                            <ThreejsViewport width={600} height={600}/>\n                        </div>\n                        <div className=\"sidebar\">\n                            <ApplicationContextConsumer>\n                                {\n                                    context => context && <SceneGraphViewMaterial context={context} scene={context.scene} />\n                                }\n                            </ApplicationContextConsumer>\n                            <ApplicationContextConsumer>\n                                { context => context && context.selection.length > 0 &&\n                                    <PropertiesEditor object3d={context.selection[0]}/>\n                                }\n                            </ApplicationContextConsumer>\n                        </div>\n                    </div>\n                </div>\n            </ApplicationContextProvider>);\n    }\n}\n","import React, {useState} from 'react';\nimport {PiecewiseBezier} from \"three.quarks\";\nimport {Application} from \"./components/Application\";\nimport {Bezier} from \"three.quarks\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { ThemeProvider } from '@material-ui/core';\nimport {BezierCurvesEditor} from \"./components/editors/bezier/BezierCurvesEditor\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: red[500],\n        },\n    },\n    typography: {\n        fontSize: 12,\n    }\n});\n\nconst App: React.FC = () => {\n\n  /*const [bezierCurves, setBezierCurves] = useState(\n      new PiecewiseBezier([\n        [new Bezier(0, 0.5 / 3, 0.5 / 3 * 2, 0.5), 0],\n        [new Bezier(0.5, 0.5, 0.5, 0.5), 0.5],\n      ])\n  );return <div className=\"App\">\n        <header className=\"App-header\">\n            <BezierCurvesEditor width={200} height={100} value={bezierCurves} onChange={(bezierCurves) => {setBezierCurves(bezierCurves)}}/>\n        </header>\n    </div>;*/\n\n    return (<ThemeProvider theme={theme}><Application /></ThemeProvider>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
